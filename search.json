[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Developing R/Bioconductor packages for Genomics",
    "section": "",
    "text": "Welcome\nThis is the landing page for the “Developing R/Bioconductor packages for Genomics” workshop, ed. 2023.\nAuthors: Jacques Serizay [aut, cre] Version: 1.0.0 Modified: 2023-06-14 Compiled: 2023-11-09 Environment: R version 4.3.2 (2023-10-31), Bioconductor 3.18 License: MIT + file LICENSE Copyright: J. Serizay"
  },
  {
    "objectID": "index.html#dates",
    "href": "index.html#dates",
    "title": "Developing R/Bioconductor packages for Genomics",
    "section": "Dates",
    "text": "Dates\n13-17 Nov. 2023."
  },
  {
    "objectID": "index.html#where",
    "href": "index.html#where",
    "title": "Developing R/Bioconductor packages for Genomics",
    "section": "Where",
    "text": "Where\nThis course will be held online."
  },
  {
    "objectID": "index.html#overview",
    "href": "index.html#overview",
    "title": "Developing R/Bioconductor packages for Genomics",
    "section": "Overview",
    "text": "Overview\nThis course aims at making Bioconductor package development at one’s reach. It is specifically designed for biologists and newer bioinformaticians who may find themselves using R/Bioconductor packages and who wish to expand their programatic toolkit.\nOverall, this course will help the attendees gain accurate insights in the fundamental notions required for proper R/Bioconductor package development. We will cover key theory concepts about package development and Bioconductor ecosystem, supported by a range of demonstration and exercises, to get a complete understanding of all the steps of package development.\nThroughout this workshop, we will put an emphasis on the best practices for developing a package embedded in the R/Bioconductor ecosystem."
  },
  {
    "objectID": "index.html#format",
    "href": "index.html#format",
    "title": "Developing R/Bioconductor packages for Genomics",
    "section": "Format",
    "text": "Format\nThe course is structured in modules over five days. Each day will contain a mix of formal lectures, demonstration, and hands-on exercises.\n\nFormal lectures will cover the key theory required to understand the principles of package development (~2h).\nFollowing these lectures, practical examples will be shown to illustrate how to translate the acquired knowledge into a real-life R/Bioconductor package. At this stage, trainees will get acquainted with state-of-the-art Bioconductor ecosystem as well as the best coding practices in bioinformatics.\nDuring the rest of the daily sessions, trainees will work by themselves, following guided exercises to practice their package development skills. Hints and solution are provided for each exercise. The exercises will mainly focus on specific concepts introduced earlier that day.\n\nOffice hours will take place during the last hour of the exercises. An instructor will be available to answer individual questions related to daily exercises.\nA Slack channel will also be available so that Q&A are available for everybody."
  },
  {
    "objectID": "index.html#targeted-audience-and-required-background",
    "href": "index.html#targeted-audience-and-required-background",
    "title": "Developing R/Bioconductor packages for Genomics",
    "section": "Targeted audience and required background",
    "text": "Targeted audience and required background\nThe material is suitable both for experimentalists who want to learn more about R/Bioconductor ecosystem as well as computational biologists who want to expand their set of coding skills. However, the course will be mostly beneficial to those who have already been familiarized to the R environment.\nThe requirements for this course are:\n\nKnowledge of next-generation sequencing data processing and formats;\nBasic programming experience in R (writing a function, variable types, loading packages);\nWorking knowledge of Unix / command line interface (managing files, running programs, reading manuals!) is recommended (basic bash commands cd, ls, cp, …), though is not formally required;\nBioconductor experience is a plus, though is not formally required."
  },
  {
    "objectID": "index.html#learning-outcomes",
    "href": "index.html#learning-outcomes",
    "title": "Developing R/Bioconductor packages for Genomics",
    "section": "Learning outcomes",
    "text": "Learning outcomes\nAt the end of this course, you should be able to:\n\nLeverage Bioconductor principles of interoperability (a.k.a “do-not-reinvent-the-wheel!”)\nWrite sets of interconnected functions for genomic data\nDocument and test functions\nManage package dependencies\nManage package versions\nManage package continuous integration\nBuild a dedicated website for your package\nSubmitting/releasing/maintaining your package\nDisseminating your package (publish it!)"
  },
  {
    "objectID": "index.html#about-the-instructor",
    "href": "index.html#about-the-instructor",
    "title": "Developing R/Bioconductor packages for Genomics",
    "section": "About the instructor",
    "text": "About the instructor\nJacques owns a PhD in Genomics from Cambridge University (UK). His formal training is in experimental biology, which means that he understands the challenges and issues associated with bench troubleshooting and optimization. However, his primary focus shifted towards large-scale genomic analysis years ago, and he now has a deep knowledge of the range of genome-wide datasets (bulk and single-cell!) that are available out there.\nBecause he originally comes from the bench, the examples demonstrated in this course will be designed from “real-life” situations. You may even find yourself using the package you will create during this course for your own analyses!\njacques dot serizay at pasteur dot fr"
  },
  {
    "objectID": "content/program.html#monday",
    "href": "content/program.html#monday",
    "title": "Program",
    "section": "Monday:",
    "text": "Monday:\n\nDevelopment environment (R, RStudio, dev. packages)\nWriting functions\nIntroduction to package building\nLocal development with devtools\nIntroduction to Github Actions and Continuous Integration"
  },
  {
    "objectID": "content/program.html#tuesday",
    "href": "content/program.html#tuesday",
    "title": "Program",
    "section": "Tuesday:",
    "text": "Tuesday:\n\nDocumenting functions\nTesting functions and pacakge\nManaging dependencies & namespace"
  },
  {
    "objectID": "content/program.html#wednesday",
    "href": "content/program.html#wednesday",
    "title": "Program",
    "section": "Wednesday:",
    "text": "Wednesday:\n\nIntroduction to Bioconductor: interoperability and other key notions\nCreating custom Bioconductor objects\nIncluding data to packages"
  },
  {
    "objectID": "content/program.html#thursday",
    "href": "content/program.html#thursday",
    "title": "Program",
    "section": "Thursday:",
    "text": "Thursday:\n\nPackage vignettes: demonstrating how to use your package\nSubmitting/releasing/maintaining a Bioconductor package"
  },
  {
    "objectID": "content/program.html#friday",
    "href": "content/program.html#friday",
    "title": "Program",
    "section": "Friday:",
    "text": "Friday:\n\nOther types of Bioconductor packages: datasets, workflows, …\nDisseminating your package: package support website, JOSS, rOpenSci…"
  },
  {
    "objectID": "content/prerequisites.html#r-version",
    "href": "content/prerequisites.html#r-version",
    "title": "Prerequesites",
    "section": "R version",
    "text": "R version\nWorking with the latest R release (at least) or even better, with the R-devel version (currently R 4.4) is a requirement for this workshop.\nFind instructions on how to install it here:\n\nmacOS\nWindows\nLinux"
  },
  {
    "objectID": "content/prerequisites.html#r-packages",
    "href": "content/prerequisites.html#r-packages",
    "title": "Prerequesites",
    "section": "R packages",
    "text": "R packages\n\nBioconductor version 3.19 (if possible) or 3.18."
  },
  {
    "objectID": "content/prerequisites.html#rstudio",
    "href": "content/prerequisites.html#rstudio",
    "title": "Prerequesites",
    "section": "RStudio",
    "text": "RStudio\nIdeally latest version."
  },
  {
    "objectID": "content/extra.html#r-styling",
    "href": "content/extra.html#r-styling",
    "title": "Extra resources",
    "section": "R styling",
    "text": "R styling\n\nhttp://bioconductor.org/developers/how-to/coding-style/\nhttps://jef.works/R-style-guide/\nhttps://style.tidyverse.org/\nhttps://google.github.io/styleguide/Rguide.html"
  },
  {
    "objectID": "content/extra.html#rbioconductor-programming",
    "href": "content/extra.html#rbioconductor-programming",
    "title": "Extra resources",
    "section": "R/Bioconductor programming",
    "text": "R/Bioconductor programming\n\nThe excellent R guide for beginners, by Emmanuel Paradis: PDF\nThe more advanced R for data science book by Hadley Wickam himself: https://r4ds.had.co.nz/\nThe 150+ pages comprehensive book to learn everything about Bioconductor. This ebook has been published by Kasper D. Hansen and is freely available under the CC BY-NC-SA 4.0 license: PDF"
  },
  {
    "objectID": "content/extra.html#scientific-readings",
    "href": "content/extra.html#scientific-readings",
    "title": "Extra resources",
    "section": "Scientific readings",
    "text": "Scientific readings\n\n2014 Nat. Methods paper from Bioconductor core team describing important object classes\nTo see from how far Bioc comes from...\nMore research on osmotic stress reponse"
  },
  {
    "objectID": "content/day1/Lecture0_course-overview.html",
    "href": "content/day1/Lecture0_course-overview.html",
    "title": "Lecture 0 - Introduction to the workshop",
    "section": "",
    "text": "&lt;div id=\"quarto-navigation-envelope\" class=\"hidden\"&gt;\n&lt;p&gt;&lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar-title\"&gt;Developing R/Bioconductor packages for Genomics&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-navbar-title\"&gt;Developing R/Bioconductor packages for Genomics&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-next\"&gt;Lecture 1 - R package architecture&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-prev\"&gt;Extra resources&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/index.html\"&gt;Welcome&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/program.html\"&gt;Program&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/prerequisites.html\"&gt;Prerequesites&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/extra.html\"&gt;Extra resources&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-1\"&gt;Day 1&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day1/Lecture0_course-overview.html\"&gt;Lecture 0 - Introduction to the workshop&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day1/Lecture1_Package_architecture.html\"&gt;Lecture 1 - R package architecture&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day1/Lecture2_Bioconductor_101.html\"&gt;Lecture 2 - Introduction to Bioconductor&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day1/Lecture3_Developer-toolkit.html\"&gt;Lecture 3 - R developer toolkit&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-2\"&gt;Day 2&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day2/Lecture4_Continuous_development-writing-documenting-testing.html\"&gt;Lecture 4 - Continuous development&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day2/Lecture5_Bioconductor_201.html\"&gt;Lecture 5 - Bioconductor 201&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-3\"&gt;Day 3&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day3/Lecture6_Git_versionning.html\"&gt;Lecture 6 - Git versioning&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day3/Lecture7_Improving_package-data_vignettes-....html\"&gt;Lecture 8 - Vignettes and data&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-4\"&gt;Day 4&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day4/Lecture8_S4_classes.html\"&gt;Lecture 7 - S4 classes in Bioconductor&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day4/Lecture9_Bioconductor_submission.html\"&gt;Lecture 9 - Bioconductor package submission&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-5\"&gt;Day 5&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day5/Lecture10_Other_package_types.html\"&gt;Lecture 10 - Other package types&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day5/Lecture11_Package_dissemination.html\"&gt;Lecture 11 - Package dissemination&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-6\"&gt;Exercises&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/exercises/Day1_Getting-started-with-Bioc.html\"&gt;&lt;span class=\"chapter-number\"&gt;1&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Getting started with Bioconductor ecosystem&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/exercises/Day2_Developer-virtuous-circle.html\"&gt;&lt;span class=\"chapter-number\"&gt;2&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Kickstarting an R package&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/exercises/Day3_Examples-test-data.html\"&gt;&lt;span class=\"chapter-number\"&gt;3&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Enriching package functionalities&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/exercises/Day4_S4-classes.html\"&gt;&lt;span class=\"chapter-number\"&gt;4&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Using S4 classes in a package&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/exercises/Day5_package-integration.html\"&gt;&lt;span class=\"chapter-number\"&gt;5&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Improving package integration&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"footer-left\"&gt;Developing R/Bioconductor packages for Genomics |&lt;br /&gt;\nJ. Serizay&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"footer-right\"&gt;This book was built with &lt;a href=\"https://quarto.org/\"&gt;Quarto&lt;/a&gt;.&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-breadcrumbs-faba582bb439d5cd836a674b446052c1\"&gt;Day 1&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-breadcrumbs-0f40504bcadf9bb373313e5aaa34b455\"&gt;Lecture 0 - Introduction to the workshop&lt;/span&gt;&lt;/p&gt;\n&lt;/div&gt;\n&lt;div id=\"quarto-meta-markdown\" class=\"hidden\"&gt;\n&lt;p&gt;&lt;span class=\"hidden\" data-render-id=\"quarto-metatitle\"&gt;Developing R/Bioconductor packages for Genomics - Lecture 0 - Introduction to the workshop&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-twittercardtitle\"&gt;Developing R/Bioconductor packages for Genomics - Lecture 0 - Introduction to the workshop&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-ogcardtitle\"&gt;Developing R/Bioconductor packages for Genomics - Lecture 0 - Introduction to the workshop&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-metasitename\"&gt;Developing R/Bioconductor packages for Genomics&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-twittercarddesc\"&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-ogcardddesc\"&gt;&lt;/span&gt;&lt;/p&gt;\n&lt;/div&gt;\n\n&lt;/main&gt; &lt;!-- /main --&gt;\n&lt;script id = \"quarto-html-after-body\" type=\"application/javascript\"&gt;\nwindow.document.addEventListener(\"DOMContentLoaded\", function (event) {\n  const toggleBodyColorMode = (bsSheetEl) =&gt; {\n    const mode = bsSheetEl.getAttribute(\"data-mode\");\n    const bodyEl = window.document.querySelector(\"body\");\n    if (mode === \"dark\") {\n      bodyEl.classList.add(\"quarto-dark\");\n      bodyEl.classList.remove(\"quarto-light\");\n    } else {\n      bodyEl.classList.add(\"quarto-light\");\n      bodyEl.classList.remove(\"quarto-dark\");\n    }\n  }\n  const toggleBodyColorPrimary = () =&gt; {\n    const bsSheetEl = window.document.querySelector(\"link#quarto-bootstrap\");\n    if (bsSheetEl) {\n      toggleBodyColorMode(bsSheetEl);\n    }\n  }\n  toggleBodyColorPrimary();  \n  const icon = \"\";\n  const anchorJS = new window.AnchorJS();\n  anchorJS.options = {\n    placement: 'right',\n    icon: icon\n  };\n  anchorJS.add('.anchored');\n  const isCodeAnnotation = (el) =&gt; {\n    for (const clz of el.classList) {\n      if (clz.startsWith('code-annotation-')) {                     \n        return true;\n      }\n    }\n    return false;\n  }\n  const clipboard = new window.ClipboardJS('.code-copy-button', {\n    text: function(trigger) {\n      const codeEl = trigger.previousElementSibling.cloneNode(true);\n      for (const childEl of codeEl.children) {\n        if (isCodeAnnotation(childEl)) {\n          childEl.remove();\n        }\n      }\n      return codeEl.innerText;\n    }\n  });\n  clipboard.on('success', function(e) {\n    // button target\n    const button = e.trigger;\n    // don't keep focus\n    button.blur();\n    // flash \"checked\"\n    button.classList.add('code-copy-button-checked');\n    var currentTitle = button.getAttribute(\"title\");\n    button.setAttribute(\"title\", \"Copied!\");\n    let tooltip;\n    if (window.bootstrap) {\n      button.setAttribute(\"data-bs-toggle\", \"tooltip\");\n      button.setAttribute(\"data-bs-placement\", \"left\");\n      button.setAttribute(\"data-bs-title\", \"Copied!\");\n      tooltip = new bootstrap.Tooltip(button, \n        { trigger: \"manual\", \n          customClass: \"code-copy-button-tooltip\",\n          offset: [0, -8]});\n      tooltip.show();    \n    }\n    setTimeout(function() {\n      if (tooltip) {\n        tooltip.hide();\n        button.removeAttribute(\"data-bs-title\");\n        button.removeAttribute(\"data-bs-toggle\");\n        button.removeAttribute(\"data-bs-placement\");\n      }\n      button.setAttribute(\"title\", currentTitle);\n      button.classList.remove('code-copy-button-checked');\n    }, 1000);\n    // clear code selection\n    e.clearSelection();\n  });\n  function tippyHover(el, contentFn) {\n    const config = {\n      allowHTML: true,\n      content: contentFn,\n      maxWidth: 500,\n      delay: 100,\n      arrow: false,\n      appendTo: function(el) {\n          return el.parentElement;\n      },\n      interactive: true,\n      interactiveBorder: 10,\n      theme: 'quarto',\n      placement: 'bottom-start'\n    };\n    window.tippy(el, config); \n  }\n  const noterefs = window.document.querySelectorAll('a[role=\"doc-noteref\"]');\n  for (var i=0; i&lt;noterefs.length; i++) {\n    const ref = noterefs[i];\n    tippyHover(ref, function() {\n      // use id or data attribute instead here\n      let href = ref.getAttribute('data-footnote-href') || ref.getAttribute('href');\n      try { href = new URL(href).hash; } catch {}\n      const id = href.replace(/^#\\/?/, \"\");\n      const note = window.document.getElementById(id);\n      return note.innerHTML;\n    });\n  }\n      let selectedAnnoteEl;\n      const selectorForAnnotation = ( cell, annotation) =&gt; {\n        let cellAttr = 'data-code-cell=\"' + cell + '\"';\n        let lineAttr = 'data-code-annotation=\"' +  annotation + '\"';\n        const selector = 'span[' + cellAttr + '][' + lineAttr + ']';\n        return selector;\n      }\n      const selectCodeLines = (annoteEl) =&gt; {\n        const doc = window.document;\n        const targetCell = annoteEl.getAttribute(\"data-target-cell\");\n        const targetAnnotation = annoteEl.getAttribute(\"data-target-annotation\");\n        const annoteSpan = window.document.querySelector(selectorForAnnotation(targetCell, targetAnnotation));\n        const lines = annoteSpan.getAttribute(\"data-code-lines\").split(\",\");\n        const lineIds = lines.map((line) =&gt; {\n          return targetCell + \"-\" + line;\n        })\n        let top = null;\n        let height = null;\n        let parent = null;\n        if (lineIds.length &gt; 0) {\n            //compute the position of the single el (top and bottom and make a div)\n            const el = window.document.getElementById(lineIds[0]);\n            top = el.offsetTop;\n            height = el.offsetHeight;\n            parent = el.parentElement.parentElement;\n          if (lineIds.length &gt; 1) {\n            const lastEl = window.document.getElementById(lineIds[lineIds.length - 1]);\n            const bottom = lastEl.offsetTop + lastEl.offsetHeight;\n            height = bottom - top;\n          }\n          if (top !== null && height !== null && parent !== null) {\n            // cook up a div (if necessary) and position it \n            let div = window.document.getElementById(\"code-annotation-line-highlight\");\n            if (div === null) {\n              div = window.document.createElement(\"div\");\n              div.setAttribute(\"id\", \"code-annotation-line-highlight\");\n              div.style.position = 'absolute';\n              parent.appendChild(div);\n            }\n            div.style.top = top - 2 + \"px\";\n            div.style.height = height + 4 + \"px\";\n            let gutterDiv = window.document.getElementById(\"code-annotation-line-highlight-gutter\");\n            if (gutterDiv === null) {\n              gutterDiv = window.document.createElement(\"div\");\n              gutterDiv.setAttribute(\"id\", \"code-annotation-line-highlight-gutter\");\n              gutterDiv.style.position = 'absolute';\n              const codeCell = window.document.getElementById(targetCell);\n              const gutter = codeCell.querySelector('.code-annotation-gutter');\n              gutter.appendChild(gutterDiv);\n            }\n            gutterDiv.style.top = top - 2 + \"px\";\n            gutterDiv.style.height = height + 4 + \"px\";\n          }\n          selectedAnnoteEl = annoteEl;\n        }\n      };\n      const unselectCodeLines = () =&gt; {\n        const elementsIds = [\"code-annotation-line-highlight\", \"code-annotation-line-highlight-gutter\"];\n        elementsIds.forEach((elId) =&gt; {\n          const div = window.document.getElementById(elId);\n          if (div) {\n            div.remove();\n          }\n        });\n        selectedAnnoteEl = undefined;\n      };\n      // Attach click handler to the DT\n      const annoteDls = window.document.querySelectorAll('dt[data-target-cell]');\n      for (const annoteDlNode of annoteDls) {\n        annoteDlNode.addEventListener('click', (event) =&gt; {\n          const clickedEl = event.target;\n          if (clickedEl !== selectedAnnoteEl) {\n            unselectCodeLines();\n            const activeEl = window.document.querySelector('dt[data-target-cell].code-annotation-active');\n            if (activeEl) {\n              activeEl.classList.remove('code-annotation-active');\n            }\n            selectCodeLines(clickedEl);\n            clickedEl.classList.add('code-annotation-active');\n          } else {\n            // Unselect the line\n            unselectCodeLines();\n            clickedEl.classList.remove('code-annotation-active');\n          }\n        });\n      }\n  const findCites = (el) =&gt; {\n    const parentEl = el.parentElement;\n    if (parentEl) {\n      const cites = parentEl.dataset.cites;\n      if (cites) {\n        return {\n          el,\n          cites: cites.split(' ')\n        };\n      } else {\n        return findCites(el.parentElement)\n      }\n    } else {\n      return undefined;\n    }\n  };\n  var bibliorefs = window.document.querySelectorAll('a[role=\"doc-biblioref\"]');\n  for (var i=0; i&lt;bibliorefs.length; i++) {\n    const ref = bibliorefs[i];\n    const citeInfo = findCites(ref);\n    if (citeInfo) {\n      tippyHover(citeInfo.el, function() {\n        var popup = window.document.createElement('div');\n        citeInfo.cites.forEach(function(cite) {\n          var citeDiv = window.document.createElement('div');\n          citeDiv.classList.add('hanging-indent');\n          citeDiv.classList.add('csl-entry');\n          var biblioDiv = window.document.getElementById('ref-' + cite);\n          if (biblioDiv) {\n            citeDiv.innerHTML = biblioDiv.innerHTML;\n          }\n          popup.appendChild(citeDiv);\n        });\n        return popup.innerHTML;\n      });\n    }\n  }\n});\n&lt;/script&gt;\n&lt;nav class=\"page-navigation\"&gt;\n  &lt;div class=\"nav-page nav-page-previous\"&gt;\n      &lt;a  href=\"/content/extra.html\" class=\"pagination-link\"&gt;\n        &lt;i class=\"bi bi-arrow-left-short\"&gt;&lt;/i&gt; &lt;span class=\"nav-page-text\"&gt;Extra resources&lt;/span&gt;\n      &lt;/a&gt;          \n  &lt;/div&gt;\n  &lt;div class=\"nav-page nav-page-next\"&gt;\n      &lt;a  href=\"/content/day1/Lecture1_Package_architecture.html\" class=\"pagination-link\"&gt;\n        &lt;span class=\"nav-page-text\"&gt;Lecture 1 - R package architecture&lt;/span&gt; &lt;i class=\"bi bi-arrow-right-short\"&gt;&lt;/i&gt;\n      &lt;/a&gt;\n  &lt;/div&gt;\n&lt;/nav&gt;\n&lt;/div&gt; &lt;!-- /content --&gt;\n&lt;footer class=\"footer\"&gt;\n  &lt;div class=\"nav-footer\"&gt;\n    &lt;div class=\"nav-footer-left\"&gt;\n      &lt;div class='footer-contents'&gt;Developing R/Bioconductor packages for Genomics |  \nJ. Serizay\n&lt;/div&gt;  \n    &lt;/div&gt;   \n    &lt;div class=\"nav-footer-center\"&gt;\n      &nbsp;\n    &lt;/div&gt;\n    &lt;div class=\"nav-footer-right\"&gt;\n      &lt;div class='footer-contents'&gt;This book was built with &lt;a href=\"https://quarto.org/\"&gt;Quarto&lt;/a&gt;.\n&lt;/div&gt;  \n    &lt;/div&gt;\n  &lt;/div&gt;\n&lt;/footer&gt;\n\n&lt;/body&gt;\n\n&lt;/html&gt;"
  },
  {
    "objectID": "content/day1/Lecture1_Package_architecture.html",
    "href": "content/day1/Lecture1_Package_architecture.html",
    "title": "Lecture 1 - R package architecture",
    "section": "",
    "text": "&lt;div id=\"quarto-navigation-envelope\" class=\"hidden\"&gt;\n&lt;p&gt;&lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar-title\"&gt;Developing R/Bioconductor packages for Genomics&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-navbar-title\"&gt;Developing R/Bioconductor packages for Genomics&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-next\"&gt;Lecture 2 - Introduction to Bioconductor&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-prev\"&gt;Lecture 0 - Introduction to the workshop&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/index.html\"&gt;Welcome&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/program.html\"&gt;Program&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/prerequisites.html\"&gt;Prerequesites&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/extra.html\"&gt;Extra resources&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-1\"&gt;Day 1&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day1/Lecture0_course-overview.html\"&gt;Lecture 0 - Introduction to the workshop&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day1/Lecture1_Package_architecture.html\"&gt;Lecture 1 - R package architecture&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day1/Lecture2_Bioconductor_101.html\"&gt;Lecture 2 - Introduction to Bioconductor&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day1/Lecture3_Developer-toolkit.html\"&gt;Lecture 3 - R developer toolkit&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-2\"&gt;Day 2&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day2/Lecture4_Continuous_development-writing-documenting-testing.html\"&gt;Lecture 4 - Continuous development&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day2/Lecture5_Bioconductor_201.html\"&gt;Lecture 5 - Bioconductor 201&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-3\"&gt;Day 3&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day3/Lecture6_Git_versionning.html\"&gt;Lecture 6 - Git versioning&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day3/Lecture7_Improving_package-data_vignettes-....html\"&gt;Lecture 8 - Vignettes and data&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-4\"&gt;Day 4&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day4/Lecture8_S4_classes.html\"&gt;Lecture 7 - S4 classes in Bioconductor&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day4/Lecture9_Bioconductor_submission.html\"&gt;Lecture 9 - Bioconductor package submission&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-5\"&gt;Day 5&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day5/Lecture10_Other_package_types.html\"&gt;Lecture 10 - Other package types&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day5/Lecture11_Package_dissemination.html\"&gt;Lecture 11 - Package dissemination&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-6\"&gt;Exercises&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/exercises/Day1_Getting-started-with-Bioc.html\"&gt;&lt;span class=\"chapter-number\"&gt;1&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Getting started with Bioconductor ecosystem&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/exercises/Day2_Developer-virtuous-circle.html\"&gt;&lt;span class=\"chapter-number\"&gt;2&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Kickstarting an R package&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/exercises/Day3_Examples-test-data.html\"&gt;&lt;span class=\"chapter-number\"&gt;3&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Enriching package functionalities&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/exercises/Day4_S4-classes.html\"&gt;&lt;span class=\"chapter-number\"&gt;4&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Using S4 classes in a package&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/exercises/Day5_package-integration.html\"&gt;&lt;span class=\"chapter-number\"&gt;5&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Improving package integration&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"footer-left\"&gt;Developing R/Bioconductor packages for Genomics |&lt;br /&gt;\nJ. Serizay&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"footer-right\"&gt;This book was built with &lt;a href=\"https://quarto.org/\"&gt;Quarto&lt;/a&gt;.&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-breadcrumbs-faba582bb439d5cd836a674b446052c1\"&gt;Day 1&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-breadcrumbs-a3fa72d1af9bf60dcb90400c1c07d757\"&gt;Lecture 1 - R package architecture&lt;/span&gt;&lt;/p&gt;\n&lt;/div&gt;\n&lt;div id=\"quarto-meta-markdown\" class=\"hidden\"&gt;\n&lt;p&gt;&lt;span class=\"hidden\" data-render-id=\"quarto-metatitle\"&gt;Developing R/Bioconductor packages for Genomics - Lecture 1 - R package architecture&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-twittercardtitle\"&gt;Developing R/Bioconductor packages for Genomics - Lecture 1 - R package architecture&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-ogcardtitle\"&gt;Developing R/Bioconductor packages for Genomics - Lecture 1 - R package architecture&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-metasitename\"&gt;Developing R/Bioconductor packages for Genomics&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-twittercarddesc\"&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-ogcardddesc\"&gt;&lt;/span&gt;&lt;/p&gt;\n&lt;/div&gt;\n\n&lt;/main&gt; &lt;!-- /main --&gt;\n&lt;script id = \"quarto-html-after-body\" type=\"application/javascript\"&gt;\nwindow.document.addEventListener(\"DOMContentLoaded\", function (event) {\n  const toggleBodyColorMode = (bsSheetEl) =&gt; {\n    const mode = bsSheetEl.getAttribute(\"data-mode\");\n    const bodyEl = window.document.querySelector(\"body\");\n    if (mode === \"dark\") {\n      bodyEl.classList.add(\"quarto-dark\");\n      bodyEl.classList.remove(\"quarto-light\");\n    } else {\n      bodyEl.classList.add(\"quarto-light\");\n      bodyEl.classList.remove(\"quarto-dark\");\n    }\n  }\n  const toggleBodyColorPrimary = () =&gt; {\n    const bsSheetEl = window.document.querySelector(\"link#quarto-bootstrap\");\n    if (bsSheetEl) {\n      toggleBodyColorMode(bsSheetEl);\n    }\n  }\n  toggleBodyColorPrimary();  \n  const icon = \"\";\n  const anchorJS = new window.AnchorJS();\n  anchorJS.options = {\n    placement: 'right',\n    icon: icon\n  };\n  anchorJS.add('.anchored');\n  const isCodeAnnotation = (el) =&gt; {\n    for (const clz of el.classList) {\n      if (clz.startsWith('code-annotation-')) {                     \n        return true;\n      }\n    }\n    return false;\n  }\n  const clipboard = new window.ClipboardJS('.code-copy-button', {\n    text: function(trigger) {\n      const codeEl = trigger.previousElementSibling.cloneNode(true);\n      for (const childEl of codeEl.children) {\n        if (isCodeAnnotation(childEl)) {\n          childEl.remove();\n        }\n      }\n      return codeEl.innerText;\n    }\n  });\n  clipboard.on('success', function(e) {\n    // button target\n    const button = e.trigger;\n    // don't keep focus\n    button.blur();\n    // flash \"checked\"\n    button.classList.add('code-copy-button-checked');\n    var currentTitle = button.getAttribute(\"title\");\n    button.setAttribute(\"title\", \"Copied!\");\n    let tooltip;\n    if (window.bootstrap) {\n      button.setAttribute(\"data-bs-toggle\", \"tooltip\");\n      button.setAttribute(\"data-bs-placement\", \"left\");\n      button.setAttribute(\"data-bs-title\", \"Copied!\");\n      tooltip = new bootstrap.Tooltip(button, \n        { trigger: \"manual\", \n          customClass: \"code-copy-button-tooltip\",\n          offset: [0, -8]});\n      tooltip.show();    \n    }\n    setTimeout(function() {\n      if (tooltip) {\n        tooltip.hide();\n        button.removeAttribute(\"data-bs-title\");\n        button.removeAttribute(\"data-bs-toggle\");\n        button.removeAttribute(\"data-bs-placement\");\n      }\n      button.setAttribute(\"title\", currentTitle);\n      button.classList.remove('code-copy-button-checked');\n    }, 1000);\n    // clear code selection\n    e.clearSelection();\n  });\n  function tippyHover(el, contentFn) {\n    const config = {\n      allowHTML: true,\n      content: contentFn,\n      maxWidth: 500,\n      delay: 100,\n      arrow: false,\n      appendTo: function(el) {\n          return el.parentElement;\n      },\n      interactive: true,\n      interactiveBorder: 10,\n      theme: 'quarto',\n      placement: 'bottom-start'\n    };\n    window.tippy(el, config); \n  }\n  const noterefs = window.document.querySelectorAll('a[role=\"doc-noteref\"]');\n  for (var i=0; i&lt;noterefs.length; i++) {\n    const ref = noterefs[i];\n    tippyHover(ref, function() {\n      // use id or data attribute instead here\n      let href = ref.getAttribute('data-footnote-href') || ref.getAttribute('href');\n      try { href = new URL(href).hash; } catch {}\n      const id = href.replace(/^#\\/?/, \"\");\n      const note = window.document.getElementById(id);\n      return note.innerHTML;\n    });\n  }\n      let selectedAnnoteEl;\n      const selectorForAnnotation = ( cell, annotation) =&gt; {\n        let cellAttr = 'data-code-cell=\"' + cell + '\"';\n        let lineAttr = 'data-code-annotation=\"' +  annotation + '\"';\n        const selector = 'span[' + cellAttr + '][' + lineAttr + ']';\n        return selector;\n      }\n      const selectCodeLines = (annoteEl) =&gt; {\n        const doc = window.document;\n        const targetCell = annoteEl.getAttribute(\"data-target-cell\");\n        const targetAnnotation = annoteEl.getAttribute(\"data-target-annotation\");\n        const annoteSpan = window.document.querySelector(selectorForAnnotation(targetCell, targetAnnotation));\n        const lines = annoteSpan.getAttribute(\"data-code-lines\").split(\",\");\n        const lineIds = lines.map((line) =&gt; {\n          return targetCell + \"-\" + line;\n        })\n        let top = null;\n        let height = null;\n        let parent = null;\n        if (lineIds.length &gt; 0) {\n            //compute the position of the single el (top and bottom and make a div)\n            const el = window.document.getElementById(lineIds[0]);\n            top = el.offsetTop;\n            height = el.offsetHeight;\n            parent = el.parentElement.parentElement;\n          if (lineIds.length &gt; 1) {\n            const lastEl = window.document.getElementById(lineIds[lineIds.length - 1]);\n            const bottom = lastEl.offsetTop + lastEl.offsetHeight;\n            height = bottom - top;\n          }\n          if (top !== null && height !== null && parent !== null) {\n            // cook up a div (if necessary) and position it \n            let div = window.document.getElementById(\"code-annotation-line-highlight\");\n            if (div === null) {\n              div = window.document.createElement(\"div\");\n              div.setAttribute(\"id\", \"code-annotation-line-highlight\");\n              div.style.position = 'absolute';\n              parent.appendChild(div);\n            }\n            div.style.top = top - 2 + \"px\";\n            div.style.height = height + 4 + \"px\";\n            let gutterDiv = window.document.getElementById(\"code-annotation-line-highlight-gutter\");\n            if (gutterDiv === null) {\n              gutterDiv = window.document.createElement(\"div\");\n              gutterDiv.setAttribute(\"id\", \"code-annotation-line-highlight-gutter\");\n              gutterDiv.style.position = 'absolute';\n              const codeCell = window.document.getElementById(targetCell);\n              const gutter = codeCell.querySelector('.code-annotation-gutter');\n              gutter.appendChild(gutterDiv);\n            }\n            gutterDiv.style.top = top - 2 + \"px\";\n            gutterDiv.style.height = height + 4 + \"px\";\n          }\n          selectedAnnoteEl = annoteEl;\n        }\n      };\n      const unselectCodeLines = () =&gt; {\n        const elementsIds = [\"code-annotation-line-highlight\", \"code-annotation-line-highlight-gutter\"];\n        elementsIds.forEach((elId) =&gt; {\n          const div = window.document.getElementById(elId);\n          if (div) {\n            div.remove();\n          }\n        });\n        selectedAnnoteEl = undefined;\n      };\n      // Attach click handler to the DT\n      const annoteDls = window.document.querySelectorAll('dt[data-target-cell]');\n      for (const annoteDlNode of annoteDls) {\n        annoteDlNode.addEventListener('click', (event) =&gt; {\n          const clickedEl = event.target;\n          if (clickedEl !== selectedAnnoteEl) {\n            unselectCodeLines();\n            const activeEl = window.document.querySelector('dt[data-target-cell].code-annotation-active');\n            if (activeEl) {\n              activeEl.classList.remove('code-annotation-active');\n            }\n            selectCodeLines(clickedEl);\n            clickedEl.classList.add('code-annotation-active');\n          } else {\n            // Unselect the line\n            unselectCodeLines();\n            clickedEl.classList.remove('code-annotation-active');\n          }\n        });\n      }\n  const findCites = (el) =&gt; {\n    const parentEl = el.parentElement;\n    if (parentEl) {\n      const cites = parentEl.dataset.cites;\n      if (cites) {\n        return {\n          el,\n          cites: cites.split(' ')\n        };\n      } else {\n        return findCites(el.parentElement)\n      }\n    } else {\n      return undefined;\n    }\n  };\n  var bibliorefs = window.document.querySelectorAll('a[role=\"doc-biblioref\"]');\n  for (var i=0; i&lt;bibliorefs.length; i++) {\n    const ref = bibliorefs[i];\n    const citeInfo = findCites(ref);\n    if (citeInfo) {\n      tippyHover(citeInfo.el, function() {\n        var popup = window.document.createElement('div');\n        citeInfo.cites.forEach(function(cite) {\n          var citeDiv = window.document.createElement('div');\n          citeDiv.classList.add('hanging-indent');\n          citeDiv.classList.add('csl-entry');\n          var biblioDiv = window.document.getElementById('ref-' + cite);\n          if (biblioDiv) {\n            citeDiv.innerHTML = biblioDiv.innerHTML;\n          }\n          popup.appendChild(citeDiv);\n        });\n        return popup.innerHTML;\n      });\n    }\n  }\n});\n&lt;/script&gt;\n&lt;nav class=\"page-navigation\"&gt;\n  &lt;div class=\"nav-page nav-page-previous\"&gt;\n      &lt;a  href=\"/content/day1/Lecture0_course-overview.html\" class=\"pagination-link\"&gt;\n        &lt;i class=\"bi bi-arrow-left-short\"&gt;&lt;/i&gt; &lt;span class=\"nav-page-text\"&gt;Lecture 0 - Introduction to the workshop&lt;/span&gt;\n      &lt;/a&gt;          \n  &lt;/div&gt;\n  &lt;div class=\"nav-page nav-page-next\"&gt;\n      &lt;a  href=\"/content/day1/Lecture2_Bioconductor_101.html\" class=\"pagination-link\"&gt;\n        &lt;span class=\"nav-page-text\"&gt;Lecture 2 - Introduction to Bioconductor&lt;/span&gt; &lt;i class=\"bi bi-arrow-right-short\"&gt;&lt;/i&gt;\n      &lt;/a&gt;\n  &lt;/div&gt;\n&lt;/nav&gt;\n&lt;/div&gt; &lt;!-- /content --&gt;\n&lt;footer class=\"footer\"&gt;\n  &lt;div class=\"nav-footer\"&gt;\n    &lt;div class=\"nav-footer-left\"&gt;\n      &lt;div class='footer-contents'&gt;Developing R/Bioconductor packages for Genomics |  \nJ. Serizay\n&lt;/div&gt;  \n    &lt;/div&gt;   \n    &lt;div class=\"nav-footer-center\"&gt;\n      &nbsp;\n    &lt;/div&gt;\n    &lt;div class=\"nav-footer-right\"&gt;\n      &lt;div class='footer-contents'&gt;This book was built with &lt;a href=\"https://quarto.org/\"&gt;Quarto&lt;/a&gt;.\n&lt;/div&gt;  \n    &lt;/div&gt;\n  &lt;/div&gt;\n&lt;/footer&gt;\n\n&lt;/body&gt;\n\n&lt;/html&gt;"
  },
  {
    "objectID": "content/day1/Lecture2_Bioconductor_101.html",
    "href": "content/day1/Lecture2_Bioconductor_101.html",
    "title": "Lecture 2 - Introduction to Bioconductor",
    "section": "",
    "text": "&lt;div id=\"quarto-navigation-envelope\" class=\"hidden\"&gt;\n&lt;p&gt;&lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar-title\"&gt;Developing R/Bioconductor packages for Genomics&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-navbar-title\"&gt;Developing R/Bioconductor packages for Genomics&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-next\"&gt;Lecture 3 - R developer toolkit&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-prev\"&gt;Lecture 1 - R package architecture&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/index.html\"&gt;Welcome&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/program.html\"&gt;Program&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/prerequisites.html\"&gt;Prerequesites&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/extra.html\"&gt;Extra resources&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-1\"&gt;Day 1&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day1/Lecture0_course-overview.html\"&gt;Lecture 0 - Introduction to the workshop&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day1/Lecture1_Package_architecture.html\"&gt;Lecture 1 - R package architecture&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day1/Lecture2_Bioconductor_101.html\"&gt;Lecture 2 - Introduction to Bioconductor&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day1/Lecture3_Developer-toolkit.html\"&gt;Lecture 3 - R developer toolkit&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-2\"&gt;Day 2&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day2/Lecture4_Continuous_development-writing-documenting-testing.html\"&gt;Lecture 4 - Continuous development&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day2/Lecture5_Bioconductor_201.html\"&gt;Lecture 5 - Bioconductor 201&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-3\"&gt;Day 3&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day3/Lecture6_Git_versionning.html\"&gt;Lecture 6 - Git versioning&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day3/Lecture7_Improving_package-data_vignettes-....html\"&gt;Lecture 8 - Vignettes and data&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-4\"&gt;Day 4&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day4/Lecture8_S4_classes.html\"&gt;Lecture 7 - S4 classes in Bioconductor&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day4/Lecture9_Bioconductor_submission.html\"&gt;Lecture 9 - Bioconductor package submission&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-5\"&gt;Day 5&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day5/Lecture10_Other_package_types.html\"&gt;Lecture 10 - Other package types&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day5/Lecture11_Package_dissemination.html\"&gt;Lecture 11 - Package dissemination&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-6\"&gt;Exercises&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/exercises/Day1_Getting-started-with-Bioc.html\"&gt;&lt;span class=\"chapter-number\"&gt;1&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Getting started with Bioconductor ecosystem&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/exercises/Day2_Developer-virtuous-circle.html\"&gt;&lt;span class=\"chapter-number\"&gt;2&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Kickstarting an R package&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/exercises/Day3_Examples-test-data.html\"&gt;&lt;span class=\"chapter-number\"&gt;3&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Enriching package functionalities&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/exercises/Day4_S4-classes.html\"&gt;&lt;span class=\"chapter-number\"&gt;4&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Using S4 classes in a package&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/exercises/Day5_package-integration.html\"&gt;&lt;span class=\"chapter-number\"&gt;5&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Improving package integration&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"footer-left\"&gt;Developing R/Bioconductor packages for Genomics |&lt;br /&gt;\nJ. Serizay&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"footer-right\"&gt;This book was built with &lt;a href=\"https://quarto.org/\"&gt;Quarto&lt;/a&gt;.&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-breadcrumbs-faba582bb439d5cd836a674b446052c1\"&gt;Day 1&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-breadcrumbs-a246a76f63112be5a39bb9c98bc95e47\"&gt;Lecture 2 - Introduction to Bioconductor&lt;/span&gt;&lt;/p&gt;\n&lt;/div&gt;\n&lt;div id=\"quarto-meta-markdown\" class=\"hidden\"&gt;\n&lt;p&gt;&lt;span class=\"hidden\" data-render-id=\"quarto-metatitle\"&gt;Developing R/Bioconductor packages for Genomics - Lecture 2 - Introduction to Bioconductor&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-twittercardtitle\"&gt;Developing R/Bioconductor packages for Genomics - Lecture 2 - Introduction to Bioconductor&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-ogcardtitle\"&gt;Developing R/Bioconductor packages for Genomics - Lecture 2 - Introduction to Bioconductor&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-metasitename\"&gt;Developing R/Bioconductor packages for Genomics&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-twittercarddesc\"&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-ogcardddesc\"&gt;&lt;/span&gt;&lt;/p&gt;\n&lt;/div&gt;\n\n&lt;/main&gt; &lt;!-- /main --&gt;\n&lt;script id = \"quarto-html-after-body\" type=\"application/javascript\"&gt;\nwindow.document.addEventListener(\"DOMContentLoaded\", function (event) {\n  const toggleBodyColorMode = (bsSheetEl) =&gt; {\n    const mode = bsSheetEl.getAttribute(\"data-mode\");\n    const bodyEl = window.document.querySelector(\"body\");\n    if (mode === \"dark\") {\n      bodyEl.classList.add(\"quarto-dark\");\n      bodyEl.classList.remove(\"quarto-light\");\n    } else {\n      bodyEl.classList.add(\"quarto-light\");\n      bodyEl.classList.remove(\"quarto-dark\");\n    }\n  }\n  const toggleBodyColorPrimary = () =&gt; {\n    const bsSheetEl = window.document.querySelector(\"link#quarto-bootstrap\");\n    if (bsSheetEl) {\n      toggleBodyColorMode(bsSheetEl);\n    }\n  }\n  toggleBodyColorPrimary();  \n  const icon = \"\";\n  const anchorJS = new window.AnchorJS();\n  anchorJS.options = {\n    placement: 'right',\n    icon: icon\n  };\n  anchorJS.add('.anchored');\n  const isCodeAnnotation = (el) =&gt; {\n    for (const clz of el.classList) {\n      if (clz.startsWith('code-annotation-')) {                     \n        return true;\n      }\n    }\n    return false;\n  }\n  const clipboard = new window.ClipboardJS('.code-copy-button', {\n    text: function(trigger) {\n      const codeEl = trigger.previousElementSibling.cloneNode(true);\n      for (const childEl of codeEl.children) {\n        if (isCodeAnnotation(childEl)) {\n          childEl.remove();\n        }\n      }\n      return codeEl.innerText;\n    }\n  });\n  clipboard.on('success', function(e) {\n    // button target\n    const button = e.trigger;\n    // don't keep focus\n    button.blur();\n    // flash \"checked\"\n    button.classList.add('code-copy-button-checked');\n    var currentTitle = button.getAttribute(\"title\");\n    button.setAttribute(\"title\", \"Copied!\");\n    let tooltip;\n    if (window.bootstrap) {\n      button.setAttribute(\"data-bs-toggle\", \"tooltip\");\n      button.setAttribute(\"data-bs-placement\", \"left\");\n      button.setAttribute(\"data-bs-title\", \"Copied!\");\n      tooltip = new bootstrap.Tooltip(button, \n        { trigger: \"manual\", \n          customClass: \"code-copy-button-tooltip\",\n          offset: [0, -8]});\n      tooltip.show();    \n    }\n    setTimeout(function() {\n      if (tooltip) {\n        tooltip.hide();\n        button.removeAttribute(\"data-bs-title\");\n        button.removeAttribute(\"data-bs-toggle\");\n        button.removeAttribute(\"data-bs-placement\");\n      }\n      button.setAttribute(\"title\", currentTitle);\n      button.classList.remove('code-copy-button-checked');\n    }, 1000);\n    // clear code selection\n    e.clearSelection();\n  });\n  function tippyHover(el, contentFn) {\n    const config = {\n      allowHTML: true,\n      content: contentFn,\n      maxWidth: 500,\n      delay: 100,\n      arrow: false,\n      appendTo: function(el) {\n          return el.parentElement;\n      },\n      interactive: true,\n      interactiveBorder: 10,\n      theme: 'quarto',\n      placement: 'bottom-start'\n    };\n    window.tippy(el, config); \n  }\n  const noterefs = window.document.querySelectorAll('a[role=\"doc-noteref\"]');\n  for (var i=0; i&lt;noterefs.length; i++) {\n    const ref = noterefs[i];\n    tippyHover(ref, function() {\n      // use id or data attribute instead here\n      let href = ref.getAttribute('data-footnote-href') || ref.getAttribute('href');\n      try { href = new URL(href).hash; } catch {}\n      const id = href.replace(/^#\\/?/, \"\");\n      const note = window.document.getElementById(id);\n      return note.innerHTML;\n    });\n  }\n      let selectedAnnoteEl;\n      const selectorForAnnotation = ( cell, annotation) =&gt; {\n        let cellAttr = 'data-code-cell=\"' + cell + '\"';\n        let lineAttr = 'data-code-annotation=\"' +  annotation + '\"';\n        const selector = 'span[' + cellAttr + '][' + lineAttr + ']';\n        return selector;\n      }\n      const selectCodeLines = (annoteEl) =&gt; {\n        const doc = window.document;\n        const targetCell = annoteEl.getAttribute(\"data-target-cell\");\n        const targetAnnotation = annoteEl.getAttribute(\"data-target-annotation\");\n        const annoteSpan = window.document.querySelector(selectorForAnnotation(targetCell, targetAnnotation));\n        const lines = annoteSpan.getAttribute(\"data-code-lines\").split(\",\");\n        const lineIds = lines.map((line) =&gt; {\n          return targetCell + \"-\" + line;\n        })\n        let top = null;\n        let height = null;\n        let parent = null;\n        if (lineIds.length &gt; 0) {\n            //compute the position of the single el (top and bottom and make a div)\n            const el = window.document.getElementById(lineIds[0]);\n            top = el.offsetTop;\n            height = el.offsetHeight;\n            parent = el.parentElement.parentElement;\n          if (lineIds.length &gt; 1) {\n            const lastEl = window.document.getElementById(lineIds[lineIds.length - 1]);\n            const bottom = lastEl.offsetTop + lastEl.offsetHeight;\n            height = bottom - top;\n          }\n          if (top !== null && height !== null && parent !== null) {\n            // cook up a div (if necessary) and position it \n            let div = window.document.getElementById(\"code-annotation-line-highlight\");\n            if (div === null) {\n              div = window.document.createElement(\"div\");\n              div.setAttribute(\"id\", \"code-annotation-line-highlight\");\n              div.style.position = 'absolute';\n              parent.appendChild(div);\n            }\n            div.style.top = top - 2 + \"px\";\n            div.style.height = height + 4 + \"px\";\n            let gutterDiv = window.document.getElementById(\"code-annotation-line-highlight-gutter\");\n            if (gutterDiv === null) {\n              gutterDiv = window.document.createElement(\"div\");\n              gutterDiv.setAttribute(\"id\", \"code-annotation-line-highlight-gutter\");\n              gutterDiv.style.position = 'absolute';\n              const codeCell = window.document.getElementById(targetCell);\n              const gutter = codeCell.querySelector('.code-annotation-gutter');\n              gutter.appendChild(gutterDiv);\n            }\n            gutterDiv.style.top = top - 2 + \"px\";\n            gutterDiv.style.height = height + 4 + \"px\";\n          }\n          selectedAnnoteEl = annoteEl;\n        }\n      };\n      const unselectCodeLines = () =&gt; {\n        const elementsIds = [\"code-annotation-line-highlight\", \"code-annotation-line-highlight-gutter\"];\n        elementsIds.forEach((elId) =&gt; {\n          const div = window.document.getElementById(elId);\n          if (div) {\n            div.remove();\n          }\n        });\n        selectedAnnoteEl = undefined;\n      };\n      // Attach click handler to the DT\n      const annoteDls = window.document.querySelectorAll('dt[data-target-cell]');\n      for (const annoteDlNode of annoteDls) {\n        annoteDlNode.addEventListener('click', (event) =&gt; {\n          const clickedEl = event.target;\n          if (clickedEl !== selectedAnnoteEl) {\n            unselectCodeLines();\n            const activeEl = window.document.querySelector('dt[data-target-cell].code-annotation-active');\n            if (activeEl) {\n              activeEl.classList.remove('code-annotation-active');\n            }\n            selectCodeLines(clickedEl);\n            clickedEl.classList.add('code-annotation-active');\n          } else {\n            // Unselect the line\n            unselectCodeLines();\n            clickedEl.classList.remove('code-annotation-active');\n          }\n        });\n      }\n  const findCites = (el) =&gt; {\n    const parentEl = el.parentElement;\n    if (parentEl) {\n      const cites = parentEl.dataset.cites;\n      if (cites) {\n        return {\n          el,\n          cites: cites.split(' ')\n        };\n      } else {\n        return findCites(el.parentElement)\n      }\n    } else {\n      return undefined;\n    }\n  };\n  var bibliorefs = window.document.querySelectorAll('a[role=\"doc-biblioref\"]');\n  for (var i=0; i&lt;bibliorefs.length; i++) {\n    const ref = bibliorefs[i];\n    const citeInfo = findCites(ref);\n    if (citeInfo) {\n      tippyHover(citeInfo.el, function() {\n        var popup = window.document.createElement('div');\n        citeInfo.cites.forEach(function(cite) {\n          var citeDiv = window.document.createElement('div');\n          citeDiv.classList.add('hanging-indent');\n          citeDiv.classList.add('csl-entry');\n          var biblioDiv = window.document.getElementById('ref-' + cite);\n          if (biblioDiv) {\n            citeDiv.innerHTML = biblioDiv.innerHTML;\n          }\n          popup.appendChild(citeDiv);\n        });\n        return popup.innerHTML;\n      });\n    }\n  }\n});\n&lt;/script&gt;\n&lt;nav class=\"page-navigation\"&gt;\n  &lt;div class=\"nav-page nav-page-previous\"&gt;\n      &lt;a  href=\"/content/day1/Lecture1_Package_architecture.html\" class=\"pagination-link\"&gt;\n        &lt;i class=\"bi bi-arrow-left-short\"&gt;&lt;/i&gt; &lt;span class=\"nav-page-text\"&gt;Lecture 1 - R package architecture&lt;/span&gt;\n      &lt;/a&gt;          \n  &lt;/div&gt;\n  &lt;div class=\"nav-page nav-page-next\"&gt;\n      &lt;a  href=\"/content/day1/Lecture3_Developer-toolkit.html\" class=\"pagination-link\"&gt;\n        &lt;span class=\"nav-page-text\"&gt;Lecture 3 - R developer toolkit&lt;/span&gt; &lt;i class=\"bi bi-arrow-right-short\"&gt;&lt;/i&gt;\n      &lt;/a&gt;\n  &lt;/div&gt;\n&lt;/nav&gt;\n&lt;/div&gt; &lt;!-- /content --&gt;\n&lt;footer class=\"footer\"&gt;\n  &lt;div class=\"nav-footer\"&gt;\n    &lt;div class=\"nav-footer-left\"&gt;\n      &lt;div class='footer-contents'&gt;Developing R/Bioconductor packages for Genomics |  \nJ. Serizay\n&lt;/div&gt;  \n    &lt;/div&gt;   \n    &lt;div class=\"nav-footer-center\"&gt;\n      &nbsp;\n    &lt;/div&gt;\n    &lt;div class=\"nav-footer-right\"&gt;\n      &lt;div class='footer-contents'&gt;This book was built with &lt;a href=\"https://quarto.org/\"&gt;Quarto&lt;/a&gt;.\n&lt;/div&gt;  \n    &lt;/div&gt;\n  &lt;/div&gt;\n&lt;/footer&gt;\n\n&lt;/body&gt;\n\n&lt;/html&gt;"
  },
  {
    "objectID": "content/day1/Lecture3_Developer-toolkit.html",
    "href": "content/day1/Lecture3_Developer-toolkit.html",
    "title": "Lecture 3 - R developer toolkit",
    "section": "",
    "text": "&lt;div id=\"quarto-navigation-envelope\" class=\"hidden\"&gt;\n&lt;p&gt;&lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar-title\"&gt;Developing R/Bioconductor packages for Genomics&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-navbar-title\"&gt;Developing R/Bioconductor packages for Genomics&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-next\"&gt;Lecture 4 - Continuous development&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-prev\"&gt;Lecture 2 - Introduction to Bioconductor&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/index.html\"&gt;Welcome&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/program.html\"&gt;Program&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/prerequisites.html\"&gt;Prerequesites&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/extra.html\"&gt;Extra resources&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-1\"&gt;Day 1&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day1/Lecture0_course-overview.html\"&gt;Lecture 0 - Introduction to the workshop&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day1/Lecture1_Package_architecture.html\"&gt;Lecture 1 - R package architecture&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day1/Lecture2_Bioconductor_101.html\"&gt;Lecture 2 - Introduction to Bioconductor&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day1/Lecture3_Developer-toolkit.html\"&gt;Lecture 3 - R developer toolkit&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-2\"&gt;Day 2&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day2/Lecture4_Continuous_development-writing-documenting-testing.html\"&gt;Lecture 4 - Continuous development&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day2/Lecture5_Bioconductor_201.html\"&gt;Lecture 5 - Bioconductor 201&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-3\"&gt;Day 3&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day3/Lecture6_Git_versionning.html\"&gt;Lecture 6 - Git versioning&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day3/Lecture7_Improving_package-data_vignettes-....html\"&gt;Lecture 8 - Vignettes and data&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-4\"&gt;Day 4&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day4/Lecture8_S4_classes.html\"&gt;Lecture 7 - S4 classes in Bioconductor&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day4/Lecture9_Bioconductor_submission.html\"&gt;Lecture 9 - Bioconductor package submission&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-5\"&gt;Day 5&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day5/Lecture10_Other_package_types.html\"&gt;Lecture 10 - Other package types&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day5/Lecture11_Package_dissemination.html\"&gt;Lecture 11 - Package dissemination&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-6\"&gt;Exercises&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/exercises/Day1_Getting-started-with-Bioc.html\"&gt;&lt;span class=\"chapter-number\"&gt;1&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Getting started with Bioconductor ecosystem&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/exercises/Day2_Developer-virtuous-circle.html\"&gt;&lt;span class=\"chapter-number\"&gt;2&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Kickstarting an R package&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/exercises/Day3_Examples-test-data.html\"&gt;&lt;span class=\"chapter-number\"&gt;3&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Enriching package functionalities&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/exercises/Day4_S4-classes.html\"&gt;&lt;span class=\"chapter-number\"&gt;4&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Using S4 classes in a package&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/exercises/Day5_package-integration.html\"&gt;&lt;span class=\"chapter-number\"&gt;5&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Improving package integration&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"footer-left\"&gt;Developing R/Bioconductor packages for Genomics |&lt;br /&gt;\nJ. Serizay&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"footer-right\"&gt;This book was built with &lt;a href=\"https://quarto.org/\"&gt;Quarto&lt;/a&gt;.&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-breadcrumbs-faba582bb439d5cd836a674b446052c1\"&gt;Day 1&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-breadcrumbs-6750fe5f16f9220061a82844e4ff31e1\"&gt;Lecture 3 - R developer toolkit&lt;/span&gt;&lt;/p&gt;\n&lt;/div&gt;\n&lt;div id=\"quarto-meta-markdown\" class=\"hidden\"&gt;\n&lt;p&gt;&lt;span class=\"hidden\" data-render-id=\"quarto-metatitle\"&gt;Developing R/Bioconductor packages for Genomics - Lecture 3 - R developer toolkit&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-twittercardtitle\"&gt;Developing R/Bioconductor packages for Genomics - Lecture 3 - R developer toolkit&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-ogcardtitle\"&gt;Developing R/Bioconductor packages for Genomics - Lecture 3 - R developer toolkit&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-metasitename\"&gt;Developing R/Bioconductor packages for Genomics&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-twittercarddesc\"&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-ogcardddesc\"&gt;&lt;/span&gt;&lt;/p&gt;\n&lt;/div&gt;\n\n&lt;/main&gt; &lt;!-- /main --&gt;\n&lt;script id = \"quarto-html-after-body\" type=\"application/javascript\"&gt;\nwindow.document.addEventListener(\"DOMContentLoaded\", function (event) {\n  const toggleBodyColorMode = (bsSheetEl) =&gt; {\n    const mode = bsSheetEl.getAttribute(\"data-mode\");\n    const bodyEl = window.document.querySelector(\"body\");\n    if (mode === \"dark\") {\n      bodyEl.classList.add(\"quarto-dark\");\n      bodyEl.classList.remove(\"quarto-light\");\n    } else {\n      bodyEl.classList.add(\"quarto-light\");\n      bodyEl.classList.remove(\"quarto-dark\");\n    }\n  }\n  const toggleBodyColorPrimary = () =&gt; {\n    const bsSheetEl = window.document.querySelector(\"link#quarto-bootstrap\");\n    if (bsSheetEl) {\n      toggleBodyColorMode(bsSheetEl);\n    }\n  }\n  toggleBodyColorPrimary();  \n  const icon = \"\";\n  const anchorJS = new window.AnchorJS();\n  anchorJS.options = {\n    placement: 'right',\n    icon: icon\n  };\n  anchorJS.add('.anchored');\n  const isCodeAnnotation = (el) =&gt; {\n    for (const clz of el.classList) {\n      if (clz.startsWith('code-annotation-')) {                     \n        return true;\n      }\n    }\n    return false;\n  }\n  const clipboard = new window.ClipboardJS('.code-copy-button', {\n    text: function(trigger) {\n      const codeEl = trigger.previousElementSibling.cloneNode(true);\n      for (const childEl of codeEl.children) {\n        if (isCodeAnnotation(childEl)) {\n          childEl.remove();\n        }\n      }\n      return codeEl.innerText;\n    }\n  });\n  clipboard.on('success', function(e) {\n    // button target\n    const button = e.trigger;\n    // don't keep focus\n    button.blur();\n    // flash \"checked\"\n    button.classList.add('code-copy-button-checked');\n    var currentTitle = button.getAttribute(\"title\");\n    button.setAttribute(\"title\", \"Copied!\");\n    let tooltip;\n    if (window.bootstrap) {\n      button.setAttribute(\"data-bs-toggle\", \"tooltip\");\n      button.setAttribute(\"data-bs-placement\", \"left\");\n      button.setAttribute(\"data-bs-title\", \"Copied!\");\n      tooltip = new bootstrap.Tooltip(button, \n        { trigger: \"manual\", \n          customClass: \"code-copy-button-tooltip\",\n          offset: [0, -8]});\n      tooltip.show();    \n    }\n    setTimeout(function() {\n      if (tooltip) {\n        tooltip.hide();\n        button.removeAttribute(\"data-bs-title\");\n        button.removeAttribute(\"data-bs-toggle\");\n        button.removeAttribute(\"data-bs-placement\");\n      }\n      button.setAttribute(\"title\", currentTitle);\n      button.classList.remove('code-copy-button-checked');\n    }, 1000);\n    // clear code selection\n    e.clearSelection();\n  });\n  function tippyHover(el, contentFn) {\n    const config = {\n      allowHTML: true,\n      content: contentFn,\n      maxWidth: 500,\n      delay: 100,\n      arrow: false,\n      appendTo: function(el) {\n          return el.parentElement;\n      },\n      interactive: true,\n      interactiveBorder: 10,\n      theme: 'quarto',\n      placement: 'bottom-start'\n    };\n    window.tippy(el, config); \n  }\n  const noterefs = window.document.querySelectorAll('a[role=\"doc-noteref\"]');\n  for (var i=0; i&lt;noterefs.length; i++) {\n    const ref = noterefs[i];\n    tippyHover(ref, function() {\n      // use id or data attribute instead here\n      let href = ref.getAttribute('data-footnote-href') || ref.getAttribute('href');\n      try { href = new URL(href).hash; } catch {}\n      const id = href.replace(/^#\\/?/, \"\");\n      const note = window.document.getElementById(id);\n      return note.innerHTML;\n    });\n  }\n      let selectedAnnoteEl;\n      const selectorForAnnotation = ( cell, annotation) =&gt; {\n        let cellAttr = 'data-code-cell=\"' + cell + '\"';\n        let lineAttr = 'data-code-annotation=\"' +  annotation + '\"';\n        const selector = 'span[' + cellAttr + '][' + lineAttr + ']';\n        return selector;\n      }\n      const selectCodeLines = (annoteEl) =&gt; {\n        const doc = window.document;\n        const targetCell = annoteEl.getAttribute(\"data-target-cell\");\n        const targetAnnotation = annoteEl.getAttribute(\"data-target-annotation\");\n        const annoteSpan = window.document.querySelector(selectorForAnnotation(targetCell, targetAnnotation));\n        const lines = annoteSpan.getAttribute(\"data-code-lines\").split(\",\");\n        const lineIds = lines.map((line) =&gt; {\n          return targetCell + \"-\" + line;\n        })\n        let top = null;\n        let height = null;\n        let parent = null;\n        if (lineIds.length &gt; 0) {\n            //compute the position of the single el (top and bottom and make a div)\n            const el = window.document.getElementById(lineIds[0]);\n            top = el.offsetTop;\n            height = el.offsetHeight;\n            parent = el.parentElement.parentElement;\n          if (lineIds.length &gt; 1) {\n            const lastEl = window.document.getElementById(lineIds[lineIds.length - 1]);\n            const bottom = lastEl.offsetTop + lastEl.offsetHeight;\n            height = bottom - top;\n          }\n          if (top !== null && height !== null && parent !== null) {\n            // cook up a div (if necessary) and position it \n            let div = window.document.getElementById(\"code-annotation-line-highlight\");\n            if (div === null) {\n              div = window.document.createElement(\"div\");\n              div.setAttribute(\"id\", \"code-annotation-line-highlight\");\n              div.style.position = 'absolute';\n              parent.appendChild(div);\n            }\n            div.style.top = top - 2 + \"px\";\n            div.style.height = height + 4 + \"px\";\n            let gutterDiv = window.document.getElementById(\"code-annotation-line-highlight-gutter\");\n            if (gutterDiv === null) {\n              gutterDiv = window.document.createElement(\"div\");\n              gutterDiv.setAttribute(\"id\", \"code-annotation-line-highlight-gutter\");\n              gutterDiv.style.position = 'absolute';\n              const codeCell = window.document.getElementById(targetCell);\n              const gutter = codeCell.querySelector('.code-annotation-gutter');\n              gutter.appendChild(gutterDiv);\n            }\n            gutterDiv.style.top = top - 2 + \"px\";\n            gutterDiv.style.height = height + 4 + \"px\";\n          }\n          selectedAnnoteEl = annoteEl;\n        }\n      };\n      const unselectCodeLines = () =&gt; {\n        const elementsIds = [\"code-annotation-line-highlight\", \"code-annotation-line-highlight-gutter\"];\n        elementsIds.forEach((elId) =&gt; {\n          const div = window.document.getElementById(elId);\n          if (div) {\n            div.remove();\n          }\n        });\n        selectedAnnoteEl = undefined;\n      };\n      // Attach click handler to the DT\n      const annoteDls = window.document.querySelectorAll('dt[data-target-cell]');\n      for (const annoteDlNode of annoteDls) {\n        annoteDlNode.addEventListener('click', (event) =&gt; {\n          const clickedEl = event.target;\n          if (clickedEl !== selectedAnnoteEl) {\n            unselectCodeLines();\n            const activeEl = window.document.querySelector('dt[data-target-cell].code-annotation-active');\n            if (activeEl) {\n              activeEl.classList.remove('code-annotation-active');\n            }\n            selectCodeLines(clickedEl);\n            clickedEl.classList.add('code-annotation-active');\n          } else {\n            // Unselect the line\n            unselectCodeLines();\n            clickedEl.classList.remove('code-annotation-active');\n          }\n        });\n      }\n  const findCites = (el) =&gt; {\n    const parentEl = el.parentElement;\n    if (parentEl) {\n      const cites = parentEl.dataset.cites;\n      if (cites) {\n        return {\n          el,\n          cites: cites.split(' ')\n        };\n      } else {\n        return findCites(el.parentElement)\n      }\n    } else {\n      return undefined;\n    }\n  };\n  var bibliorefs = window.document.querySelectorAll('a[role=\"doc-biblioref\"]');\n  for (var i=0; i&lt;bibliorefs.length; i++) {\n    const ref = bibliorefs[i];\n    const citeInfo = findCites(ref);\n    if (citeInfo) {\n      tippyHover(citeInfo.el, function() {\n        var popup = window.document.createElement('div');\n        citeInfo.cites.forEach(function(cite) {\n          var citeDiv = window.document.createElement('div');\n          citeDiv.classList.add('hanging-indent');\n          citeDiv.classList.add('csl-entry');\n          var biblioDiv = window.document.getElementById('ref-' + cite);\n          if (biblioDiv) {\n            citeDiv.innerHTML = biblioDiv.innerHTML;\n          }\n          popup.appendChild(citeDiv);\n        });\n        return popup.innerHTML;\n      });\n    }\n  }\n});\n&lt;/script&gt;\n&lt;nav class=\"page-navigation\"&gt;\n  &lt;div class=\"nav-page nav-page-previous\"&gt;\n      &lt;a  href=\"/content/day1/Lecture2_Bioconductor_101.html\" class=\"pagination-link\"&gt;\n        &lt;i class=\"bi bi-arrow-left-short\"&gt;&lt;/i&gt; &lt;span class=\"nav-page-text\"&gt;Lecture 2 - Introduction to Bioconductor&lt;/span&gt;\n      &lt;/a&gt;          \n  &lt;/div&gt;\n  &lt;div class=\"nav-page nav-page-next\"&gt;\n      &lt;a  href=\"/content/day2/Lecture4_Continuous_development-writing-documenting-testing.html\" class=\"pagination-link\"&gt;\n        &lt;span class=\"nav-page-text\"&gt;Lecture 4 - Continuous development&lt;/span&gt; &lt;i class=\"bi bi-arrow-right-short\"&gt;&lt;/i&gt;\n      &lt;/a&gt;\n  &lt;/div&gt;\n&lt;/nav&gt;\n&lt;/div&gt; &lt;!-- /content --&gt;\n&lt;footer class=\"footer\"&gt;\n  &lt;div class=\"nav-footer\"&gt;\n    &lt;div class=\"nav-footer-left\"&gt;\n      &lt;div class='footer-contents'&gt;Developing R/Bioconductor packages for Genomics |  \nJ. Serizay\n&lt;/div&gt;  \n    &lt;/div&gt;   \n    &lt;div class=\"nav-footer-center\"&gt;\n      &nbsp;\n    &lt;/div&gt;\n    &lt;div class=\"nav-footer-right\"&gt;\n      &lt;div class='footer-contents'&gt;This book was built with &lt;a href=\"https://quarto.org/\"&gt;Quarto&lt;/a&gt;.\n&lt;/div&gt;  \n    &lt;/div&gt;\n  &lt;/div&gt;\n&lt;/footer&gt;\n\n&lt;/body&gt;\n\n&lt;/html&gt;"
  },
  {
    "objectID": "content/day2/Lecture4_Continuous_development-writing-documenting-testing.html",
    "href": "content/day2/Lecture4_Continuous_development-writing-documenting-testing.html",
    "title": "Lecture 4 - Continuous development",
    "section": "",
    "text": "&lt;div id=\"quarto-navigation-envelope\" class=\"hidden\"&gt;\n&lt;p&gt;&lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar-title\"&gt;Developing R/Bioconductor packages for Genomics&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-navbar-title\"&gt;Developing R/Bioconductor packages for Genomics&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-next\"&gt;Lecture 5 - Bioconductor 201&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-prev\"&gt;Lecture 3 - R developer toolkit&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/index.html\"&gt;Welcome&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/program.html\"&gt;Program&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/prerequisites.html\"&gt;Prerequesites&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/extra.html\"&gt;Extra resources&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-1\"&gt;Day 1&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day1/Lecture0_course-overview.html\"&gt;Lecture 0 - Introduction to the workshop&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day1/Lecture1_Package_architecture.html\"&gt;Lecture 1 - R package architecture&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day1/Lecture2_Bioconductor_101.html\"&gt;Lecture 2 - Introduction to Bioconductor&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day1/Lecture3_Developer-toolkit.html\"&gt;Lecture 3 - R developer toolkit&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-2\"&gt;Day 2&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day2/Lecture4_Continuous_development-writing-documenting-testing.html\"&gt;Lecture 4 - Continuous development&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day2/Lecture5_Bioconductor_201.html\"&gt;Lecture 5 - Bioconductor 201&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-3\"&gt;Day 3&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day3/Lecture6_Git_versionning.html\"&gt;Lecture 6 - Git versioning&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day3/Lecture7_Improving_package-data_vignettes-....html\"&gt;Lecture 8 - Vignettes and data&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-4\"&gt;Day 4&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day4/Lecture8_S4_classes.html\"&gt;Lecture 7 - S4 classes in Bioconductor&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day4/Lecture9_Bioconductor_submission.html\"&gt;Lecture 9 - Bioconductor package submission&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-5\"&gt;Day 5&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day5/Lecture10_Other_package_types.html\"&gt;Lecture 10 - Other package types&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day5/Lecture11_Package_dissemination.html\"&gt;Lecture 11 - Package dissemination&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-6\"&gt;Exercises&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/exercises/Day1_Getting-started-with-Bioc.html\"&gt;&lt;span class=\"chapter-number\"&gt;1&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Getting started with Bioconductor ecosystem&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/exercises/Day2_Developer-virtuous-circle.html\"&gt;&lt;span class=\"chapter-number\"&gt;2&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Kickstarting an R package&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/exercises/Day3_Examples-test-data.html\"&gt;&lt;span class=\"chapter-number\"&gt;3&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Enriching package functionalities&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/exercises/Day4_S4-classes.html\"&gt;&lt;span class=\"chapter-number\"&gt;4&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Using S4 classes in a package&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/exercises/Day5_package-integration.html\"&gt;&lt;span class=\"chapter-number\"&gt;5&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Improving package integration&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"footer-left\"&gt;Developing R/Bioconductor packages for Genomics |&lt;br /&gt;\nJ. Serizay&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"footer-right\"&gt;This book was built with &lt;a href=\"https://quarto.org/\"&gt;Quarto&lt;/a&gt;.&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-breadcrumbs-5d0d9e50bf708684c2c6e57b56ae9e8c\"&gt;Day 2&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-breadcrumbs-b58688fe8325355844729df191117ef6\"&gt;Lecture 4 - Continuous development&lt;/span&gt;&lt;/p&gt;\n&lt;/div&gt;\n&lt;div id=\"quarto-meta-markdown\" class=\"hidden\"&gt;\n&lt;p&gt;&lt;span class=\"hidden\" data-render-id=\"quarto-metatitle\"&gt;Developing R/Bioconductor packages for Genomics - Lecture 4 - Continuous development&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-twittercardtitle\"&gt;Developing R/Bioconductor packages for Genomics - Lecture 4 - Continuous development&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-ogcardtitle\"&gt;Developing R/Bioconductor packages for Genomics - Lecture 4 - Continuous development&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-metasitename\"&gt;Developing R/Bioconductor packages for Genomics&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-twittercarddesc\"&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-ogcardddesc\"&gt;&lt;/span&gt;&lt;/p&gt;\n&lt;/div&gt;\n\n&lt;/main&gt; &lt;!-- /main --&gt;\n&lt;script id = \"quarto-html-after-body\" type=\"application/javascript\"&gt;\nwindow.document.addEventListener(\"DOMContentLoaded\", function (event) {\n  const toggleBodyColorMode = (bsSheetEl) =&gt; {\n    const mode = bsSheetEl.getAttribute(\"data-mode\");\n    const bodyEl = window.document.querySelector(\"body\");\n    if (mode === \"dark\") {\n      bodyEl.classList.add(\"quarto-dark\");\n      bodyEl.classList.remove(\"quarto-light\");\n    } else {\n      bodyEl.classList.add(\"quarto-light\");\n      bodyEl.classList.remove(\"quarto-dark\");\n    }\n  }\n  const toggleBodyColorPrimary = () =&gt; {\n    const bsSheetEl = window.document.querySelector(\"link#quarto-bootstrap\");\n    if (bsSheetEl) {\n      toggleBodyColorMode(bsSheetEl);\n    }\n  }\n  toggleBodyColorPrimary();  \n  const icon = \"\";\n  const anchorJS = new window.AnchorJS();\n  anchorJS.options = {\n    placement: 'right',\n    icon: icon\n  };\n  anchorJS.add('.anchored');\n  const isCodeAnnotation = (el) =&gt; {\n    for (const clz of el.classList) {\n      if (clz.startsWith('code-annotation-')) {                     \n        return true;\n      }\n    }\n    return false;\n  }\n  const clipboard = new window.ClipboardJS('.code-copy-button', {\n    text: function(trigger) {\n      const codeEl = trigger.previousElementSibling.cloneNode(true);\n      for (const childEl of codeEl.children) {\n        if (isCodeAnnotation(childEl)) {\n          childEl.remove();\n        }\n      }\n      return codeEl.innerText;\n    }\n  });\n  clipboard.on('success', function(e) {\n    // button target\n    const button = e.trigger;\n    // don't keep focus\n    button.blur();\n    // flash \"checked\"\n    button.classList.add('code-copy-button-checked');\n    var currentTitle = button.getAttribute(\"title\");\n    button.setAttribute(\"title\", \"Copied!\");\n    let tooltip;\n    if (window.bootstrap) {\n      button.setAttribute(\"data-bs-toggle\", \"tooltip\");\n      button.setAttribute(\"data-bs-placement\", \"left\");\n      button.setAttribute(\"data-bs-title\", \"Copied!\");\n      tooltip = new bootstrap.Tooltip(button, \n        { trigger: \"manual\", \n          customClass: \"code-copy-button-tooltip\",\n          offset: [0, -8]});\n      tooltip.show();    \n    }\n    setTimeout(function() {\n      if (tooltip) {\n        tooltip.hide();\n        button.removeAttribute(\"data-bs-title\");\n        button.removeAttribute(\"data-bs-toggle\");\n        button.removeAttribute(\"data-bs-placement\");\n      }\n      button.setAttribute(\"title\", currentTitle);\n      button.classList.remove('code-copy-button-checked');\n    }, 1000);\n    // clear code selection\n    e.clearSelection();\n  });\n  function tippyHover(el, contentFn) {\n    const config = {\n      allowHTML: true,\n      content: contentFn,\n      maxWidth: 500,\n      delay: 100,\n      arrow: false,\n      appendTo: function(el) {\n          return el.parentElement;\n      },\n      interactive: true,\n      interactiveBorder: 10,\n      theme: 'quarto',\n      placement: 'bottom-start'\n    };\n    window.tippy(el, config); \n  }\n  const noterefs = window.document.querySelectorAll('a[role=\"doc-noteref\"]');\n  for (var i=0; i&lt;noterefs.length; i++) {\n    const ref = noterefs[i];\n    tippyHover(ref, function() {\n      // use id or data attribute instead here\n      let href = ref.getAttribute('data-footnote-href') || ref.getAttribute('href');\n      try { href = new URL(href).hash; } catch {}\n      const id = href.replace(/^#\\/?/, \"\");\n      const note = window.document.getElementById(id);\n      return note.innerHTML;\n    });\n  }\n      let selectedAnnoteEl;\n      const selectorForAnnotation = ( cell, annotation) =&gt; {\n        let cellAttr = 'data-code-cell=\"' + cell + '\"';\n        let lineAttr = 'data-code-annotation=\"' +  annotation + '\"';\n        const selector = 'span[' + cellAttr + '][' + lineAttr + ']';\n        return selector;\n      }\n      const selectCodeLines = (annoteEl) =&gt; {\n        const doc = window.document;\n        const targetCell = annoteEl.getAttribute(\"data-target-cell\");\n        const targetAnnotation = annoteEl.getAttribute(\"data-target-annotation\");\n        const annoteSpan = window.document.querySelector(selectorForAnnotation(targetCell, targetAnnotation));\n        const lines = annoteSpan.getAttribute(\"data-code-lines\").split(\",\");\n        const lineIds = lines.map((line) =&gt; {\n          return targetCell + \"-\" + line;\n        })\n        let top = null;\n        let height = null;\n        let parent = null;\n        if (lineIds.length &gt; 0) {\n            //compute the position of the single el (top and bottom and make a div)\n            const el = window.document.getElementById(lineIds[0]);\n            top = el.offsetTop;\n            height = el.offsetHeight;\n            parent = el.parentElement.parentElement;\n          if (lineIds.length &gt; 1) {\n            const lastEl = window.document.getElementById(lineIds[lineIds.length - 1]);\n            const bottom = lastEl.offsetTop + lastEl.offsetHeight;\n            height = bottom - top;\n          }\n          if (top !== null && height !== null && parent !== null) {\n            // cook up a div (if necessary) and position it \n            let div = window.document.getElementById(\"code-annotation-line-highlight\");\n            if (div === null) {\n              div = window.document.createElement(\"div\");\n              div.setAttribute(\"id\", \"code-annotation-line-highlight\");\n              div.style.position = 'absolute';\n              parent.appendChild(div);\n            }\n            div.style.top = top - 2 + \"px\";\n            div.style.height = height + 4 + \"px\";\n            let gutterDiv = window.document.getElementById(\"code-annotation-line-highlight-gutter\");\n            if (gutterDiv === null) {\n              gutterDiv = window.document.createElement(\"div\");\n              gutterDiv.setAttribute(\"id\", \"code-annotation-line-highlight-gutter\");\n              gutterDiv.style.position = 'absolute';\n              const codeCell = window.document.getElementById(targetCell);\n              const gutter = codeCell.querySelector('.code-annotation-gutter');\n              gutter.appendChild(gutterDiv);\n            }\n            gutterDiv.style.top = top - 2 + \"px\";\n            gutterDiv.style.height = height + 4 + \"px\";\n          }\n          selectedAnnoteEl = annoteEl;\n        }\n      };\n      const unselectCodeLines = () =&gt; {\n        const elementsIds = [\"code-annotation-line-highlight\", \"code-annotation-line-highlight-gutter\"];\n        elementsIds.forEach((elId) =&gt; {\n          const div = window.document.getElementById(elId);\n          if (div) {\n            div.remove();\n          }\n        });\n        selectedAnnoteEl = undefined;\n      };\n      // Attach click handler to the DT\n      const annoteDls = window.document.querySelectorAll('dt[data-target-cell]');\n      for (const annoteDlNode of annoteDls) {\n        annoteDlNode.addEventListener('click', (event) =&gt; {\n          const clickedEl = event.target;\n          if (clickedEl !== selectedAnnoteEl) {\n            unselectCodeLines();\n            const activeEl = window.document.querySelector('dt[data-target-cell].code-annotation-active');\n            if (activeEl) {\n              activeEl.classList.remove('code-annotation-active');\n            }\n            selectCodeLines(clickedEl);\n            clickedEl.classList.add('code-annotation-active');\n          } else {\n            // Unselect the line\n            unselectCodeLines();\n            clickedEl.classList.remove('code-annotation-active');\n          }\n        });\n      }\n  const findCites = (el) =&gt; {\n    const parentEl = el.parentElement;\n    if (parentEl) {\n      const cites = parentEl.dataset.cites;\n      if (cites) {\n        return {\n          el,\n          cites: cites.split(' ')\n        };\n      } else {\n        return findCites(el.parentElement)\n      }\n    } else {\n      return undefined;\n    }\n  };\n  var bibliorefs = window.document.querySelectorAll('a[role=\"doc-biblioref\"]');\n  for (var i=0; i&lt;bibliorefs.length; i++) {\n    const ref = bibliorefs[i];\n    const citeInfo = findCites(ref);\n    if (citeInfo) {\n      tippyHover(citeInfo.el, function() {\n        var popup = window.document.createElement('div');\n        citeInfo.cites.forEach(function(cite) {\n          var citeDiv = window.document.createElement('div');\n          citeDiv.classList.add('hanging-indent');\n          citeDiv.classList.add('csl-entry');\n          var biblioDiv = window.document.getElementById('ref-' + cite);\n          if (biblioDiv) {\n            citeDiv.innerHTML = biblioDiv.innerHTML;\n          }\n          popup.appendChild(citeDiv);\n        });\n        return popup.innerHTML;\n      });\n    }\n  }\n});\n&lt;/script&gt;\n&lt;nav class=\"page-navigation\"&gt;\n  &lt;div class=\"nav-page nav-page-previous\"&gt;\n      &lt;a  href=\"/content/day1/Lecture3_Developer-toolkit.html\" class=\"pagination-link\"&gt;\n        &lt;i class=\"bi bi-arrow-left-short\"&gt;&lt;/i&gt; &lt;span class=\"nav-page-text\"&gt;Lecture 3 - R developer toolkit&lt;/span&gt;\n      &lt;/a&gt;          \n  &lt;/div&gt;\n  &lt;div class=\"nav-page nav-page-next\"&gt;\n      &lt;a  href=\"/content/day2/Lecture5_Bioconductor_201.html\" class=\"pagination-link\"&gt;\n        &lt;span class=\"nav-page-text\"&gt;Lecture 5 - Bioconductor 201&lt;/span&gt; &lt;i class=\"bi bi-arrow-right-short\"&gt;&lt;/i&gt;\n      &lt;/a&gt;\n  &lt;/div&gt;\n&lt;/nav&gt;\n&lt;/div&gt; &lt;!-- /content --&gt;\n&lt;footer class=\"footer\"&gt;\n  &lt;div class=\"nav-footer\"&gt;\n    &lt;div class=\"nav-footer-left\"&gt;\n      &lt;div class='footer-contents'&gt;Developing R/Bioconductor packages for Genomics |  \nJ. Serizay\n&lt;/div&gt;  \n    &lt;/div&gt;   \n    &lt;div class=\"nav-footer-center\"&gt;\n      &nbsp;\n    &lt;/div&gt;\n    &lt;div class=\"nav-footer-right\"&gt;\n      &lt;div class='footer-contents'&gt;This book was built with &lt;a href=\"https://quarto.org/\"&gt;Quarto&lt;/a&gt;.\n&lt;/div&gt;  \n    &lt;/div&gt;\n  &lt;/div&gt;\n&lt;/footer&gt;\n\n&lt;/body&gt;\n\n&lt;/html&gt;"
  },
  {
    "objectID": "content/day2/Lecture5_Bioconductor_201.html",
    "href": "content/day2/Lecture5_Bioconductor_201.html",
    "title": "Lecture 5 - Bioconductor 201",
    "section": "",
    "text": "&lt;div id=\"quarto-navigation-envelope\" class=\"hidden\"&gt;\n&lt;p&gt;&lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar-title\"&gt;Developing R/Bioconductor packages for Genomics&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-navbar-title\"&gt;Developing R/Bioconductor packages for Genomics&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-next\"&gt;Lecture 6 - Git versioning&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-prev\"&gt;Lecture 4 - Continuous development&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/index.html\"&gt;Welcome&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/program.html\"&gt;Program&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/prerequisites.html\"&gt;Prerequesites&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/extra.html\"&gt;Extra resources&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-1\"&gt;Day 1&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day1/Lecture0_course-overview.html\"&gt;Lecture 0 - Introduction to the workshop&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day1/Lecture1_Package_architecture.html\"&gt;Lecture 1 - R package architecture&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day1/Lecture2_Bioconductor_101.html\"&gt;Lecture 2 - Introduction to Bioconductor&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day1/Lecture3_Developer-toolkit.html\"&gt;Lecture 3 - R developer toolkit&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-2\"&gt;Day 2&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day2/Lecture4_Continuous_development-writing-documenting-testing.html\"&gt;Lecture 4 - Continuous development&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day2/Lecture5_Bioconductor_201.html\"&gt;Lecture 5 - Bioconductor 201&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-3\"&gt;Day 3&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day3/Lecture6_Git_versionning.html\"&gt;Lecture 6 - Git versioning&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day3/Lecture7_Improving_package-data_vignettes-....html\"&gt;Lecture 8 - Vignettes and data&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-4\"&gt;Day 4&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day4/Lecture8_S4_classes.html\"&gt;Lecture 7 - S4 classes in Bioconductor&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day4/Lecture9_Bioconductor_submission.html\"&gt;Lecture 9 - Bioconductor package submission&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-5\"&gt;Day 5&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day5/Lecture10_Other_package_types.html\"&gt;Lecture 10 - Other package types&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day5/Lecture11_Package_dissemination.html\"&gt;Lecture 11 - Package dissemination&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-6\"&gt;Exercises&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/exercises/Day1_Getting-started-with-Bioc.html\"&gt;&lt;span class=\"chapter-number\"&gt;1&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Getting started with Bioconductor ecosystem&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/exercises/Day2_Developer-virtuous-circle.html\"&gt;&lt;span class=\"chapter-number\"&gt;2&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Kickstarting an R package&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/exercises/Day3_Examples-test-data.html\"&gt;&lt;span class=\"chapter-number\"&gt;3&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Enriching package functionalities&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/exercises/Day4_S4-classes.html\"&gt;&lt;span class=\"chapter-number\"&gt;4&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Using S4 classes in a package&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/exercises/Day5_package-integration.html\"&gt;&lt;span class=\"chapter-number\"&gt;5&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Improving package integration&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"footer-left\"&gt;Developing R/Bioconductor packages for Genomics |&lt;br /&gt;\nJ. Serizay&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"footer-right\"&gt;This book was built with &lt;a href=\"https://quarto.org/\"&gt;Quarto&lt;/a&gt;.&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-breadcrumbs-5d0d9e50bf708684c2c6e57b56ae9e8c\"&gt;Day 2&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-breadcrumbs-0b8c10d607b979bb536e1a61a1381895\"&gt;Lecture 5 - Bioconductor 201&lt;/span&gt;&lt;/p&gt;\n&lt;/div&gt;\n&lt;div id=\"quarto-meta-markdown\" class=\"hidden\"&gt;\n&lt;p&gt;&lt;span class=\"hidden\" data-render-id=\"quarto-metatitle\"&gt;Developing R/Bioconductor packages for Genomics - Lecture 5 - Bioconductor 201&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-twittercardtitle\"&gt;Developing R/Bioconductor packages for Genomics - Lecture 5 - Bioconductor 201&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-ogcardtitle\"&gt;Developing R/Bioconductor packages for Genomics - Lecture 5 - Bioconductor 201&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-metasitename\"&gt;Developing R/Bioconductor packages for Genomics&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-twittercarddesc\"&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-ogcardddesc\"&gt;&lt;/span&gt;&lt;/p&gt;\n&lt;/div&gt;\n\n&lt;/main&gt; &lt;!-- /main --&gt;\n&lt;script id = \"quarto-html-after-body\" type=\"application/javascript\"&gt;\nwindow.document.addEventListener(\"DOMContentLoaded\", function (event) {\n  const toggleBodyColorMode = (bsSheetEl) =&gt; {\n    const mode = bsSheetEl.getAttribute(\"data-mode\");\n    const bodyEl = window.document.querySelector(\"body\");\n    if (mode === \"dark\") {\n      bodyEl.classList.add(\"quarto-dark\");\n      bodyEl.classList.remove(\"quarto-light\");\n    } else {\n      bodyEl.classList.add(\"quarto-light\");\n      bodyEl.classList.remove(\"quarto-dark\");\n    }\n  }\n  const toggleBodyColorPrimary = () =&gt; {\n    const bsSheetEl = window.document.querySelector(\"link#quarto-bootstrap\");\n    if (bsSheetEl) {\n      toggleBodyColorMode(bsSheetEl);\n    }\n  }\n  toggleBodyColorPrimary();  \n  const icon = \"\";\n  const anchorJS = new window.AnchorJS();\n  anchorJS.options = {\n    placement: 'right',\n    icon: icon\n  };\n  anchorJS.add('.anchored');\n  const isCodeAnnotation = (el) =&gt; {\n    for (const clz of el.classList) {\n      if (clz.startsWith('code-annotation-')) {                     \n        return true;\n      }\n    }\n    return false;\n  }\n  const clipboard = new window.ClipboardJS('.code-copy-button', {\n    text: function(trigger) {\n      const codeEl = trigger.previousElementSibling.cloneNode(true);\n      for (const childEl of codeEl.children) {\n        if (isCodeAnnotation(childEl)) {\n          childEl.remove();\n        }\n      }\n      return codeEl.innerText;\n    }\n  });\n  clipboard.on('success', function(e) {\n    // button target\n    const button = e.trigger;\n    // don't keep focus\n    button.blur();\n    // flash \"checked\"\n    button.classList.add('code-copy-button-checked');\n    var currentTitle = button.getAttribute(\"title\");\n    button.setAttribute(\"title\", \"Copied!\");\n    let tooltip;\n    if (window.bootstrap) {\n      button.setAttribute(\"data-bs-toggle\", \"tooltip\");\n      button.setAttribute(\"data-bs-placement\", \"left\");\n      button.setAttribute(\"data-bs-title\", \"Copied!\");\n      tooltip = new bootstrap.Tooltip(button, \n        { trigger: \"manual\", \n          customClass: \"code-copy-button-tooltip\",\n          offset: [0, -8]});\n      tooltip.show();    \n    }\n    setTimeout(function() {\n      if (tooltip) {\n        tooltip.hide();\n        button.removeAttribute(\"data-bs-title\");\n        button.removeAttribute(\"data-bs-toggle\");\n        button.removeAttribute(\"data-bs-placement\");\n      }\n      button.setAttribute(\"title\", currentTitle);\n      button.classList.remove('code-copy-button-checked');\n    }, 1000);\n    // clear code selection\n    e.clearSelection();\n  });\n  function tippyHover(el, contentFn) {\n    const config = {\n      allowHTML: true,\n      content: contentFn,\n      maxWidth: 500,\n      delay: 100,\n      arrow: false,\n      appendTo: function(el) {\n          return el.parentElement;\n      },\n      interactive: true,\n      interactiveBorder: 10,\n      theme: 'quarto',\n      placement: 'bottom-start'\n    };\n    window.tippy(el, config); \n  }\n  const noterefs = window.document.querySelectorAll('a[role=\"doc-noteref\"]');\n  for (var i=0; i&lt;noterefs.length; i++) {\n    const ref = noterefs[i];\n    tippyHover(ref, function() {\n      // use id or data attribute instead here\n      let href = ref.getAttribute('data-footnote-href') || ref.getAttribute('href');\n      try { href = new URL(href).hash; } catch {}\n      const id = href.replace(/^#\\/?/, \"\");\n      const note = window.document.getElementById(id);\n      return note.innerHTML;\n    });\n  }\n      let selectedAnnoteEl;\n      const selectorForAnnotation = ( cell, annotation) =&gt; {\n        let cellAttr = 'data-code-cell=\"' + cell + '\"';\n        let lineAttr = 'data-code-annotation=\"' +  annotation + '\"';\n        const selector = 'span[' + cellAttr + '][' + lineAttr + ']';\n        return selector;\n      }\n      const selectCodeLines = (annoteEl) =&gt; {\n        const doc = window.document;\n        const targetCell = annoteEl.getAttribute(\"data-target-cell\");\n        const targetAnnotation = annoteEl.getAttribute(\"data-target-annotation\");\n        const annoteSpan = window.document.querySelector(selectorForAnnotation(targetCell, targetAnnotation));\n        const lines = annoteSpan.getAttribute(\"data-code-lines\").split(\",\");\n        const lineIds = lines.map((line) =&gt; {\n          return targetCell + \"-\" + line;\n        })\n        let top = null;\n        let height = null;\n        let parent = null;\n        if (lineIds.length &gt; 0) {\n            //compute the position of the single el (top and bottom and make a div)\n            const el = window.document.getElementById(lineIds[0]);\n            top = el.offsetTop;\n            height = el.offsetHeight;\n            parent = el.parentElement.parentElement;\n          if (lineIds.length &gt; 1) {\n            const lastEl = window.document.getElementById(lineIds[lineIds.length - 1]);\n            const bottom = lastEl.offsetTop + lastEl.offsetHeight;\n            height = bottom - top;\n          }\n          if (top !== null && height !== null && parent !== null) {\n            // cook up a div (if necessary) and position it \n            let div = window.document.getElementById(\"code-annotation-line-highlight\");\n            if (div === null) {\n              div = window.document.createElement(\"div\");\n              div.setAttribute(\"id\", \"code-annotation-line-highlight\");\n              div.style.position = 'absolute';\n              parent.appendChild(div);\n            }\n            div.style.top = top - 2 + \"px\";\n            div.style.height = height + 4 + \"px\";\n            let gutterDiv = window.document.getElementById(\"code-annotation-line-highlight-gutter\");\n            if (gutterDiv === null) {\n              gutterDiv = window.document.createElement(\"div\");\n              gutterDiv.setAttribute(\"id\", \"code-annotation-line-highlight-gutter\");\n              gutterDiv.style.position = 'absolute';\n              const codeCell = window.document.getElementById(targetCell);\n              const gutter = codeCell.querySelector('.code-annotation-gutter');\n              gutter.appendChild(gutterDiv);\n            }\n            gutterDiv.style.top = top - 2 + \"px\";\n            gutterDiv.style.height = height + 4 + \"px\";\n          }\n          selectedAnnoteEl = annoteEl;\n        }\n      };\n      const unselectCodeLines = () =&gt; {\n        const elementsIds = [\"code-annotation-line-highlight\", \"code-annotation-line-highlight-gutter\"];\n        elementsIds.forEach((elId) =&gt; {\n          const div = window.document.getElementById(elId);\n          if (div) {\n            div.remove();\n          }\n        });\n        selectedAnnoteEl = undefined;\n      };\n      // Attach click handler to the DT\n      const annoteDls = window.document.querySelectorAll('dt[data-target-cell]');\n      for (const annoteDlNode of annoteDls) {\n        annoteDlNode.addEventListener('click', (event) =&gt; {\n          const clickedEl = event.target;\n          if (clickedEl !== selectedAnnoteEl) {\n            unselectCodeLines();\n            const activeEl = window.document.querySelector('dt[data-target-cell].code-annotation-active');\n            if (activeEl) {\n              activeEl.classList.remove('code-annotation-active');\n            }\n            selectCodeLines(clickedEl);\n            clickedEl.classList.add('code-annotation-active');\n          } else {\n            // Unselect the line\n            unselectCodeLines();\n            clickedEl.classList.remove('code-annotation-active');\n          }\n        });\n      }\n  const findCites = (el) =&gt; {\n    const parentEl = el.parentElement;\n    if (parentEl) {\n      const cites = parentEl.dataset.cites;\n      if (cites) {\n        return {\n          el,\n          cites: cites.split(' ')\n        };\n      } else {\n        return findCites(el.parentElement)\n      }\n    } else {\n      return undefined;\n    }\n  };\n  var bibliorefs = window.document.querySelectorAll('a[role=\"doc-biblioref\"]');\n  for (var i=0; i&lt;bibliorefs.length; i++) {\n    const ref = bibliorefs[i];\n    const citeInfo = findCites(ref);\n    if (citeInfo) {\n      tippyHover(citeInfo.el, function() {\n        var popup = window.document.createElement('div');\n        citeInfo.cites.forEach(function(cite) {\n          var citeDiv = window.document.createElement('div');\n          citeDiv.classList.add('hanging-indent');\n          citeDiv.classList.add('csl-entry');\n          var biblioDiv = window.document.getElementById('ref-' + cite);\n          if (biblioDiv) {\n            citeDiv.innerHTML = biblioDiv.innerHTML;\n          }\n          popup.appendChild(citeDiv);\n        });\n        return popup.innerHTML;\n      });\n    }\n  }\n});\n&lt;/script&gt;\n&lt;nav class=\"page-navigation\"&gt;\n  &lt;div class=\"nav-page nav-page-previous\"&gt;\n      &lt;a  href=\"/content/day2/Lecture4_Continuous_development-writing-documenting-testing.html\" class=\"pagination-link\"&gt;\n        &lt;i class=\"bi bi-arrow-left-short\"&gt;&lt;/i&gt; &lt;span class=\"nav-page-text\"&gt;Lecture 4 - Continuous development&lt;/span&gt;\n      &lt;/a&gt;          \n  &lt;/div&gt;\n  &lt;div class=\"nav-page nav-page-next\"&gt;\n      &lt;a  href=\"/content/day3/Lecture6_Git_versionning.html\" class=\"pagination-link\"&gt;\n        &lt;span class=\"nav-page-text\"&gt;Lecture 6 - Git versioning&lt;/span&gt; &lt;i class=\"bi bi-arrow-right-short\"&gt;&lt;/i&gt;\n      &lt;/a&gt;\n  &lt;/div&gt;\n&lt;/nav&gt;\n&lt;/div&gt; &lt;!-- /content --&gt;\n&lt;footer class=\"footer\"&gt;\n  &lt;div class=\"nav-footer\"&gt;\n    &lt;div class=\"nav-footer-left\"&gt;\n      &lt;div class='footer-contents'&gt;Developing R/Bioconductor packages for Genomics |  \nJ. Serizay\n&lt;/div&gt;  \n    &lt;/div&gt;   \n    &lt;div class=\"nav-footer-center\"&gt;\n      &nbsp;\n    &lt;/div&gt;\n    &lt;div class=\"nav-footer-right\"&gt;\n      &lt;div class='footer-contents'&gt;This book was built with &lt;a href=\"https://quarto.org/\"&gt;Quarto&lt;/a&gt;.\n&lt;/div&gt;  \n    &lt;/div&gt;\n  &lt;/div&gt;\n&lt;/footer&gt;\n\n&lt;/body&gt;\n\n&lt;/html&gt;"
  },
  {
    "objectID": "content/day3/Lecture6_Git_versionning.html",
    "href": "content/day3/Lecture6_Git_versionning.html",
    "title": "Lecture 6 - Git versioning",
    "section": "",
    "text": "&lt;div id=\"quarto-navigation-envelope\" class=\"hidden\"&gt;\n&lt;p&gt;&lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar-title\"&gt;Developing R/Bioconductor packages for Genomics&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-navbar-title\"&gt;Developing R/Bioconductor packages for Genomics&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-next\"&gt;Lecture 8 - Vignettes and data&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-prev\"&gt;Lecture 5 - Bioconductor 201&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/index.html\"&gt;Welcome&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/program.html\"&gt;Program&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/prerequisites.html\"&gt;Prerequesites&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/extra.html\"&gt;Extra resources&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-1\"&gt;Day 1&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day1/Lecture0_course-overview.html\"&gt;Lecture 0 - Introduction to the workshop&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day1/Lecture1_Package_architecture.html\"&gt;Lecture 1 - R package architecture&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day1/Lecture2_Bioconductor_101.html\"&gt;Lecture 2 - Introduction to Bioconductor&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day1/Lecture3_Developer-toolkit.html\"&gt;Lecture 3 - R developer toolkit&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-2\"&gt;Day 2&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day2/Lecture4_Continuous_development-writing-documenting-testing.html\"&gt;Lecture 4 - Continuous development&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day2/Lecture5_Bioconductor_201.html\"&gt;Lecture 5 - Bioconductor 201&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-3\"&gt;Day 3&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day3/Lecture6_Git_versionning.html\"&gt;Lecture 6 - Git versioning&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day3/Lecture7_Improving_package-data_vignettes-....html\"&gt;Lecture 8 - Vignettes and data&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-4\"&gt;Day 4&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day4/Lecture8_S4_classes.html\"&gt;Lecture 7 - S4 classes in Bioconductor&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day4/Lecture9_Bioconductor_submission.html\"&gt;Lecture 9 - Bioconductor package submission&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-5\"&gt;Day 5&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day5/Lecture10_Other_package_types.html\"&gt;Lecture 10 - Other package types&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day5/Lecture11_Package_dissemination.html\"&gt;Lecture 11 - Package dissemination&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-6\"&gt;Exercises&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/exercises/Day1_Getting-started-with-Bioc.html\"&gt;&lt;span class=\"chapter-number\"&gt;1&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Getting started with Bioconductor ecosystem&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/exercises/Day2_Developer-virtuous-circle.html\"&gt;&lt;span class=\"chapter-number\"&gt;2&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Kickstarting an R package&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/exercises/Day3_Examples-test-data.html\"&gt;&lt;span class=\"chapter-number\"&gt;3&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Enriching package functionalities&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/exercises/Day4_S4-classes.html\"&gt;&lt;span class=\"chapter-number\"&gt;4&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Using S4 classes in a package&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/exercises/Day5_package-integration.html\"&gt;&lt;span class=\"chapter-number\"&gt;5&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Improving package integration&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"footer-left\"&gt;Developing R/Bioconductor packages for Genomics |&lt;br /&gt;\nJ. Serizay&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"footer-right\"&gt;This book was built with &lt;a href=\"https://quarto.org/\"&gt;Quarto&lt;/a&gt;.&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-breadcrumbs-223e2965264ed5a7335008666fb8bf98\"&gt;Day 3&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-breadcrumbs-a8a525be9e71f2e4b33a2d2efe3bcea9\"&gt;Lecture 6 - Git versioning&lt;/span&gt;&lt;/p&gt;\n&lt;/div&gt;\n&lt;div id=\"quarto-meta-markdown\" class=\"hidden\"&gt;\n&lt;p&gt;&lt;span class=\"hidden\" data-render-id=\"quarto-metatitle\"&gt;Developing R/Bioconductor packages for Genomics - Lecture 6 - Git versioning&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-twittercardtitle\"&gt;Developing R/Bioconductor packages for Genomics - Lecture 6 - Git versioning&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-ogcardtitle\"&gt;Developing R/Bioconductor packages for Genomics - Lecture 6 - Git versioning&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-metasitename\"&gt;Developing R/Bioconductor packages for Genomics&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-twittercarddesc\"&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-ogcardddesc\"&gt;&lt;/span&gt;&lt;/p&gt;\n&lt;/div&gt;\n\n&lt;/main&gt; &lt;!-- /main --&gt;\n&lt;script id = \"quarto-html-after-body\" type=\"application/javascript\"&gt;\nwindow.document.addEventListener(\"DOMContentLoaded\", function (event) {\n  const toggleBodyColorMode = (bsSheetEl) =&gt; {\n    const mode = bsSheetEl.getAttribute(\"data-mode\");\n    const bodyEl = window.document.querySelector(\"body\");\n    if (mode === \"dark\") {\n      bodyEl.classList.add(\"quarto-dark\");\n      bodyEl.classList.remove(\"quarto-light\");\n    } else {\n      bodyEl.classList.add(\"quarto-light\");\n      bodyEl.classList.remove(\"quarto-dark\");\n    }\n  }\n  const toggleBodyColorPrimary = () =&gt; {\n    const bsSheetEl = window.document.querySelector(\"link#quarto-bootstrap\");\n    if (bsSheetEl) {\n      toggleBodyColorMode(bsSheetEl);\n    }\n  }\n  toggleBodyColorPrimary();  \n  const icon = \"\";\n  const anchorJS = new window.AnchorJS();\n  anchorJS.options = {\n    placement: 'right',\n    icon: icon\n  };\n  anchorJS.add('.anchored');\n  const isCodeAnnotation = (el) =&gt; {\n    for (const clz of el.classList) {\n      if (clz.startsWith('code-annotation-')) {                     \n        return true;\n      }\n    }\n    return false;\n  }\n  const clipboard = new window.ClipboardJS('.code-copy-button', {\n    text: function(trigger) {\n      const codeEl = trigger.previousElementSibling.cloneNode(true);\n      for (const childEl of codeEl.children) {\n        if (isCodeAnnotation(childEl)) {\n          childEl.remove();\n        }\n      }\n      return codeEl.innerText;\n    }\n  });\n  clipboard.on('success', function(e) {\n    // button target\n    const button = e.trigger;\n    // don't keep focus\n    button.blur();\n    // flash \"checked\"\n    button.classList.add('code-copy-button-checked');\n    var currentTitle = button.getAttribute(\"title\");\n    button.setAttribute(\"title\", \"Copied!\");\n    let tooltip;\n    if (window.bootstrap) {\n      button.setAttribute(\"data-bs-toggle\", \"tooltip\");\n      button.setAttribute(\"data-bs-placement\", \"left\");\n      button.setAttribute(\"data-bs-title\", \"Copied!\");\n      tooltip = new bootstrap.Tooltip(button, \n        { trigger: \"manual\", \n          customClass: \"code-copy-button-tooltip\",\n          offset: [0, -8]});\n      tooltip.show();    \n    }\n    setTimeout(function() {\n      if (tooltip) {\n        tooltip.hide();\n        button.removeAttribute(\"data-bs-title\");\n        button.removeAttribute(\"data-bs-toggle\");\n        button.removeAttribute(\"data-bs-placement\");\n      }\n      button.setAttribute(\"title\", currentTitle);\n      button.classList.remove('code-copy-button-checked');\n    }, 1000);\n    // clear code selection\n    e.clearSelection();\n  });\n  function tippyHover(el, contentFn) {\n    const config = {\n      allowHTML: true,\n      content: contentFn,\n      maxWidth: 500,\n      delay: 100,\n      arrow: false,\n      appendTo: function(el) {\n          return el.parentElement;\n      },\n      interactive: true,\n      interactiveBorder: 10,\n      theme: 'quarto',\n      placement: 'bottom-start'\n    };\n    window.tippy(el, config); \n  }\n  const noterefs = window.document.querySelectorAll('a[role=\"doc-noteref\"]');\n  for (var i=0; i&lt;noterefs.length; i++) {\n    const ref = noterefs[i];\n    tippyHover(ref, function() {\n      // use id or data attribute instead here\n      let href = ref.getAttribute('data-footnote-href') || ref.getAttribute('href');\n      try { href = new URL(href).hash; } catch {}\n      const id = href.replace(/^#\\/?/, \"\");\n      const note = window.document.getElementById(id);\n      return note.innerHTML;\n    });\n  }\n      let selectedAnnoteEl;\n      const selectorForAnnotation = ( cell, annotation) =&gt; {\n        let cellAttr = 'data-code-cell=\"' + cell + '\"';\n        let lineAttr = 'data-code-annotation=\"' +  annotation + '\"';\n        const selector = 'span[' + cellAttr + '][' + lineAttr + ']';\n        return selector;\n      }\n      const selectCodeLines = (annoteEl) =&gt; {\n        const doc = window.document;\n        const targetCell = annoteEl.getAttribute(\"data-target-cell\");\n        const targetAnnotation = annoteEl.getAttribute(\"data-target-annotation\");\n        const annoteSpan = window.document.querySelector(selectorForAnnotation(targetCell, targetAnnotation));\n        const lines = annoteSpan.getAttribute(\"data-code-lines\").split(\",\");\n        const lineIds = lines.map((line) =&gt; {\n          return targetCell + \"-\" + line;\n        })\n        let top = null;\n        let height = null;\n        let parent = null;\n        if (lineIds.length &gt; 0) {\n            //compute the position of the single el (top and bottom and make a div)\n            const el = window.document.getElementById(lineIds[0]);\n            top = el.offsetTop;\n            height = el.offsetHeight;\n            parent = el.parentElement.parentElement;\n          if (lineIds.length &gt; 1) {\n            const lastEl = window.document.getElementById(lineIds[lineIds.length - 1]);\n            const bottom = lastEl.offsetTop + lastEl.offsetHeight;\n            height = bottom - top;\n          }\n          if (top !== null && height !== null && parent !== null) {\n            // cook up a div (if necessary) and position it \n            let div = window.document.getElementById(\"code-annotation-line-highlight\");\n            if (div === null) {\n              div = window.document.createElement(\"div\");\n              div.setAttribute(\"id\", \"code-annotation-line-highlight\");\n              div.style.position = 'absolute';\n              parent.appendChild(div);\n            }\n            div.style.top = top - 2 + \"px\";\n            div.style.height = height + 4 + \"px\";\n            let gutterDiv = window.document.getElementById(\"code-annotation-line-highlight-gutter\");\n            if (gutterDiv === null) {\n              gutterDiv = window.document.createElement(\"div\");\n              gutterDiv.setAttribute(\"id\", \"code-annotation-line-highlight-gutter\");\n              gutterDiv.style.position = 'absolute';\n              const codeCell = window.document.getElementById(targetCell);\n              const gutter = codeCell.querySelector('.code-annotation-gutter');\n              gutter.appendChild(gutterDiv);\n            }\n            gutterDiv.style.top = top - 2 + \"px\";\n            gutterDiv.style.height = height + 4 + \"px\";\n          }\n          selectedAnnoteEl = annoteEl;\n        }\n      };\n      const unselectCodeLines = () =&gt; {\n        const elementsIds = [\"code-annotation-line-highlight\", \"code-annotation-line-highlight-gutter\"];\n        elementsIds.forEach((elId) =&gt; {\n          const div = window.document.getElementById(elId);\n          if (div) {\n            div.remove();\n          }\n        });\n        selectedAnnoteEl = undefined;\n      };\n      // Attach click handler to the DT\n      const annoteDls = window.document.querySelectorAll('dt[data-target-cell]');\n      for (const annoteDlNode of annoteDls) {\n        annoteDlNode.addEventListener('click', (event) =&gt; {\n          const clickedEl = event.target;\n          if (clickedEl !== selectedAnnoteEl) {\n            unselectCodeLines();\n            const activeEl = window.document.querySelector('dt[data-target-cell].code-annotation-active');\n            if (activeEl) {\n              activeEl.classList.remove('code-annotation-active');\n            }\n            selectCodeLines(clickedEl);\n            clickedEl.classList.add('code-annotation-active');\n          } else {\n            // Unselect the line\n            unselectCodeLines();\n            clickedEl.classList.remove('code-annotation-active');\n          }\n        });\n      }\n  const findCites = (el) =&gt; {\n    const parentEl = el.parentElement;\n    if (parentEl) {\n      const cites = parentEl.dataset.cites;\n      if (cites) {\n        return {\n          el,\n          cites: cites.split(' ')\n        };\n      } else {\n        return findCites(el.parentElement)\n      }\n    } else {\n      return undefined;\n    }\n  };\n  var bibliorefs = window.document.querySelectorAll('a[role=\"doc-biblioref\"]');\n  for (var i=0; i&lt;bibliorefs.length; i++) {\n    const ref = bibliorefs[i];\n    const citeInfo = findCites(ref);\n    if (citeInfo) {\n      tippyHover(citeInfo.el, function() {\n        var popup = window.document.createElement('div');\n        citeInfo.cites.forEach(function(cite) {\n          var citeDiv = window.document.createElement('div');\n          citeDiv.classList.add('hanging-indent');\n          citeDiv.classList.add('csl-entry');\n          var biblioDiv = window.document.getElementById('ref-' + cite);\n          if (biblioDiv) {\n            citeDiv.innerHTML = biblioDiv.innerHTML;\n          }\n          popup.appendChild(citeDiv);\n        });\n        return popup.innerHTML;\n      });\n    }\n  }\n});\n&lt;/script&gt;\n&lt;nav class=\"page-navigation\"&gt;\n  &lt;div class=\"nav-page nav-page-previous\"&gt;\n      &lt;a  href=\"/content/day2/Lecture5_Bioconductor_201.html\" class=\"pagination-link\"&gt;\n        &lt;i class=\"bi bi-arrow-left-short\"&gt;&lt;/i&gt; &lt;span class=\"nav-page-text\"&gt;Lecture 5 - Bioconductor 201&lt;/span&gt;\n      &lt;/a&gt;          \n  &lt;/div&gt;\n  &lt;div class=\"nav-page nav-page-next\"&gt;\n      &lt;a  href=\"/content/day3/Lecture7_Improving_package-data_vignettes-....html\" class=\"pagination-link\"&gt;\n        &lt;span class=\"nav-page-text\"&gt;Lecture 8 - Vignettes and data&lt;/span&gt; &lt;i class=\"bi bi-arrow-right-short\"&gt;&lt;/i&gt;\n      &lt;/a&gt;\n  &lt;/div&gt;\n&lt;/nav&gt;\n&lt;/div&gt; &lt;!-- /content --&gt;\n&lt;footer class=\"footer\"&gt;\n  &lt;div class=\"nav-footer\"&gt;\n    &lt;div class=\"nav-footer-left\"&gt;\n      &lt;div class='footer-contents'&gt;Developing R/Bioconductor packages for Genomics |  \nJ. Serizay\n&lt;/div&gt;  \n    &lt;/div&gt;   \n    &lt;div class=\"nav-footer-center\"&gt;\n      &nbsp;\n    &lt;/div&gt;\n    &lt;div class=\"nav-footer-right\"&gt;\n      &lt;div class='footer-contents'&gt;This book was built with &lt;a href=\"https://quarto.org/\"&gt;Quarto&lt;/a&gt;.\n&lt;/div&gt;  \n    &lt;/div&gt;\n  &lt;/div&gt;\n&lt;/footer&gt;\n\n&lt;/body&gt;\n\n&lt;/html&gt;"
  },
  {
    "objectID": "content/day3/Lecture7_Improving_package-data_vignettes-....html",
    "href": "content/day3/Lecture7_Improving_package-data_vignettes-....html",
    "title": "Lecture 8 - Vignettes and data",
    "section": "",
    "text": "&lt;div id=\"quarto-navigation-envelope\" class=\"hidden\"&gt;\n&lt;p&gt;&lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar-title\"&gt;Developing R/Bioconductor packages for Genomics&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-navbar-title\"&gt;Developing R/Bioconductor packages for Genomics&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-next\"&gt;Lecture 7 - S4 classes in Bioconductor&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-prev\"&gt;Lecture 6 - Git versioning&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/index.html\"&gt;Welcome&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/program.html\"&gt;Program&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/prerequisites.html\"&gt;Prerequesites&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/extra.html\"&gt;Extra resources&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-1\"&gt;Day 1&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day1/Lecture0_course-overview.html\"&gt;Lecture 0 - Introduction to the workshop&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day1/Lecture1_Package_architecture.html\"&gt;Lecture 1 - R package architecture&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day1/Lecture2_Bioconductor_101.html\"&gt;Lecture 2 - Introduction to Bioconductor&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day1/Lecture3_Developer-toolkit.html\"&gt;Lecture 3 - R developer toolkit&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-2\"&gt;Day 2&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day2/Lecture4_Continuous_development-writing-documenting-testing.html\"&gt;Lecture 4 - Continuous development&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day2/Lecture5_Bioconductor_201.html\"&gt;Lecture 5 - Bioconductor 201&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-3\"&gt;Day 3&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day3/Lecture6_Git_versionning.html\"&gt;Lecture 6 - Git versioning&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day3/Lecture7_Improving_package-data_vignettes-....html\"&gt;Lecture 8 - Vignettes and data&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-4\"&gt;Day 4&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day4/Lecture8_S4_classes.html\"&gt;Lecture 7 - S4 classes in Bioconductor&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day4/Lecture9_Bioconductor_submission.html\"&gt;Lecture 9 - Bioconductor package submission&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-5\"&gt;Day 5&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day5/Lecture10_Other_package_types.html\"&gt;Lecture 10 - Other package types&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day5/Lecture11_Package_dissemination.html\"&gt;Lecture 11 - Package dissemination&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-6\"&gt;Exercises&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/exercises/Day1_Getting-started-with-Bioc.html\"&gt;&lt;span class=\"chapter-number\"&gt;1&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Getting started with Bioconductor ecosystem&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/exercises/Day2_Developer-virtuous-circle.html\"&gt;&lt;span class=\"chapter-number\"&gt;2&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Kickstarting an R package&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/exercises/Day3_Examples-test-data.html\"&gt;&lt;span class=\"chapter-number\"&gt;3&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Enriching package functionalities&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/exercises/Day4_S4-classes.html\"&gt;&lt;span class=\"chapter-number\"&gt;4&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Using S4 classes in a package&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/exercises/Day5_package-integration.html\"&gt;&lt;span class=\"chapter-number\"&gt;5&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Improving package integration&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"footer-left\"&gt;Developing R/Bioconductor packages for Genomics |&lt;br /&gt;\nJ. Serizay&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"footer-right\"&gt;This book was built with &lt;a href=\"https://quarto.org/\"&gt;Quarto&lt;/a&gt;.&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-breadcrumbs-223e2965264ed5a7335008666fb8bf98\"&gt;Day 3&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-breadcrumbs-e743154a7f22174286b1cece61686a3b\"&gt;Lecture 8 - Vignettes and data&lt;/span&gt;&lt;/p&gt;\n&lt;/div&gt;\n&lt;div id=\"quarto-meta-markdown\" class=\"hidden\"&gt;\n&lt;p&gt;&lt;span class=\"hidden\" data-render-id=\"quarto-metatitle\"&gt;Developing R/Bioconductor packages for Genomics - Lecture 8 - Vignettes and data&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-twittercardtitle\"&gt;Developing R/Bioconductor packages for Genomics - Lecture 8 - Vignettes and data&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-ogcardtitle\"&gt;Developing R/Bioconductor packages for Genomics - Lecture 8 - Vignettes and data&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-metasitename\"&gt;Developing R/Bioconductor packages for Genomics&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-twittercarddesc\"&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-ogcardddesc\"&gt;&lt;/span&gt;&lt;/p&gt;\n&lt;/div&gt;\n\n&lt;/main&gt; &lt;!-- /main --&gt;\n&lt;script id = \"quarto-html-after-body\" type=\"application/javascript\"&gt;\nwindow.document.addEventListener(\"DOMContentLoaded\", function (event) {\n  const toggleBodyColorMode = (bsSheetEl) =&gt; {\n    const mode = bsSheetEl.getAttribute(\"data-mode\");\n    const bodyEl = window.document.querySelector(\"body\");\n    if (mode === \"dark\") {\n      bodyEl.classList.add(\"quarto-dark\");\n      bodyEl.classList.remove(\"quarto-light\");\n    } else {\n      bodyEl.classList.add(\"quarto-light\");\n      bodyEl.classList.remove(\"quarto-dark\");\n    }\n  }\n  const toggleBodyColorPrimary = () =&gt; {\n    const bsSheetEl = window.document.querySelector(\"link#quarto-bootstrap\");\n    if (bsSheetEl) {\n      toggleBodyColorMode(bsSheetEl);\n    }\n  }\n  toggleBodyColorPrimary();  \n  const icon = \"\";\n  const anchorJS = new window.AnchorJS();\n  anchorJS.options = {\n    placement: 'right',\n    icon: icon\n  };\n  anchorJS.add('.anchored');\n  const isCodeAnnotation = (el) =&gt; {\n    for (const clz of el.classList) {\n      if (clz.startsWith('code-annotation-')) {                     \n        return true;\n      }\n    }\n    return false;\n  }\n  const clipboard = new window.ClipboardJS('.code-copy-button', {\n    text: function(trigger) {\n      const codeEl = trigger.previousElementSibling.cloneNode(true);\n      for (const childEl of codeEl.children) {\n        if (isCodeAnnotation(childEl)) {\n          childEl.remove();\n        }\n      }\n      return codeEl.innerText;\n    }\n  });\n  clipboard.on('success', function(e) {\n    // button target\n    const button = e.trigger;\n    // don't keep focus\n    button.blur();\n    // flash \"checked\"\n    button.classList.add('code-copy-button-checked');\n    var currentTitle = button.getAttribute(\"title\");\n    button.setAttribute(\"title\", \"Copied!\");\n    let tooltip;\n    if (window.bootstrap) {\n      button.setAttribute(\"data-bs-toggle\", \"tooltip\");\n      button.setAttribute(\"data-bs-placement\", \"left\");\n      button.setAttribute(\"data-bs-title\", \"Copied!\");\n      tooltip = new bootstrap.Tooltip(button, \n        { trigger: \"manual\", \n          customClass: \"code-copy-button-tooltip\",\n          offset: [0, -8]});\n      tooltip.show();    \n    }\n    setTimeout(function() {\n      if (tooltip) {\n        tooltip.hide();\n        button.removeAttribute(\"data-bs-title\");\n        button.removeAttribute(\"data-bs-toggle\");\n        button.removeAttribute(\"data-bs-placement\");\n      }\n      button.setAttribute(\"title\", currentTitle);\n      button.classList.remove('code-copy-button-checked');\n    }, 1000);\n    // clear code selection\n    e.clearSelection();\n  });\n  function tippyHover(el, contentFn) {\n    const config = {\n      allowHTML: true,\n      content: contentFn,\n      maxWidth: 500,\n      delay: 100,\n      arrow: false,\n      appendTo: function(el) {\n          return el.parentElement;\n      },\n      interactive: true,\n      interactiveBorder: 10,\n      theme: 'quarto',\n      placement: 'bottom-start'\n    };\n    window.tippy(el, config); \n  }\n  const noterefs = window.document.querySelectorAll('a[role=\"doc-noteref\"]');\n  for (var i=0; i&lt;noterefs.length; i++) {\n    const ref = noterefs[i];\n    tippyHover(ref, function() {\n      // use id or data attribute instead here\n      let href = ref.getAttribute('data-footnote-href') || ref.getAttribute('href');\n      try { href = new URL(href).hash; } catch {}\n      const id = href.replace(/^#\\/?/, \"\");\n      const note = window.document.getElementById(id);\n      return note.innerHTML;\n    });\n  }\n      let selectedAnnoteEl;\n      const selectorForAnnotation = ( cell, annotation) =&gt; {\n        let cellAttr = 'data-code-cell=\"' + cell + '\"';\n        let lineAttr = 'data-code-annotation=\"' +  annotation + '\"';\n        const selector = 'span[' + cellAttr + '][' + lineAttr + ']';\n        return selector;\n      }\n      const selectCodeLines = (annoteEl) =&gt; {\n        const doc = window.document;\n        const targetCell = annoteEl.getAttribute(\"data-target-cell\");\n        const targetAnnotation = annoteEl.getAttribute(\"data-target-annotation\");\n        const annoteSpan = window.document.querySelector(selectorForAnnotation(targetCell, targetAnnotation));\n        const lines = annoteSpan.getAttribute(\"data-code-lines\").split(\",\");\n        const lineIds = lines.map((line) =&gt; {\n          return targetCell + \"-\" + line;\n        })\n        let top = null;\n        let height = null;\n        let parent = null;\n        if (lineIds.length &gt; 0) {\n            //compute the position of the single el (top and bottom and make a div)\n            const el = window.document.getElementById(lineIds[0]);\n            top = el.offsetTop;\n            height = el.offsetHeight;\n            parent = el.parentElement.parentElement;\n          if (lineIds.length &gt; 1) {\n            const lastEl = window.document.getElementById(lineIds[lineIds.length - 1]);\n            const bottom = lastEl.offsetTop + lastEl.offsetHeight;\n            height = bottom - top;\n          }\n          if (top !== null && height !== null && parent !== null) {\n            // cook up a div (if necessary) and position it \n            let div = window.document.getElementById(\"code-annotation-line-highlight\");\n            if (div === null) {\n              div = window.document.createElement(\"div\");\n              div.setAttribute(\"id\", \"code-annotation-line-highlight\");\n              div.style.position = 'absolute';\n              parent.appendChild(div);\n            }\n            div.style.top = top - 2 + \"px\";\n            div.style.height = height + 4 + \"px\";\n            let gutterDiv = window.document.getElementById(\"code-annotation-line-highlight-gutter\");\n            if (gutterDiv === null) {\n              gutterDiv = window.document.createElement(\"div\");\n              gutterDiv.setAttribute(\"id\", \"code-annotation-line-highlight-gutter\");\n              gutterDiv.style.position = 'absolute';\n              const codeCell = window.document.getElementById(targetCell);\n              const gutter = codeCell.querySelector('.code-annotation-gutter');\n              gutter.appendChild(gutterDiv);\n            }\n            gutterDiv.style.top = top - 2 + \"px\";\n            gutterDiv.style.height = height + 4 + \"px\";\n          }\n          selectedAnnoteEl = annoteEl;\n        }\n      };\n      const unselectCodeLines = () =&gt; {\n        const elementsIds = [\"code-annotation-line-highlight\", \"code-annotation-line-highlight-gutter\"];\n        elementsIds.forEach((elId) =&gt; {\n          const div = window.document.getElementById(elId);\n          if (div) {\n            div.remove();\n          }\n        });\n        selectedAnnoteEl = undefined;\n      };\n      // Attach click handler to the DT\n      const annoteDls = window.document.querySelectorAll('dt[data-target-cell]');\n      for (const annoteDlNode of annoteDls) {\n        annoteDlNode.addEventListener('click', (event) =&gt; {\n          const clickedEl = event.target;\n          if (clickedEl !== selectedAnnoteEl) {\n            unselectCodeLines();\n            const activeEl = window.document.querySelector('dt[data-target-cell].code-annotation-active');\n            if (activeEl) {\n              activeEl.classList.remove('code-annotation-active');\n            }\n            selectCodeLines(clickedEl);\n            clickedEl.classList.add('code-annotation-active');\n          } else {\n            // Unselect the line\n            unselectCodeLines();\n            clickedEl.classList.remove('code-annotation-active');\n          }\n        });\n      }\n  const findCites = (el) =&gt; {\n    const parentEl = el.parentElement;\n    if (parentEl) {\n      const cites = parentEl.dataset.cites;\n      if (cites) {\n        return {\n          el,\n          cites: cites.split(' ')\n        };\n      } else {\n        return findCites(el.parentElement)\n      }\n    } else {\n      return undefined;\n    }\n  };\n  var bibliorefs = window.document.querySelectorAll('a[role=\"doc-biblioref\"]');\n  for (var i=0; i&lt;bibliorefs.length; i++) {\n    const ref = bibliorefs[i];\n    const citeInfo = findCites(ref);\n    if (citeInfo) {\n      tippyHover(citeInfo.el, function() {\n        var popup = window.document.createElement('div');\n        citeInfo.cites.forEach(function(cite) {\n          var citeDiv = window.document.createElement('div');\n          citeDiv.classList.add('hanging-indent');\n          citeDiv.classList.add('csl-entry');\n          var biblioDiv = window.document.getElementById('ref-' + cite);\n          if (biblioDiv) {\n            citeDiv.innerHTML = biblioDiv.innerHTML;\n          }\n          popup.appendChild(citeDiv);\n        });\n        return popup.innerHTML;\n      });\n    }\n  }\n});\n&lt;/script&gt;\n&lt;nav class=\"page-navigation\"&gt;\n  &lt;div class=\"nav-page nav-page-previous\"&gt;\n      &lt;a  href=\"/content/day3/Lecture6_Git_versionning.html\" class=\"pagination-link\"&gt;\n        &lt;i class=\"bi bi-arrow-left-short\"&gt;&lt;/i&gt; &lt;span class=\"nav-page-text\"&gt;Lecture 6 - Git versioning&lt;/span&gt;\n      &lt;/a&gt;          \n  &lt;/div&gt;\n  &lt;div class=\"nav-page nav-page-next\"&gt;\n      &lt;a  href=\"/content/day4/Lecture8_S4_classes.html\" class=\"pagination-link\"&gt;\n        &lt;span class=\"nav-page-text\"&gt;Lecture 7 - S4 classes in Bioconductor&lt;/span&gt; &lt;i class=\"bi bi-arrow-right-short\"&gt;&lt;/i&gt;\n      &lt;/a&gt;\n  &lt;/div&gt;\n&lt;/nav&gt;\n&lt;/div&gt; &lt;!-- /content --&gt;\n&lt;footer class=\"footer\"&gt;\n  &lt;div class=\"nav-footer\"&gt;\n    &lt;div class=\"nav-footer-left\"&gt;\n      &lt;div class='footer-contents'&gt;Developing R/Bioconductor packages for Genomics |  \nJ. Serizay\n&lt;/div&gt;  \n    &lt;/div&gt;   \n    &lt;div class=\"nav-footer-center\"&gt;\n      &nbsp;\n    &lt;/div&gt;\n    &lt;div class=\"nav-footer-right\"&gt;\n      &lt;div class='footer-contents'&gt;This book was built with &lt;a href=\"https://quarto.org/\"&gt;Quarto&lt;/a&gt;.\n&lt;/div&gt;  \n    &lt;/div&gt;\n  &lt;/div&gt;\n&lt;/footer&gt;\n\n&lt;/body&gt;\n\n&lt;/html&gt;"
  },
  {
    "objectID": "content/day4/Lecture8_S4_classes.html",
    "href": "content/day4/Lecture8_S4_classes.html",
    "title": "Lecture 7 - S4 classes in Bioconductor",
    "section": "",
    "text": "&lt;div id=\"quarto-navigation-envelope\" class=\"hidden\"&gt;\n&lt;p&gt;&lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar-title\"&gt;Developing R/Bioconductor packages for Genomics&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-navbar-title\"&gt;Developing R/Bioconductor packages for Genomics&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-next\"&gt;Lecture 9 - Bioconductor package submission&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-prev\"&gt;Lecture 8 - Vignettes and data&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/index.html\"&gt;Welcome&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/program.html\"&gt;Program&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/prerequisites.html\"&gt;Prerequesites&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/extra.html\"&gt;Extra resources&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-1\"&gt;Day 1&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day1/Lecture0_course-overview.html\"&gt;Lecture 0 - Introduction to the workshop&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day1/Lecture1_Package_architecture.html\"&gt;Lecture 1 - R package architecture&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day1/Lecture2_Bioconductor_101.html\"&gt;Lecture 2 - Introduction to Bioconductor&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day1/Lecture3_Developer-toolkit.html\"&gt;Lecture 3 - R developer toolkit&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-2\"&gt;Day 2&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day2/Lecture4_Continuous_development-writing-documenting-testing.html\"&gt;Lecture 4 - Continuous development&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day2/Lecture5_Bioconductor_201.html\"&gt;Lecture 5 - Bioconductor 201&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-3\"&gt;Day 3&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day3/Lecture6_Git_versionning.html\"&gt;Lecture 6 - Git versioning&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day3/Lecture7_Improving_package-data_vignettes-....html\"&gt;Lecture 8 - Vignettes and data&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-4\"&gt;Day 4&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day4/Lecture8_S4_classes.html\"&gt;Lecture 7 - S4 classes in Bioconductor&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day4/Lecture9_Bioconductor_submission.html\"&gt;Lecture 9 - Bioconductor package submission&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-5\"&gt;Day 5&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day5/Lecture10_Other_package_types.html\"&gt;Lecture 10 - Other package types&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day5/Lecture11_Package_dissemination.html\"&gt;Lecture 11 - Package dissemination&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-6\"&gt;Exercises&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/exercises/Day1_Getting-started-with-Bioc.html\"&gt;&lt;span class=\"chapter-number\"&gt;1&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Getting started with Bioconductor ecosystem&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/exercises/Day2_Developer-virtuous-circle.html\"&gt;&lt;span class=\"chapter-number\"&gt;2&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Kickstarting an R package&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/exercises/Day3_Examples-test-data.html\"&gt;&lt;span class=\"chapter-number\"&gt;3&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Enriching package functionalities&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/exercises/Day4_S4-classes.html\"&gt;&lt;span class=\"chapter-number\"&gt;4&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Using S4 classes in a package&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/exercises/Day5_package-integration.html\"&gt;&lt;span class=\"chapter-number\"&gt;5&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Improving package integration&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"footer-left\"&gt;Developing R/Bioconductor packages for Genomics |&lt;br /&gt;\nJ. Serizay&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"footer-right\"&gt;This book was built with &lt;a href=\"https://quarto.org/\"&gt;Quarto&lt;/a&gt;.&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-breadcrumbs-df06f69911ab808ad1be095f974e0508\"&gt;Day 4&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-breadcrumbs-c4d4cf1a36220ca60aad58d36dbef3f3\"&gt;Lecture 7 - S4 classes in Bioconductor&lt;/span&gt;&lt;/p&gt;\n&lt;/div&gt;\n&lt;div id=\"quarto-meta-markdown\" class=\"hidden\"&gt;\n&lt;p&gt;&lt;span class=\"hidden\" data-render-id=\"quarto-metatitle\"&gt;Developing R/Bioconductor packages for Genomics - Lecture 7 - S4 classes in Bioconductor&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-twittercardtitle\"&gt;Developing R/Bioconductor packages for Genomics - Lecture 7 - S4 classes in Bioconductor&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-ogcardtitle\"&gt;Developing R/Bioconductor packages for Genomics - Lecture 7 - S4 classes in Bioconductor&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-metasitename\"&gt;Developing R/Bioconductor packages for Genomics&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-twittercarddesc\"&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-ogcardddesc\"&gt;&lt;/span&gt;&lt;/p&gt;\n&lt;/div&gt;\n\n&lt;/main&gt; &lt;!-- /main --&gt;\n&lt;script id = \"quarto-html-after-body\" type=\"application/javascript\"&gt;\nwindow.document.addEventListener(\"DOMContentLoaded\", function (event) {\n  const toggleBodyColorMode = (bsSheetEl) =&gt; {\n    const mode = bsSheetEl.getAttribute(\"data-mode\");\n    const bodyEl = window.document.querySelector(\"body\");\n    if (mode === \"dark\") {\n      bodyEl.classList.add(\"quarto-dark\");\n      bodyEl.classList.remove(\"quarto-light\");\n    } else {\n      bodyEl.classList.add(\"quarto-light\");\n      bodyEl.classList.remove(\"quarto-dark\");\n    }\n  }\n  const toggleBodyColorPrimary = () =&gt; {\n    const bsSheetEl = window.document.querySelector(\"link#quarto-bootstrap\");\n    if (bsSheetEl) {\n      toggleBodyColorMode(bsSheetEl);\n    }\n  }\n  toggleBodyColorPrimary();  \n  const icon = \"\";\n  const anchorJS = new window.AnchorJS();\n  anchorJS.options = {\n    placement: 'right',\n    icon: icon\n  };\n  anchorJS.add('.anchored');\n  const isCodeAnnotation = (el) =&gt; {\n    for (const clz of el.classList) {\n      if (clz.startsWith('code-annotation-')) {                     \n        return true;\n      }\n    }\n    return false;\n  }\n  const clipboard = new window.ClipboardJS('.code-copy-button', {\n    text: function(trigger) {\n      const codeEl = trigger.previousElementSibling.cloneNode(true);\n      for (const childEl of codeEl.children) {\n        if (isCodeAnnotation(childEl)) {\n          childEl.remove();\n        }\n      }\n      return codeEl.innerText;\n    }\n  });\n  clipboard.on('success', function(e) {\n    // button target\n    const button = e.trigger;\n    // don't keep focus\n    button.blur();\n    // flash \"checked\"\n    button.classList.add('code-copy-button-checked');\n    var currentTitle = button.getAttribute(\"title\");\n    button.setAttribute(\"title\", \"Copied!\");\n    let tooltip;\n    if (window.bootstrap) {\n      button.setAttribute(\"data-bs-toggle\", \"tooltip\");\n      button.setAttribute(\"data-bs-placement\", \"left\");\n      button.setAttribute(\"data-bs-title\", \"Copied!\");\n      tooltip = new bootstrap.Tooltip(button, \n        { trigger: \"manual\", \n          customClass: \"code-copy-button-tooltip\",\n          offset: [0, -8]});\n      tooltip.show();    \n    }\n    setTimeout(function() {\n      if (tooltip) {\n        tooltip.hide();\n        button.removeAttribute(\"data-bs-title\");\n        button.removeAttribute(\"data-bs-toggle\");\n        button.removeAttribute(\"data-bs-placement\");\n      }\n      button.setAttribute(\"title\", currentTitle);\n      button.classList.remove('code-copy-button-checked');\n    }, 1000);\n    // clear code selection\n    e.clearSelection();\n  });\n  function tippyHover(el, contentFn) {\n    const config = {\n      allowHTML: true,\n      content: contentFn,\n      maxWidth: 500,\n      delay: 100,\n      arrow: false,\n      appendTo: function(el) {\n          return el.parentElement;\n      },\n      interactive: true,\n      interactiveBorder: 10,\n      theme: 'quarto',\n      placement: 'bottom-start'\n    };\n    window.tippy(el, config); \n  }\n  const noterefs = window.document.querySelectorAll('a[role=\"doc-noteref\"]');\n  for (var i=0; i&lt;noterefs.length; i++) {\n    const ref = noterefs[i];\n    tippyHover(ref, function() {\n      // use id or data attribute instead here\n      let href = ref.getAttribute('data-footnote-href') || ref.getAttribute('href');\n      try { href = new URL(href).hash; } catch {}\n      const id = href.replace(/^#\\/?/, \"\");\n      const note = window.document.getElementById(id);\n      return note.innerHTML;\n    });\n  }\n      let selectedAnnoteEl;\n      const selectorForAnnotation = ( cell, annotation) =&gt; {\n        let cellAttr = 'data-code-cell=\"' + cell + '\"';\n        let lineAttr = 'data-code-annotation=\"' +  annotation + '\"';\n        const selector = 'span[' + cellAttr + '][' + lineAttr + ']';\n        return selector;\n      }\n      const selectCodeLines = (annoteEl) =&gt; {\n        const doc = window.document;\n        const targetCell = annoteEl.getAttribute(\"data-target-cell\");\n        const targetAnnotation = annoteEl.getAttribute(\"data-target-annotation\");\n        const annoteSpan = window.document.querySelector(selectorForAnnotation(targetCell, targetAnnotation));\n        const lines = annoteSpan.getAttribute(\"data-code-lines\").split(\",\");\n        const lineIds = lines.map((line) =&gt; {\n          return targetCell + \"-\" + line;\n        })\n        let top = null;\n        let height = null;\n        let parent = null;\n        if (lineIds.length &gt; 0) {\n            //compute the position of the single el (top and bottom and make a div)\n            const el = window.document.getElementById(lineIds[0]);\n            top = el.offsetTop;\n            height = el.offsetHeight;\n            parent = el.parentElement.parentElement;\n          if (lineIds.length &gt; 1) {\n            const lastEl = window.document.getElementById(lineIds[lineIds.length - 1]);\n            const bottom = lastEl.offsetTop + lastEl.offsetHeight;\n            height = bottom - top;\n          }\n          if (top !== null && height !== null && parent !== null) {\n            // cook up a div (if necessary) and position it \n            let div = window.document.getElementById(\"code-annotation-line-highlight\");\n            if (div === null) {\n              div = window.document.createElement(\"div\");\n              div.setAttribute(\"id\", \"code-annotation-line-highlight\");\n              div.style.position = 'absolute';\n              parent.appendChild(div);\n            }\n            div.style.top = top - 2 + \"px\";\n            div.style.height = height + 4 + \"px\";\n            let gutterDiv = window.document.getElementById(\"code-annotation-line-highlight-gutter\");\n            if (gutterDiv === null) {\n              gutterDiv = window.document.createElement(\"div\");\n              gutterDiv.setAttribute(\"id\", \"code-annotation-line-highlight-gutter\");\n              gutterDiv.style.position = 'absolute';\n              const codeCell = window.document.getElementById(targetCell);\n              const gutter = codeCell.querySelector('.code-annotation-gutter');\n              gutter.appendChild(gutterDiv);\n            }\n            gutterDiv.style.top = top - 2 + \"px\";\n            gutterDiv.style.height = height + 4 + \"px\";\n          }\n          selectedAnnoteEl = annoteEl;\n        }\n      };\n      const unselectCodeLines = () =&gt; {\n        const elementsIds = [\"code-annotation-line-highlight\", \"code-annotation-line-highlight-gutter\"];\n        elementsIds.forEach((elId) =&gt; {\n          const div = window.document.getElementById(elId);\n          if (div) {\n            div.remove();\n          }\n        });\n        selectedAnnoteEl = undefined;\n      };\n      // Attach click handler to the DT\n      const annoteDls = window.document.querySelectorAll('dt[data-target-cell]');\n      for (const annoteDlNode of annoteDls) {\n        annoteDlNode.addEventListener('click', (event) =&gt; {\n          const clickedEl = event.target;\n          if (clickedEl !== selectedAnnoteEl) {\n            unselectCodeLines();\n            const activeEl = window.document.querySelector('dt[data-target-cell].code-annotation-active');\n            if (activeEl) {\n              activeEl.classList.remove('code-annotation-active');\n            }\n            selectCodeLines(clickedEl);\n            clickedEl.classList.add('code-annotation-active');\n          } else {\n            // Unselect the line\n            unselectCodeLines();\n            clickedEl.classList.remove('code-annotation-active');\n          }\n        });\n      }\n  const findCites = (el) =&gt; {\n    const parentEl = el.parentElement;\n    if (parentEl) {\n      const cites = parentEl.dataset.cites;\n      if (cites) {\n        return {\n          el,\n          cites: cites.split(' ')\n        };\n      } else {\n        return findCites(el.parentElement)\n      }\n    } else {\n      return undefined;\n    }\n  };\n  var bibliorefs = window.document.querySelectorAll('a[role=\"doc-biblioref\"]');\n  for (var i=0; i&lt;bibliorefs.length; i++) {\n    const ref = bibliorefs[i];\n    const citeInfo = findCites(ref);\n    if (citeInfo) {\n      tippyHover(citeInfo.el, function() {\n        var popup = window.document.createElement('div');\n        citeInfo.cites.forEach(function(cite) {\n          var citeDiv = window.document.createElement('div');\n          citeDiv.classList.add('hanging-indent');\n          citeDiv.classList.add('csl-entry');\n          var biblioDiv = window.document.getElementById('ref-' + cite);\n          if (biblioDiv) {\n            citeDiv.innerHTML = biblioDiv.innerHTML;\n          }\n          popup.appendChild(citeDiv);\n        });\n        return popup.innerHTML;\n      });\n    }\n  }\n});\n&lt;/script&gt;\n&lt;nav class=\"page-navigation\"&gt;\n  &lt;div class=\"nav-page nav-page-previous\"&gt;\n      &lt;a  href=\"/content/day3/Lecture7_Improving_package-data_vignettes-....html\" class=\"pagination-link\"&gt;\n        &lt;i class=\"bi bi-arrow-left-short\"&gt;&lt;/i&gt; &lt;span class=\"nav-page-text\"&gt;Lecture 8 - Vignettes and data&lt;/span&gt;\n      &lt;/a&gt;          \n  &lt;/div&gt;\n  &lt;div class=\"nav-page nav-page-next\"&gt;\n      &lt;a  href=\"/content/day4/Lecture9_Bioconductor_submission.html\" class=\"pagination-link\"&gt;\n        &lt;span class=\"nav-page-text\"&gt;Lecture 9 - Bioconductor package submission&lt;/span&gt; &lt;i class=\"bi bi-arrow-right-short\"&gt;&lt;/i&gt;\n      &lt;/a&gt;\n  &lt;/div&gt;\n&lt;/nav&gt;\n&lt;/div&gt; &lt;!-- /content --&gt;\n&lt;footer class=\"footer\"&gt;\n  &lt;div class=\"nav-footer\"&gt;\n    &lt;div class=\"nav-footer-left\"&gt;\n      &lt;div class='footer-contents'&gt;Developing R/Bioconductor packages for Genomics |  \nJ. Serizay\n&lt;/div&gt;  \n    &lt;/div&gt;   \n    &lt;div class=\"nav-footer-center\"&gt;\n      &nbsp;\n    &lt;/div&gt;\n    &lt;div class=\"nav-footer-right\"&gt;\n      &lt;div class='footer-contents'&gt;This book was built with &lt;a href=\"https://quarto.org/\"&gt;Quarto&lt;/a&gt;.\n&lt;/div&gt;  \n    &lt;/div&gt;\n  &lt;/div&gt;\n&lt;/footer&gt;\n\n&lt;/body&gt;\n\n&lt;/html&gt;"
  },
  {
    "objectID": "content/day4/Lecture9_Bioconductor_submission.html",
    "href": "content/day4/Lecture9_Bioconductor_submission.html",
    "title": "Lecture 9 - Bioconductor package submission",
    "section": "",
    "text": "&lt;div id=\"quarto-navigation-envelope\" class=\"hidden\"&gt;\n&lt;p&gt;&lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar-title\"&gt;Developing R/Bioconductor packages for Genomics&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-navbar-title\"&gt;Developing R/Bioconductor packages for Genomics&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-next\"&gt;Lecture 10 - Other package types&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-prev\"&gt;Lecture 7 - S4 classes in Bioconductor&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/index.html\"&gt;Welcome&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/program.html\"&gt;Program&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/prerequisites.html\"&gt;Prerequesites&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/extra.html\"&gt;Extra resources&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-1\"&gt;Day 1&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day1/Lecture0_course-overview.html\"&gt;Lecture 0 - Introduction to the workshop&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day1/Lecture1_Package_architecture.html\"&gt;Lecture 1 - R package architecture&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day1/Lecture2_Bioconductor_101.html\"&gt;Lecture 2 - Introduction to Bioconductor&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day1/Lecture3_Developer-toolkit.html\"&gt;Lecture 3 - R developer toolkit&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-2\"&gt;Day 2&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day2/Lecture4_Continuous_development-writing-documenting-testing.html\"&gt;Lecture 4 - Continuous development&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day2/Lecture5_Bioconductor_201.html\"&gt;Lecture 5 - Bioconductor 201&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-3\"&gt;Day 3&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day3/Lecture6_Git_versionning.html\"&gt;Lecture 6 - Git versioning&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day3/Lecture7_Improving_package-data_vignettes-....html\"&gt;Lecture 8 - Vignettes and data&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-4\"&gt;Day 4&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day4/Lecture8_S4_classes.html\"&gt;Lecture 7 - S4 classes in Bioconductor&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day4/Lecture9_Bioconductor_submission.html\"&gt;Lecture 9 - Bioconductor package submission&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-5\"&gt;Day 5&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day5/Lecture10_Other_package_types.html\"&gt;Lecture 10 - Other package types&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day5/Lecture11_Package_dissemination.html\"&gt;Lecture 11 - Package dissemination&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-6\"&gt;Exercises&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/exercises/Day1_Getting-started-with-Bioc.html\"&gt;&lt;span class=\"chapter-number\"&gt;1&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Getting started with Bioconductor ecosystem&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/exercises/Day2_Developer-virtuous-circle.html\"&gt;&lt;span class=\"chapter-number\"&gt;2&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Kickstarting an R package&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/exercises/Day3_Examples-test-data.html\"&gt;&lt;span class=\"chapter-number\"&gt;3&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Enriching package functionalities&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/exercises/Day4_S4-classes.html\"&gt;&lt;span class=\"chapter-number\"&gt;4&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Using S4 classes in a package&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/exercises/Day5_package-integration.html\"&gt;&lt;span class=\"chapter-number\"&gt;5&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Improving package integration&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"footer-left\"&gt;Developing R/Bioconductor packages for Genomics |&lt;br /&gt;\nJ. Serizay&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"footer-right\"&gt;This book was built with &lt;a href=\"https://quarto.org/\"&gt;Quarto&lt;/a&gt;.&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-breadcrumbs-df06f69911ab808ad1be095f974e0508\"&gt;Day 4&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-breadcrumbs-cc7dbf4e8942338e9a98d1004e7c3f81\"&gt;Lecture 9 - Bioconductor package submission&lt;/span&gt;&lt;/p&gt;\n&lt;/div&gt;\n&lt;div id=\"quarto-meta-markdown\" class=\"hidden\"&gt;\n&lt;p&gt;&lt;span class=\"hidden\" data-render-id=\"quarto-metatitle\"&gt;Developing R/Bioconductor packages for Genomics - Lecture 9 - Bioconductor package submission&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-twittercardtitle\"&gt;Developing R/Bioconductor packages for Genomics - Lecture 9 - Bioconductor package submission&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-ogcardtitle\"&gt;Developing R/Bioconductor packages for Genomics - Lecture 9 - Bioconductor package submission&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-metasitename\"&gt;Developing R/Bioconductor packages for Genomics&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-twittercarddesc\"&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-ogcardddesc\"&gt;&lt;/span&gt;&lt;/p&gt;\n&lt;/div&gt;\n\n&lt;/main&gt; &lt;!-- /main --&gt;\n&lt;script id = \"quarto-html-after-body\" type=\"application/javascript\"&gt;\nwindow.document.addEventListener(\"DOMContentLoaded\", function (event) {\n  const toggleBodyColorMode = (bsSheetEl) =&gt; {\n    const mode = bsSheetEl.getAttribute(\"data-mode\");\n    const bodyEl = window.document.querySelector(\"body\");\n    if (mode === \"dark\") {\n      bodyEl.classList.add(\"quarto-dark\");\n      bodyEl.classList.remove(\"quarto-light\");\n    } else {\n      bodyEl.classList.add(\"quarto-light\");\n      bodyEl.classList.remove(\"quarto-dark\");\n    }\n  }\n  const toggleBodyColorPrimary = () =&gt; {\n    const bsSheetEl = window.document.querySelector(\"link#quarto-bootstrap\");\n    if (bsSheetEl) {\n      toggleBodyColorMode(bsSheetEl);\n    }\n  }\n  toggleBodyColorPrimary();  \n  const icon = \"\";\n  const anchorJS = new window.AnchorJS();\n  anchorJS.options = {\n    placement: 'right',\n    icon: icon\n  };\n  anchorJS.add('.anchored');\n  const isCodeAnnotation = (el) =&gt; {\n    for (const clz of el.classList) {\n      if (clz.startsWith('code-annotation-')) {                     \n        return true;\n      }\n    }\n    return false;\n  }\n  const clipboard = new window.ClipboardJS('.code-copy-button', {\n    text: function(trigger) {\n      const codeEl = trigger.previousElementSibling.cloneNode(true);\n      for (const childEl of codeEl.children) {\n        if (isCodeAnnotation(childEl)) {\n          childEl.remove();\n        }\n      }\n      return codeEl.innerText;\n    }\n  });\n  clipboard.on('success', function(e) {\n    // button target\n    const button = e.trigger;\n    // don't keep focus\n    button.blur();\n    // flash \"checked\"\n    button.classList.add('code-copy-button-checked');\n    var currentTitle = button.getAttribute(\"title\");\n    button.setAttribute(\"title\", \"Copied!\");\n    let tooltip;\n    if (window.bootstrap) {\n      button.setAttribute(\"data-bs-toggle\", \"tooltip\");\n      button.setAttribute(\"data-bs-placement\", \"left\");\n      button.setAttribute(\"data-bs-title\", \"Copied!\");\n      tooltip = new bootstrap.Tooltip(button, \n        { trigger: \"manual\", \n          customClass: \"code-copy-button-tooltip\",\n          offset: [0, -8]});\n      tooltip.show();    \n    }\n    setTimeout(function() {\n      if (tooltip) {\n        tooltip.hide();\n        button.removeAttribute(\"data-bs-title\");\n        button.removeAttribute(\"data-bs-toggle\");\n        button.removeAttribute(\"data-bs-placement\");\n      }\n      button.setAttribute(\"title\", currentTitle);\n      button.classList.remove('code-copy-button-checked');\n    }, 1000);\n    // clear code selection\n    e.clearSelection();\n  });\n  function tippyHover(el, contentFn) {\n    const config = {\n      allowHTML: true,\n      content: contentFn,\n      maxWidth: 500,\n      delay: 100,\n      arrow: false,\n      appendTo: function(el) {\n          return el.parentElement;\n      },\n      interactive: true,\n      interactiveBorder: 10,\n      theme: 'quarto',\n      placement: 'bottom-start'\n    };\n    window.tippy(el, config); \n  }\n  const noterefs = window.document.querySelectorAll('a[role=\"doc-noteref\"]');\n  for (var i=0; i&lt;noterefs.length; i++) {\n    const ref = noterefs[i];\n    tippyHover(ref, function() {\n      // use id or data attribute instead here\n      let href = ref.getAttribute('data-footnote-href') || ref.getAttribute('href');\n      try { href = new URL(href).hash; } catch {}\n      const id = href.replace(/^#\\/?/, \"\");\n      const note = window.document.getElementById(id);\n      return note.innerHTML;\n    });\n  }\n      let selectedAnnoteEl;\n      const selectorForAnnotation = ( cell, annotation) =&gt; {\n        let cellAttr = 'data-code-cell=\"' + cell + '\"';\n        let lineAttr = 'data-code-annotation=\"' +  annotation + '\"';\n        const selector = 'span[' + cellAttr + '][' + lineAttr + ']';\n        return selector;\n      }\n      const selectCodeLines = (annoteEl) =&gt; {\n        const doc = window.document;\n        const targetCell = annoteEl.getAttribute(\"data-target-cell\");\n        const targetAnnotation = annoteEl.getAttribute(\"data-target-annotation\");\n        const annoteSpan = window.document.querySelector(selectorForAnnotation(targetCell, targetAnnotation));\n        const lines = annoteSpan.getAttribute(\"data-code-lines\").split(\",\");\n        const lineIds = lines.map((line) =&gt; {\n          return targetCell + \"-\" + line;\n        })\n        let top = null;\n        let height = null;\n        let parent = null;\n        if (lineIds.length &gt; 0) {\n            //compute the position of the single el (top and bottom and make a div)\n            const el = window.document.getElementById(lineIds[0]);\n            top = el.offsetTop;\n            height = el.offsetHeight;\n            parent = el.parentElement.parentElement;\n          if (lineIds.length &gt; 1) {\n            const lastEl = window.document.getElementById(lineIds[lineIds.length - 1]);\n            const bottom = lastEl.offsetTop + lastEl.offsetHeight;\n            height = bottom - top;\n          }\n          if (top !== null && height !== null && parent !== null) {\n            // cook up a div (if necessary) and position it \n            let div = window.document.getElementById(\"code-annotation-line-highlight\");\n            if (div === null) {\n              div = window.document.createElement(\"div\");\n              div.setAttribute(\"id\", \"code-annotation-line-highlight\");\n              div.style.position = 'absolute';\n              parent.appendChild(div);\n            }\n            div.style.top = top - 2 + \"px\";\n            div.style.height = height + 4 + \"px\";\n            let gutterDiv = window.document.getElementById(\"code-annotation-line-highlight-gutter\");\n            if (gutterDiv === null) {\n              gutterDiv = window.document.createElement(\"div\");\n              gutterDiv.setAttribute(\"id\", \"code-annotation-line-highlight-gutter\");\n              gutterDiv.style.position = 'absolute';\n              const codeCell = window.document.getElementById(targetCell);\n              const gutter = codeCell.querySelector('.code-annotation-gutter');\n              gutter.appendChild(gutterDiv);\n            }\n            gutterDiv.style.top = top - 2 + \"px\";\n            gutterDiv.style.height = height + 4 + \"px\";\n          }\n          selectedAnnoteEl = annoteEl;\n        }\n      };\n      const unselectCodeLines = () =&gt; {\n        const elementsIds = [\"code-annotation-line-highlight\", \"code-annotation-line-highlight-gutter\"];\n        elementsIds.forEach((elId) =&gt; {\n          const div = window.document.getElementById(elId);\n          if (div) {\n            div.remove();\n          }\n        });\n        selectedAnnoteEl = undefined;\n      };\n      // Attach click handler to the DT\n      const annoteDls = window.document.querySelectorAll('dt[data-target-cell]');\n      for (const annoteDlNode of annoteDls) {\n        annoteDlNode.addEventListener('click', (event) =&gt; {\n          const clickedEl = event.target;\n          if (clickedEl !== selectedAnnoteEl) {\n            unselectCodeLines();\n            const activeEl = window.document.querySelector('dt[data-target-cell].code-annotation-active');\n            if (activeEl) {\n              activeEl.classList.remove('code-annotation-active');\n            }\n            selectCodeLines(clickedEl);\n            clickedEl.classList.add('code-annotation-active');\n          } else {\n            // Unselect the line\n            unselectCodeLines();\n            clickedEl.classList.remove('code-annotation-active');\n          }\n        });\n      }\n  const findCites = (el) =&gt; {\n    const parentEl = el.parentElement;\n    if (parentEl) {\n      const cites = parentEl.dataset.cites;\n      if (cites) {\n        return {\n          el,\n          cites: cites.split(' ')\n        };\n      } else {\n        return findCites(el.parentElement)\n      }\n    } else {\n      return undefined;\n    }\n  };\n  var bibliorefs = window.document.querySelectorAll('a[role=\"doc-biblioref\"]');\n  for (var i=0; i&lt;bibliorefs.length; i++) {\n    const ref = bibliorefs[i];\n    const citeInfo = findCites(ref);\n    if (citeInfo) {\n      tippyHover(citeInfo.el, function() {\n        var popup = window.document.createElement('div');\n        citeInfo.cites.forEach(function(cite) {\n          var citeDiv = window.document.createElement('div');\n          citeDiv.classList.add('hanging-indent');\n          citeDiv.classList.add('csl-entry');\n          var biblioDiv = window.document.getElementById('ref-' + cite);\n          if (biblioDiv) {\n            citeDiv.innerHTML = biblioDiv.innerHTML;\n          }\n          popup.appendChild(citeDiv);\n        });\n        return popup.innerHTML;\n      });\n    }\n  }\n});\n&lt;/script&gt;\n&lt;nav class=\"page-navigation\"&gt;\n  &lt;div class=\"nav-page nav-page-previous\"&gt;\n      &lt;a  href=\"/content/day4/Lecture8_S4_classes.html\" class=\"pagination-link\"&gt;\n        &lt;i class=\"bi bi-arrow-left-short\"&gt;&lt;/i&gt; &lt;span class=\"nav-page-text\"&gt;Lecture 7 - S4 classes in Bioconductor&lt;/span&gt;\n      &lt;/a&gt;          \n  &lt;/div&gt;\n  &lt;div class=\"nav-page nav-page-next\"&gt;\n      &lt;a  href=\"/content/day5/Lecture10_Other_package_types.html\" class=\"pagination-link\"&gt;\n        &lt;span class=\"nav-page-text\"&gt;Lecture 10 - Other package types&lt;/span&gt; &lt;i class=\"bi bi-arrow-right-short\"&gt;&lt;/i&gt;\n      &lt;/a&gt;\n  &lt;/div&gt;\n&lt;/nav&gt;\n&lt;/div&gt; &lt;!-- /content --&gt;\n&lt;footer class=\"footer\"&gt;\n  &lt;div class=\"nav-footer\"&gt;\n    &lt;div class=\"nav-footer-left\"&gt;\n      &lt;div class='footer-contents'&gt;Developing R/Bioconductor packages for Genomics |  \nJ. Serizay\n&lt;/div&gt;  \n    &lt;/div&gt;   \n    &lt;div class=\"nav-footer-center\"&gt;\n      &nbsp;\n    &lt;/div&gt;\n    &lt;div class=\"nav-footer-right\"&gt;\n      &lt;div class='footer-contents'&gt;This book was built with &lt;a href=\"https://quarto.org/\"&gt;Quarto&lt;/a&gt;.\n&lt;/div&gt;  \n    &lt;/div&gt;\n  &lt;/div&gt;\n&lt;/footer&gt;\n\n&lt;/body&gt;\n\n&lt;/html&gt;"
  },
  {
    "objectID": "content/day5/Lecture10_Other_package_types.html",
    "href": "content/day5/Lecture10_Other_package_types.html",
    "title": "Lecture 10 - Other package types",
    "section": "",
    "text": "&lt;div id=\"quarto-navigation-envelope\" class=\"hidden\"&gt;\n&lt;p&gt;&lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar-title\"&gt;Developing R/Bioconductor packages for Genomics&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-navbar-title\"&gt;Developing R/Bioconductor packages for Genomics&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-next\"&gt;Lecture 11 - Package dissemination&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-prev\"&gt;Lecture 9 - Bioconductor package submission&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/index.html\"&gt;Welcome&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/program.html\"&gt;Program&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/prerequisites.html\"&gt;Prerequesites&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/extra.html\"&gt;Extra resources&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-1\"&gt;Day 1&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day1/Lecture0_course-overview.html\"&gt;Lecture 0 - Introduction to the workshop&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day1/Lecture1_Package_architecture.html\"&gt;Lecture 1 - R package architecture&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day1/Lecture2_Bioconductor_101.html\"&gt;Lecture 2 - Introduction to Bioconductor&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day1/Lecture3_Developer-toolkit.html\"&gt;Lecture 3 - R developer toolkit&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-2\"&gt;Day 2&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day2/Lecture4_Continuous_development-writing-documenting-testing.html\"&gt;Lecture 4 - Continuous development&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day2/Lecture5_Bioconductor_201.html\"&gt;Lecture 5 - Bioconductor 201&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-3\"&gt;Day 3&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day3/Lecture6_Git_versionning.html\"&gt;Lecture 6 - Git versioning&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day3/Lecture7_Improving_package-data_vignettes-....html\"&gt;Lecture 8 - Vignettes and data&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-4\"&gt;Day 4&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day4/Lecture8_S4_classes.html\"&gt;Lecture 7 - S4 classes in Bioconductor&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day4/Lecture9_Bioconductor_submission.html\"&gt;Lecture 9 - Bioconductor package submission&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-5\"&gt;Day 5&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day5/Lecture10_Other_package_types.html\"&gt;Lecture 10 - Other package types&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day5/Lecture11_Package_dissemination.html\"&gt;Lecture 11 - Package dissemination&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-6\"&gt;Exercises&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/exercises/Day1_Getting-started-with-Bioc.html\"&gt;&lt;span class=\"chapter-number\"&gt;1&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Getting started with Bioconductor ecosystem&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/exercises/Day2_Developer-virtuous-circle.html\"&gt;&lt;span class=\"chapter-number\"&gt;2&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Kickstarting an R package&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/exercises/Day3_Examples-test-data.html\"&gt;&lt;span class=\"chapter-number\"&gt;3&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Enriching package functionalities&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/exercises/Day4_S4-classes.html\"&gt;&lt;span class=\"chapter-number\"&gt;4&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Using S4 classes in a package&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/exercises/Day5_package-integration.html\"&gt;&lt;span class=\"chapter-number\"&gt;5&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Improving package integration&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"footer-left\"&gt;Developing R/Bioconductor packages for Genomics |&lt;br /&gt;\nJ. Serizay&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"footer-right\"&gt;This book was built with &lt;a href=\"https://quarto.org/\"&gt;Quarto&lt;/a&gt;.&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-breadcrumbs-b37043dfa5cf1c205558e40d1a3efbd7\"&gt;Day 5&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-breadcrumbs-8f2aee82e3b6a98156fcd2006a9fbe97\"&gt;Lecture 10 - Other package types&lt;/span&gt;&lt;/p&gt;\n&lt;/div&gt;\n&lt;div id=\"quarto-meta-markdown\" class=\"hidden\"&gt;\n&lt;p&gt;&lt;span class=\"hidden\" data-render-id=\"quarto-metatitle\"&gt;Developing R/Bioconductor packages for Genomics - Lecture 10 - Other package types&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-twittercardtitle\"&gt;Developing R/Bioconductor packages for Genomics - Lecture 10 - Other package types&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-ogcardtitle\"&gt;Developing R/Bioconductor packages for Genomics - Lecture 10 - Other package types&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-metasitename\"&gt;Developing R/Bioconductor packages for Genomics&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-twittercarddesc\"&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-ogcardddesc\"&gt;&lt;/span&gt;&lt;/p&gt;\n&lt;/div&gt;\n\n&lt;/main&gt; &lt;!-- /main --&gt;\n&lt;script id = \"quarto-html-after-body\" type=\"application/javascript\"&gt;\nwindow.document.addEventListener(\"DOMContentLoaded\", function (event) {\n  const toggleBodyColorMode = (bsSheetEl) =&gt; {\n    const mode = bsSheetEl.getAttribute(\"data-mode\");\n    const bodyEl = window.document.querySelector(\"body\");\n    if (mode === \"dark\") {\n      bodyEl.classList.add(\"quarto-dark\");\n      bodyEl.classList.remove(\"quarto-light\");\n    } else {\n      bodyEl.classList.add(\"quarto-light\");\n      bodyEl.classList.remove(\"quarto-dark\");\n    }\n  }\n  const toggleBodyColorPrimary = () =&gt; {\n    const bsSheetEl = window.document.querySelector(\"link#quarto-bootstrap\");\n    if (bsSheetEl) {\n      toggleBodyColorMode(bsSheetEl);\n    }\n  }\n  toggleBodyColorPrimary();  \n  const icon = \"\";\n  const anchorJS = new window.AnchorJS();\n  anchorJS.options = {\n    placement: 'right',\n    icon: icon\n  };\n  anchorJS.add('.anchored');\n  const isCodeAnnotation = (el) =&gt; {\n    for (const clz of el.classList) {\n      if (clz.startsWith('code-annotation-')) {                     \n        return true;\n      }\n    }\n    return false;\n  }\n  const clipboard = new window.ClipboardJS('.code-copy-button', {\n    text: function(trigger) {\n      const codeEl = trigger.previousElementSibling.cloneNode(true);\n      for (const childEl of codeEl.children) {\n        if (isCodeAnnotation(childEl)) {\n          childEl.remove();\n        }\n      }\n      return codeEl.innerText;\n    }\n  });\n  clipboard.on('success', function(e) {\n    // button target\n    const button = e.trigger;\n    // don't keep focus\n    button.blur();\n    // flash \"checked\"\n    button.classList.add('code-copy-button-checked');\n    var currentTitle = button.getAttribute(\"title\");\n    button.setAttribute(\"title\", \"Copied!\");\n    let tooltip;\n    if (window.bootstrap) {\n      button.setAttribute(\"data-bs-toggle\", \"tooltip\");\n      button.setAttribute(\"data-bs-placement\", \"left\");\n      button.setAttribute(\"data-bs-title\", \"Copied!\");\n      tooltip = new bootstrap.Tooltip(button, \n        { trigger: \"manual\", \n          customClass: \"code-copy-button-tooltip\",\n          offset: [0, -8]});\n      tooltip.show();    \n    }\n    setTimeout(function() {\n      if (tooltip) {\n        tooltip.hide();\n        button.removeAttribute(\"data-bs-title\");\n        button.removeAttribute(\"data-bs-toggle\");\n        button.removeAttribute(\"data-bs-placement\");\n      }\n      button.setAttribute(\"title\", currentTitle);\n      button.classList.remove('code-copy-button-checked');\n    }, 1000);\n    // clear code selection\n    e.clearSelection();\n  });\n  function tippyHover(el, contentFn) {\n    const config = {\n      allowHTML: true,\n      content: contentFn,\n      maxWidth: 500,\n      delay: 100,\n      arrow: false,\n      appendTo: function(el) {\n          return el.parentElement;\n      },\n      interactive: true,\n      interactiveBorder: 10,\n      theme: 'quarto',\n      placement: 'bottom-start'\n    };\n    window.tippy(el, config); \n  }\n  const noterefs = window.document.querySelectorAll('a[role=\"doc-noteref\"]');\n  for (var i=0; i&lt;noterefs.length; i++) {\n    const ref = noterefs[i];\n    tippyHover(ref, function() {\n      // use id or data attribute instead here\n      let href = ref.getAttribute('data-footnote-href') || ref.getAttribute('href');\n      try { href = new URL(href).hash; } catch {}\n      const id = href.replace(/^#\\/?/, \"\");\n      const note = window.document.getElementById(id);\n      return note.innerHTML;\n    });\n  }\n      let selectedAnnoteEl;\n      const selectorForAnnotation = ( cell, annotation) =&gt; {\n        let cellAttr = 'data-code-cell=\"' + cell + '\"';\n        let lineAttr = 'data-code-annotation=\"' +  annotation + '\"';\n        const selector = 'span[' + cellAttr + '][' + lineAttr + ']';\n        return selector;\n      }\n      const selectCodeLines = (annoteEl) =&gt; {\n        const doc = window.document;\n        const targetCell = annoteEl.getAttribute(\"data-target-cell\");\n        const targetAnnotation = annoteEl.getAttribute(\"data-target-annotation\");\n        const annoteSpan = window.document.querySelector(selectorForAnnotation(targetCell, targetAnnotation));\n        const lines = annoteSpan.getAttribute(\"data-code-lines\").split(\",\");\n        const lineIds = lines.map((line) =&gt; {\n          return targetCell + \"-\" + line;\n        })\n        let top = null;\n        let height = null;\n        let parent = null;\n        if (lineIds.length &gt; 0) {\n            //compute the position of the single el (top and bottom and make a div)\n            const el = window.document.getElementById(lineIds[0]);\n            top = el.offsetTop;\n            height = el.offsetHeight;\n            parent = el.parentElement.parentElement;\n          if (lineIds.length &gt; 1) {\n            const lastEl = window.document.getElementById(lineIds[lineIds.length - 1]);\n            const bottom = lastEl.offsetTop + lastEl.offsetHeight;\n            height = bottom - top;\n          }\n          if (top !== null && height !== null && parent !== null) {\n            // cook up a div (if necessary) and position it \n            let div = window.document.getElementById(\"code-annotation-line-highlight\");\n            if (div === null) {\n              div = window.document.createElement(\"div\");\n              div.setAttribute(\"id\", \"code-annotation-line-highlight\");\n              div.style.position = 'absolute';\n              parent.appendChild(div);\n            }\n            div.style.top = top - 2 + \"px\";\n            div.style.height = height + 4 + \"px\";\n            let gutterDiv = window.document.getElementById(\"code-annotation-line-highlight-gutter\");\n            if (gutterDiv === null) {\n              gutterDiv = window.document.createElement(\"div\");\n              gutterDiv.setAttribute(\"id\", \"code-annotation-line-highlight-gutter\");\n              gutterDiv.style.position = 'absolute';\n              const codeCell = window.document.getElementById(targetCell);\n              const gutter = codeCell.querySelector('.code-annotation-gutter');\n              gutter.appendChild(gutterDiv);\n            }\n            gutterDiv.style.top = top - 2 + \"px\";\n            gutterDiv.style.height = height + 4 + \"px\";\n          }\n          selectedAnnoteEl = annoteEl;\n        }\n      };\n      const unselectCodeLines = () =&gt; {\n        const elementsIds = [\"code-annotation-line-highlight\", \"code-annotation-line-highlight-gutter\"];\n        elementsIds.forEach((elId) =&gt; {\n          const div = window.document.getElementById(elId);\n          if (div) {\n            div.remove();\n          }\n        });\n        selectedAnnoteEl = undefined;\n      };\n      // Attach click handler to the DT\n      const annoteDls = window.document.querySelectorAll('dt[data-target-cell]');\n      for (const annoteDlNode of annoteDls) {\n        annoteDlNode.addEventListener('click', (event) =&gt; {\n          const clickedEl = event.target;\n          if (clickedEl !== selectedAnnoteEl) {\n            unselectCodeLines();\n            const activeEl = window.document.querySelector('dt[data-target-cell].code-annotation-active');\n            if (activeEl) {\n              activeEl.classList.remove('code-annotation-active');\n            }\n            selectCodeLines(clickedEl);\n            clickedEl.classList.add('code-annotation-active');\n          } else {\n            // Unselect the line\n            unselectCodeLines();\n            clickedEl.classList.remove('code-annotation-active');\n          }\n        });\n      }\n  const findCites = (el) =&gt; {\n    const parentEl = el.parentElement;\n    if (parentEl) {\n      const cites = parentEl.dataset.cites;\n      if (cites) {\n        return {\n          el,\n          cites: cites.split(' ')\n        };\n      } else {\n        return findCites(el.parentElement)\n      }\n    } else {\n      return undefined;\n    }\n  };\n  var bibliorefs = window.document.querySelectorAll('a[role=\"doc-biblioref\"]');\n  for (var i=0; i&lt;bibliorefs.length; i++) {\n    const ref = bibliorefs[i];\n    const citeInfo = findCites(ref);\n    if (citeInfo) {\n      tippyHover(citeInfo.el, function() {\n        var popup = window.document.createElement('div');\n        citeInfo.cites.forEach(function(cite) {\n          var citeDiv = window.document.createElement('div');\n          citeDiv.classList.add('hanging-indent');\n          citeDiv.classList.add('csl-entry');\n          var biblioDiv = window.document.getElementById('ref-' + cite);\n          if (biblioDiv) {\n            citeDiv.innerHTML = biblioDiv.innerHTML;\n          }\n          popup.appendChild(citeDiv);\n        });\n        return popup.innerHTML;\n      });\n    }\n  }\n});\n&lt;/script&gt;\n&lt;nav class=\"page-navigation\"&gt;\n  &lt;div class=\"nav-page nav-page-previous\"&gt;\n      &lt;a  href=\"/content/day4/Lecture9_Bioconductor_submission.html\" class=\"pagination-link\"&gt;\n        &lt;i class=\"bi bi-arrow-left-short\"&gt;&lt;/i&gt; &lt;span class=\"nav-page-text\"&gt;Lecture 9 - Bioconductor package submission&lt;/span&gt;\n      &lt;/a&gt;          \n  &lt;/div&gt;\n  &lt;div class=\"nav-page nav-page-next\"&gt;\n      &lt;a  href=\"/content/day5/Lecture11_Package_dissemination.html\" class=\"pagination-link\"&gt;\n        &lt;span class=\"nav-page-text\"&gt;Lecture 11 - Package dissemination&lt;/span&gt; &lt;i class=\"bi bi-arrow-right-short\"&gt;&lt;/i&gt;\n      &lt;/a&gt;\n  &lt;/div&gt;\n&lt;/nav&gt;\n&lt;/div&gt; &lt;!-- /content --&gt;\n&lt;footer class=\"footer\"&gt;\n  &lt;div class=\"nav-footer\"&gt;\n    &lt;div class=\"nav-footer-left\"&gt;\n      &lt;div class='footer-contents'&gt;Developing R/Bioconductor packages for Genomics |  \nJ. Serizay\n&lt;/div&gt;  \n    &lt;/div&gt;   \n    &lt;div class=\"nav-footer-center\"&gt;\n      &nbsp;\n    &lt;/div&gt;\n    &lt;div class=\"nav-footer-right\"&gt;\n      &lt;div class='footer-contents'&gt;This book was built with &lt;a href=\"https://quarto.org/\"&gt;Quarto&lt;/a&gt;.\n&lt;/div&gt;  \n    &lt;/div&gt;\n  &lt;/div&gt;\n&lt;/footer&gt;\n\n&lt;/body&gt;\n\n&lt;/html&gt;"
  },
  {
    "objectID": "content/day5/Lecture11_Package_dissemination.html",
    "href": "content/day5/Lecture11_Package_dissemination.html",
    "title": "Lecture 11 - Package dissemination",
    "section": "",
    "text": "&lt;div id=\"quarto-navigation-envelope\" class=\"hidden\"&gt;\n&lt;p&gt;&lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar-title\"&gt;Developing R/Bioconductor packages for Genomics&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-navbar-title\"&gt;Developing R/Bioconductor packages for Genomics&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-next\"&gt;&lt;span class=\"chapter-number\"&gt;1&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Getting started with Bioconductor ecosystem&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-prev\"&gt;Lecture 10 - Other package types&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/index.html\"&gt;Welcome&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/program.html\"&gt;Program&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/prerequisites.html\"&gt;Prerequesites&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/extra.html\"&gt;Extra resources&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-1\"&gt;Day 1&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day1/Lecture0_course-overview.html\"&gt;Lecture 0 - Introduction to the workshop&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day1/Lecture1_Package_architecture.html\"&gt;Lecture 1 - R package architecture&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day1/Lecture2_Bioconductor_101.html\"&gt;Lecture 2 - Introduction to Bioconductor&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day1/Lecture3_Developer-toolkit.html\"&gt;Lecture 3 - R developer toolkit&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-2\"&gt;Day 2&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day2/Lecture4_Continuous_development-writing-documenting-testing.html\"&gt;Lecture 4 - Continuous development&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day2/Lecture5_Bioconductor_201.html\"&gt;Lecture 5 - Bioconductor 201&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-3\"&gt;Day 3&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day3/Lecture6_Git_versionning.html\"&gt;Lecture 6 - Git versioning&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day3/Lecture7_Improving_package-data_vignettes-....html\"&gt;Lecture 8 - Vignettes and data&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-4\"&gt;Day 4&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day4/Lecture8_S4_classes.html\"&gt;Lecture 7 - S4 classes in Bioconductor&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day4/Lecture9_Bioconductor_submission.html\"&gt;Lecture 9 - Bioconductor package submission&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-5\"&gt;Day 5&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day5/Lecture10_Other_package_types.html\"&gt;Lecture 10 - Other package types&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/day5/Lecture11_Package_dissemination.html\"&gt;Lecture 11 - Package dissemination&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:quarto-sidebar-section-6\"&gt;Exercises&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/exercises/Day1_Getting-started-with-Bioc.html\"&gt;&lt;span class=\"chapter-number\"&gt;1&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Getting started with Bioconductor ecosystem&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/exercises/Day2_Developer-virtuous-circle.html\"&gt;&lt;span class=\"chapter-number\"&gt;2&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Kickstarting an R package&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/exercises/Day3_Examples-test-data.html\"&gt;&lt;span class=\"chapter-number\"&gt;3&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Enriching package functionalities&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/exercises/Day4_S4-classes.html\"&gt;&lt;span class=\"chapter-number\"&gt;4&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Using S4 classes in a package&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar:/content/exercises/Day5_package-integration.html\"&gt;&lt;span class=\"chapter-number\"&gt;5&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Improving package integration&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"footer-left\"&gt;Developing R/Bioconductor packages for Genomics |&lt;br /&gt;\nJ. Serizay&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"footer-right\"&gt;This book was built with &lt;a href=\"https://quarto.org/\"&gt;Quarto&lt;/a&gt;.&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-breadcrumbs-b37043dfa5cf1c205558e40d1a3efbd7\"&gt;Day 5&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-breadcrumbs-3822f53b049abc5bb781a946609f88ae\"&gt;Lecture 11 - Package dissemination&lt;/span&gt;&lt;/p&gt;\n&lt;/div&gt;\n&lt;div id=\"quarto-meta-markdown\" class=\"hidden\"&gt;\n&lt;p&gt;&lt;span class=\"hidden\" data-render-id=\"quarto-metatitle\"&gt;Developing R/Bioconductor packages for Genomics - Lecture 11 - Package dissemination&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-twittercardtitle\"&gt;Developing R/Bioconductor packages for Genomics - Lecture 11 - Package dissemination&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-ogcardtitle\"&gt;Developing R/Bioconductor packages for Genomics - Lecture 11 - Package dissemination&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-metasitename\"&gt;Developing R/Bioconductor packages for Genomics&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-twittercarddesc\"&gt;&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-ogcardddesc\"&gt;&lt;/span&gt;&lt;/p&gt;\n&lt;/div&gt;\n\n&lt;/main&gt; &lt;!-- /main --&gt;\n&lt;script id = \"quarto-html-after-body\" type=\"application/javascript\"&gt;\nwindow.document.addEventListener(\"DOMContentLoaded\", function (event) {\n  const toggleBodyColorMode = (bsSheetEl) =&gt; {\n    const mode = bsSheetEl.getAttribute(\"data-mode\");\n    const bodyEl = window.document.querySelector(\"body\");\n    if (mode === \"dark\") {\n      bodyEl.classList.add(\"quarto-dark\");\n      bodyEl.classList.remove(\"quarto-light\");\n    } else {\n      bodyEl.classList.add(\"quarto-light\");\n      bodyEl.classList.remove(\"quarto-dark\");\n    }\n  }\n  const toggleBodyColorPrimary = () =&gt; {\n    const bsSheetEl = window.document.querySelector(\"link#quarto-bootstrap\");\n    if (bsSheetEl) {\n      toggleBodyColorMode(bsSheetEl);\n    }\n  }\n  toggleBodyColorPrimary();  \n  const icon = \"\";\n  const anchorJS = new window.AnchorJS();\n  anchorJS.options = {\n    placement: 'right',\n    icon: icon\n  };\n  anchorJS.add('.anchored');\n  const isCodeAnnotation = (el) =&gt; {\n    for (const clz of el.classList) {\n      if (clz.startsWith('code-annotation-')) {                     \n        return true;\n      }\n    }\n    return false;\n  }\n  const clipboard = new window.ClipboardJS('.code-copy-button', {\n    text: function(trigger) {\n      const codeEl = trigger.previousElementSibling.cloneNode(true);\n      for (const childEl of codeEl.children) {\n        if (isCodeAnnotation(childEl)) {\n          childEl.remove();\n        }\n      }\n      return codeEl.innerText;\n    }\n  });\n  clipboard.on('success', function(e) {\n    // button target\n    const button = e.trigger;\n    // don't keep focus\n    button.blur();\n    // flash \"checked\"\n    button.classList.add('code-copy-button-checked');\n    var currentTitle = button.getAttribute(\"title\");\n    button.setAttribute(\"title\", \"Copied!\");\n    let tooltip;\n    if (window.bootstrap) {\n      button.setAttribute(\"data-bs-toggle\", \"tooltip\");\n      button.setAttribute(\"data-bs-placement\", \"left\");\n      button.setAttribute(\"data-bs-title\", \"Copied!\");\n      tooltip = new bootstrap.Tooltip(button, \n        { trigger: \"manual\", \n          customClass: \"code-copy-button-tooltip\",\n          offset: [0, -8]});\n      tooltip.show();    \n    }\n    setTimeout(function() {\n      if (tooltip) {\n        tooltip.hide();\n        button.removeAttribute(\"data-bs-title\");\n        button.removeAttribute(\"data-bs-toggle\");\n        button.removeAttribute(\"data-bs-placement\");\n      }\n      button.setAttribute(\"title\", currentTitle);\n      button.classList.remove('code-copy-button-checked');\n    }, 1000);\n    // clear code selection\n    e.clearSelection();\n  });\n  function tippyHover(el, contentFn) {\n    const config = {\n      allowHTML: true,\n      content: contentFn,\n      maxWidth: 500,\n      delay: 100,\n      arrow: false,\n      appendTo: function(el) {\n          return el.parentElement;\n      },\n      interactive: true,\n      interactiveBorder: 10,\n      theme: 'quarto',\n      placement: 'bottom-start'\n    };\n    window.tippy(el, config); \n  }\n  const noterefs = window.document.querySelectorAll('a[role=\"doc-noteref\"]');\n  for (var i=0; i&lt;noterefs.length; i++) {\n    const ref = noterefs[i];\n    tippyHover(ref, function() {\n      // use id or data attribute instead here\n      let href = ref.getAttribute('data-footnote-href') || ref.getAttribute('href');\n      try { href = new URL(href).hash; } catch {}\n      const id = href.replace(/^#\\/?/, \"\");\n      const note = window.document.getElementById(id);\n      return note.innerHTML;\n    });\n  }\n      let selectedAnnoteEl;\n      const selectorForAnnotation = ( cell, annotation) =&gt; {\n        let cellAttr = 'data-code-cell=\"' + cell + '\"';\n        let lineAttr = 'data-code-annotation=\"' +  annotation + '\"';\n        const selector = 'span[' + cellAttr + '][' + lineAttr + ']';\n        return selector;\n      }\n      const selectCodeLines = (annoteEl) =&gt; {\n        const doc = window.document;\n        const targetCell = annoteEl.getAttribute(\"data-target-cell\");\n        const targetAnnotation = annoteEl.getAttribute(\"data-target-annotation\");\n        const annoteSpan = window.document.querySelector(selectorForAnnotation(targetCell, targetAnnotation));\n        const lines = annoteSpan.getAttribute(\"data-code-lines\").split(\",\");\n        const lineIds = lines.map((line) =&gt; {\n          return targetCell + \"-\" + line;\n        })\n        let top = null;\n        let height = null;\n        let parent = null;\n        if (lineIds.length &gt; 0) {\n            //compute the position of the single el (top and bottom and make a div)\n            const el = window.document.getElementById(lineIds[0]);\n            top = el.offsetTop;\n            height = el.offsetHeight;\n            parent = el.parentElement.parentElement;\n          if (lineIds.length &gt; 1) {\n            const lastEl = window.document.getElementById(lineIds[lineIds.length - 1]);\n            const bottom = lastEl.offsetTop + lastEl.offsetHeight;\n            height = bottom - top;\n          }\n          if (top !== null && height !== null && parent !== null) {\n            // cook up a div (if necessary) and position it \n            let div = window.document.getElementById(\"code-annotation-line-highlight\");\n            if (div === null) {\n              div = window.document.createElement(\"div\");\n              div.setAttribute(\"id\", \"code-annotation-line-highlight\");\n              div.style.position = 'absolute';\n              parent.appendChild(div);\n            }\n            div.style.top = top - 2 + \"px\";\n            div.style.height = height + 4 + \"px\";\n            let gutterDiv = window.document.getElementById(\"code-annotation-line-highlight-gutter\");\n            if (gutterDiv === null) {\n              gutterDiv = window.document.createElement(\"div\");\n              gutterDiv.setAttribute(\"id\", \"code-annotation-line-highlight-gutter\");\n              gutterDiv.style.position = 'absolute';\n              const codeCell = window.document.getElementById(targetCell);\n              const gutter = codeCell.querySelector('.code-annotation-gutter');\n              gutter.appendChild(gutterDiv);\n            }\n            gutterDiv.style.top = top - 2 + \"px\";\n            gutterDiv.style.height = height + 4 + \"px\";\n          }\n          selectedAnnoteEl = annoteEl;\n        }\n      };\n      const unselectCodeLines = () =&gt; {\n        const elementsIds = [\"code-annotation-line-highlight\", \"code-annotation-line-highlight-gutter\"];\n        elementsIds.forEach((elId) =&gt; {\n          const div = window.document.getElementById(elId);\n          if (div) {\n            div.remove();\n          }\n        });\n        selectedAnnoteEl = undefined;\n      };\n      // Attach click handler to the DT\n      const annoteDls = window.document.querySelectorAll('dt[data-target-cell]');\n      for (const annoteDlNode of annoteDls) {\n        annoteDlNode.addEventListener('click', (event) =&gt; {\n          const clickedEl = event.target;\n          if (clickedEl !== selectedAnnoteEl) {\n            unselectCodeLines();\n            const activeEl = window.document.querySelector('dt[data-target-cell].code-annotation-active');\n            if (activeEl) {\n              activeEl.classList.remove('code-annotation-active');\n            }\n            selectCodeLines(clickedEl);\n            clickedEl.classList.add('code-annotation-active');\n          } else {\n            // Unselect the line\n            unselectCodeLines();\n            clickedEl.classList.remove('code-annotation-active');\n          }\n        });\n      }\n  const findCites = (el) =&gt; {\n    const parentEl = el.parentElement;\n    if (parentEl) {\n      const cites = parentEl.dataset.cites;\n      if (cites) {\n        return {\n          el,\n          cites: cites.split(' ')\n        };\n      } else {\n        return findCites(el.parentElement)\n      }\n    } else {\n      return undefined;\n    }\n  };\n  var bibliorefs = window.document.querySelectorAll('a[role=\"doc-biblioref\"]');\n  for (var i=0; i&lt;bibliorefs.length; i++) {\n    const ref = bibliorefs[i];\n    const citeInfo = findCites(ref);\n    if (citeInfo) {\n      tippyHover(citeInfo.el, function() {\n        var popup = window.document.createElement('div');\n        citeInfo.cites.forEach(function(cite) {\n          var citeDiv = window.document.createElement('div');\n          citeDiv.classList.add('hanging-indent');\n          citeDiv.classList.add('csl-entry');\n          var biblioDiv = window.document.getElementById('ref-' + cite);\n          if (biblioDiv) {\n            citeDiv.innerHTML = biblioDiv.innerHTML;\n          }\n          popup.appendChild(citeDiv);\n        });\n        return popup.innerHTML;\n      });\n    }\n  }\n});\n&lt;/script&gt;\n&lt;nav class=\"page-navigation\"&gt;\n  &lt;div class=\"nav-page nav-page-previous\"&gt;\n      &lt;a  href=\"/content/day5/Lecture10_Other_package_types.html\" class=\"pagination-link\"&gt;\n        &lt;i class=\"bi bi-arrow-left-short\"&gt;&lt;/i&gt; &lt;span class=\"nav-page-text\"&gt;Lecture 10 - Other package types&lt;/span&gt;\n      &lt;/a&gt;          \n  &lt;/div&gt;\n  &lt;div class=\"nav-page nav-page-next\"&gt;\n      &lt;a  href=\"/content/exercises/Day1_Getting-started-with-Bioc.html\" class=\"pagination-link\"&gt;\n        &lt;span class=\"nav-page-text\"&gt;&lt;span class='chapter-number'&gt;1&lt;/span&gt;  &lt;span class='chapter-title'&gt;Getting started with Bioconductor ecosystem&lt;/span&gt;&lt;/span&gt; &lt;i class=\"bi bi-arrow-right-short\"&gt;&lt;/i&gt;\n      &lt;/a&gt;\n  &lt;/div&gt;\n&lt;/nav&gt;\n&lt;/div&gt; &lt;!-- /content --&gt;\n&lt;footer class=\"footer\"&gt;\n  &lt;div class=\"nav-footer\"&gt;\n    &lt;div class=\"nav-footer-left\"&gt;\n      &lt;div class='footer-contents'&gt;Developing R/Bioconductor packages for Genomics |  \nJ. Serizay\n&lt;/div&gt;  \n    &lt;/div&gt;   \n    &lt;div class=\"nav-footer-center\"&gt;\n      &nbsp;\n    &lt;/div&gt;\n    &lt;div class=\"nav-footer-right\"&gt;\n      &lt;div class='footer-contents'&gt;This book was built with &lt;a href=\"https://quarto.org/\"&gt;Quarto&lt;/a&gt;.\n&lt;/div&gt;  \n    &lt;/div&gt;\n  &lt;/div&gt;\n&lt;/footer&gt;\n\n&lt;/body&gt;\n\n&lt;/html&gt;"
  },
  {
    "objectID": "content/exercises/Day1_Getting-started-with-Bioc.html#set-up-your-working-environment",
    "href": "content/exercises/Day1_Getting-started-with-Bioc.html#set-up-your-working-environment",
    "title": "1  Getting started with Bioconductor ecosystem",
    "section": "1.1 Set up your working environment",
    "text": "1.1 Set up your working environment\nLet’s create a project for this course!\nIn RStudio: File &gt; New Project..., create a project entitled “Bioc-workshop”.\nOpen the newly created project.\nDownload files required for the workshop from the following Google Drive Shared folder:\nhttps://drive.google.com/drive/folders/1JHMSMYg8MbA9m53mxjHtcBa4_qycgaqy?usp=sharing\nUnzip the archive in the same directory you have created your project in."
  },
  {
    "objectID": "content/exercises/Day1_Getting-started-with-Bioc.html#importing-ce11-genome-sequence-in-r",
    "href": "content/exercises/Day1_Getting-started-with-Bioc.html#importing-ce11-genome-sequence-in-r",
    "title": "1  Getting started with Bioconductor ecosystem",
    "section": "1.2 Importing ce11 genome sequence in R",
    "text": "1.2 Importing ce11 genome sequence in R\nThe ce11 genome sequence is stored in a .fa file in Share/Day1/.\n\n\n\n\n\n\nQuestion\n\n\n\nFind the appropriate Bioconductor’s function to import fasta files in R and use it to import ce11 genome sequence.\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\nlibrary(Biostrings)\ngseq &lt;- readDNAStringSet(here::here('Share/Day1/ce11.fa'))\n\n\n\n\n\n\n\n\n\n\n\n\nQuestion\n\n\n\nWhat are the chromosome names used in the fasta file?\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\ngseq\nnames(gseq)\n\n\n\n\n\n\n\n\n\n\n\n\nQuestion\n\n\n\nWhat is the difference between the length and the width of a DNAStringSet object?\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\nwidth(gseq)\nlength(gseq)"
  },
  {
    "objectID": "content/exercises/Day1_Getting-started-with-Bioc.html#importing-ce11-gene-annotations-in-r",
    "href": "content/exercises/Day1_Getting-started-with-Bioc.html#importing-ce11-gene-annotations-in-r",
    "title": "1  Getting started with Bioconductor ecosystem",
    "section": "1.3 Importing ce11 gene annotations in R",
    "text": "1.3 Importing ce11 gene annotations in R\nThe ce11 gene annotations are stored in a gtf file in Share/Day1/.\n\n\n\n\n\n\nQuestion\n\n\n\nFind the appropriate Bioconductor’s function to import gtf files in R and use it to import ce11 gene annotations.\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\nlibrary(rtracklayer)\ngenes &lt;- import(here::here('Share/Day1/ce11_annotations.gtf'))\n\n\n\n\n\n\n\n\n\n\n\n\nQuestion\n\n\n\nHow many genes are they? What’s the median gene length? Which tissues are genes expressed in?\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\nlength(genes)\nmedian(width(genes))\ntable(genes$tissue)\n\n\n\n\n\n\n\n\n\n\n\n\nQuestion\n\n\n\nWhat are the chromosome names used in this gene annotations file? How many genes map to each chromosome?\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\nseqlevels(genes)\ntable(seqnames(genes))\n\n\n\n\n\n\n\n\n\n\n\n\nQuestion\n\n\n\nWhy are the chromosome names (seqlevels) ordered this way? Can you reorder them?\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\nseqlevels(genes) &lt;- seqlevels(genes)[c(5, 4, 6, 3, 1, 2, 7)]"
  },
  {
    "objectID": "content/exercises/Day1_Getting-started-with-Bioc.html#wrangling-gene-annotations",
    "href": "content/exercises/Day1_Getting-started-with-Bioc.html#wrangling-gene-annotations",
    "title": "1  Getting started with Bioconductor ecosystem",
    "section": "1.4 Wrangling gene annotations",
    "text": "1.4 Wrangling gene annotations\n\n\n\n\n\n\nQuestion\n\n\n\nIs mitochondrial chromosome present in the genome sequence?\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\nseqlevels(gseq)\n\n\n\n\n\n\n\n\n\n\n\n\nQuestion\n\n\n\nTry to prune genes to remove all those mapping over mitochondrial chromosome.\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\ngenes[seqnames(genes) != 'MtDNA']\nseqlevels(genes, pruning.mode = 'coarse') &lt;- seqlevels(genes)[1:6]\n\n\n\n\n\n\n\n\n\n\n\n\nQuestion\n\n\n\nCompare the chromosome naming nomenclature for genes and chromosome sequences. Are they the same? Can you make them match?\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\nseqlevelsStyle(gseq)\nseqlevelsStyle(genes)\nseqlevelsStyle(genes) &lt;- \"UCSC\""
  },
  {
    "objectID": "content/exercises/Day1_Getting-started-with-Bioc.html#extract-tissue-specific-tsss",
    "href": "content/exercises/Day1_Getting-started-with-Bioc.html#extract-tissue-specific-tsss",
    "title": "1  Getting started with Bioconductor ecosystem",
    "section": "1.5 Extract tissue-specific TSSs",
    "text": "1.5 Extract tissue-specific TSSs\nNow that we have two concordant objects, we would like to focus on sets of tissue-specific TSSs.\n\n\n\n\n\n\nQuestion\n\n\n\nRe-focus the genes to center them at their TSSs. Choose a window size that you find appropriate (hint: we’ll late focus on TATA box, so the window has to at least encompass it!)\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\nWINDOW_SIZE &lt;- 300\nTSSs &lt;- resize(genes, fix = 'start', width = 1) |&gt; resize(fix = 'center', width = WINDOW_SIZE)\n\n\n\n\n\n\nTo iterate over a set of values (e.g. a set of tissues…), one should favor lapply function rather than for loops. lapply outputs a list of elements, one for each element in the vector used in the input. Check ?lapply for more information if you are not familiar with it.\n\n\n\n\n\n\nQuestion\n\n\n\nMake a list of 6 elements, containing forward TSSs specific of each of the 5 main tissues, and the ubiquitous TSSs.\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\ntissues &lt;- c(\"Germline\", \"Neurons\", \"Muscle\", \"Hypod.\", \"Intest.\", \"Ubiq.\")\nTSS_list &lt;- lapply(tissues, function(tissue) {\n    TSSs[TSSs$tissue == tissue & strand(TSSs) == '+']\n})\nnames(TSS_list) &lt;- tissues\nlengths(TSS_list)"
  },
  {
    "objectID": "content/exercises/Day1_Getting-started-with-Bioc.html#find-tata-boxes-near-intestine-specific-tsss",
    "href": "content/exercises/Day1_Getting-started-with-Bioc.html#find-tata-boxes-near-intestine-specific-tsss",
    "title": "1  Getting started with Bioconductor ecosystem",
    "section": "1.6 Find TATA boxes near intestine-specific TSSs",
    "text": "1.6 Find TATA boxes near intestine-specific TSSs\n\n\n\n\n\n\nQuestion\n\n\n\nStart by subseting full genome sequence to only the sequences at intestinal TSSs. Check ?DNAStringSet to see how to subset a DNAStringSet.\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\nintest_TSSs &lt;- TSS_list[['Intest.']]\nintest_TSS_seqs &lt;- gseq[intest_TSSs]\nintest_TSS_seqs\ntable(width(intest_TSS_seqs))\n\n\n\n\n\n\n\n\n\n\n\n\nQuestion\n\n\n\nRead ?matchPattern for information on how to find a given sequence in a DNAStringSet. What is the difference between matchPattern() and vmatchPattern()?\n\n\n\n\n\n\n\n\nQuestion\n\n\n\nIs there a TATA box (“TATAAA”) in the first intestine TSS sequence?\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\npattern &lt;- 'TATAAA'\nseq &lt;- intest_TSS_seqs[[1]]\nmatchPattern(pattern, seq)\n\n\n\n\n\n\n\n\n\n\n\n\nQuestion\n\n\n\nMap TATA boxes across all intestine TSS sequences.\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\npattern &lt;- 'TATAAA'\nTATA_boxes &lt;- vmatchPattern(pattern, intest_TSS_seqs)\nTATA_boxes\n\n\n\n\n\n\n\n\n\n\n\n\nQuestion\n\n\n\nHow to parse MIndex objects? Check ?MIndex if in doubt…\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\npositions &lt;- unlist(startIndex(TATA_boxes))\nhead(positions)\n\n\n\n\n\n\n\n\n\n\n\n\nQuestion\n\n\n\nPlot the distance between TATA box and intestine-specific TSSs.\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\nlibrary(ggplot2)\ndf &lt;- data.frame(pos = positions - WINDOW_SIZE/2)\nggplot(df, aes(x = pos)) + \n    geom_histogram(binwidth = 10) + \n    labs(x = \"Distance to TSS\", y = \"# of motifs\")"
  },
  {
    "objectID": "content/exercises/Day1_Getting-started-with-Bioc.html#function-wrapping",
    "href": "content/exercises/Day1_Getting-started-with-Bioc.html#function-wrapping",
    "title": "1  Getting started with Bioconductor ecosystem",
    "section": "1.7 Function wrapping",
    "text": "1.7 Function wrapping\nWe now know how to 1) parse GRanges, 2) map a chosen motif (“TATAAA”) over a set of sequences and 3) plot the distance between this motif and the center of sequences.\n\n\n\n\n\n\nQuestion\n\n\n\nCreate a function which takes a set of sequences and a chosen motif as input, and returns a plot of the distance between\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\nplotMotifDistance &lt;- function(seqs, motif) {\n    motif_occurences &lt;- vmatchPattern(motif, seqs)\n    positions &lt;- unlist(startIndex(motif_occurences))\n    df &lt;- data.frame(pos = positions - WINDOW_SIZE/2)\n    ggplot(df, aes(x = pos)) + \n        geom_histogram(binwidth = 10) + \n        labs(\n            x = \"Distance to TSS\", \n            y = glue::glue(\"# of {motif} motifs\"), \n            caption = glue::glue(\"{length(positions)} motifs found amongst {length(seqs)} sequences\")\n        )\n}\nplotMotifDistance(intest_TSS_seqs, \"TATAAA\")\n\n\n\n\n\n\n\n\n\n\n\n\nQuestion\n\n\n\nAdd an argument to precise number of possible mismatches when looking for the motif. Also adapt the vmatchPattern() function!\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\nplotMotifDistance &lt;- function(seqs, motif, n_mismatch = 1) {\n    motif_occurences &lt;- vmatchPattern(motif, seqs, max.mismatch = n_mismatch)\n    positions &lt;- unlist(startIndex(motif_occurences))\n    df &lt;- data.frame(pos = positions - WINDOW_SIZE/2)\n    ggplot(df, aes(x = pos)) + \n        geom_histogram(binwidth = 10) + \n        labs(\n            x = \"Distance to TSS\", \n            y = glue::glue(\"# of {motif} motifs\"), \n            caption = glue::glue(\"{length(positions)} motifs found amongst {length(seqs)} sequences\")\n        )\n}\nplotMotifDistance(intest_TSS_seqs, \"TATAAA\", n_mismatch = 0)\n\n\n\n\n\n\n\n\n\n\n\n\nQuestion\n\n\n\nThe real TATA box consensus sequence is closer to “TATAWAA”. Can you further adapt vmatchPattern() function so it can accept all IUPAC code (e.g. W = A/T).\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\nplotMotifDistance &lt;- function(seqs, motif, n_mismatch = 1) {\n    motif_occurences &lt;- vmatchPattern(motif, seqs, max.mismatch = n_mismatch, fixed = FALSE)\n    positions &lt;- unlist(startIndex(motif_occurences))\n    df &lt;- data.frame(pos = positions - WINDOW_SIZE/2)\n    ggplot(df, aes(x = pos)) + \n        geom_histogram(binwidth = 5) + \n        labs(\n            x = \"Distance to TSS\", \n            y = glue::glue(\"# of {motif} motifs\"), \n            caption = glue::glue(\"{length(positions)} motifs found amongst {length(seqs)} sequences\")\n        )\n}\nplotMotifDistance(intest_TSS_seqs, \"TATAWAA\", n_mismatch = 0)\n\n\n\n\n\n\n\n\n\n\n\n\nQuestion\n\n\n\nRun this function to find TATA boxes in sequences from each set of TSSs.\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\nlapply(names(TSS_list), function(tissue) {\n    TSSs &lt;- TSS_list[[tissue]]\n    plotMotifDistance(\n        gseq[TSSs], \n        \"TATAWAA\", \n        n_mismatch = 0\n    ) + ggtitle(glue::glue(\"{tissue} TSSs\"))\n})\n\n\n\n\n\n\n\n\n\n\n\n\nQuestion\n\n\n\nRun this function to find PolII Initiator (Inr) motif (“YYANWYY”) in sequences from each set of TSSs. Comment.\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\nlapply(names(TSS_list), function(tissue) {\n    TSSs &lt;- TSS_list[[tissue]]\n    plotMotifDistance(\n        gseq[TSSs], \n        \"YYANWYY\", \n        n_mismatch = 1\n    ) + ggtitle(glue::glue(\"{tissue} TSSs\"))\n})\n\n\n\n\n\n\n\n\n\n\n\n\nQuestion\n\n\n\nHow to deal with minus-oriented GRanges? Propose a solution."
  },
  {
    "objectID": "content/exercises/Day2_Developer-virtuous-circle.html#package-functions",
    "href": "content/exercises/Day2_Developer-virtuous-circle.html#package-functions",
    "title": "2  Kickstarting an R package",
    "section": "2.1 Proposed package functionalities",
    "text": "2.1 Proposed package functionalities\nIn this section, we are going to create a package which aims at:\n\nImporting .bigwig coverage track files as well as .bed files of genomic coordinates\nFiltering imported GRanges to make sure they all are contained within the coverage tracks\nCalculating the average (+/- quantiles) of coverage of the .bigwig file over the GRanges of interest\nPlot the aggregated .bigwig coverage over the GRanges of interest\n\nEventually, the functions shipped in this package should be able to turn a pair of .bigwig/.bed files into this type of plot:\n…"
  },
  {
    "objectID": "content/exercises/Day2_Developer-virtuous-circle.html#starting-a-new-package",
    "href": "content/exercises/Day2_Developer-virtuous-circle.html#starting-a-new-package",
    "title": "2  Kickstarting an R package",
    "section": "2.2 Starting a new package",
    "text": "2.2 Starting a new package\nTo start developing a new package, one may want to make sure all useful developer resources are already set-up.\n\n\n\n\n\n\nQuestion\n\n\n\nMake sure to install the developer toolkit packages.\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\ninstall.packages(\"remotes\")\nremotes::install_cran(\n    c(\n        \"available\",\n        \"devtools\",\n        \"rcmdcheck\", \n        \"knitr\",\n        \"pkgdown\",\n        \"RefManageR\",\n        \"rmarkdown\",\n        \"rstudioapi\",\n        \"sessioninfo\",\n        \"styler\",\n        \"usethis\",\n        \"gert\"\n    )\n)\nremotes::install_cran(\"BiocManager\")\nBiocManager::install(c(\"BiocStyle\", \"BiocCheck\", \"biocthis\"))\n\n\n\n\n\n\nNow the time has come to create your very first package! To keep a coherent cohorte, we’ll create a package named &lt;YOURNAME&gt;TestPackage. But first, you need to make sure that this package name is available.\n\n\n\n\n\n\nQuestion\n\n\n\nVerify that your package name is available, with the available package.\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\navailable::available(\"JacquesTestPackage\")\n\n\n\n\n\n\nIf this name is available, let’s create your package.\n\n\n\n\n\n\nQuestion\n\n\n\nWhich function from devtools can be used to create a package skeleton? Use it to create your package.\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\nlibrary(devtools)\nsetwd(\"~\")\ncreate_package(\"JacquesTestPackage\")\n\n\n\n\n\n\nWhen creating your package, devtools+RStudio combo automatically opens a new RStudio window, with the package’s project automatically activated. Navigate to your package RStudio project window and re-open this instruction sheet.\n\n\n\n\n\n\nQuestion\n\n\n\nMake sure you’re in the right project using the appropriate function from rstudioapi package.\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\nusethis::proj_activate(\"~/JacquesTestPackage/\")\nrstudioapi::getActiveProject()\n\n\n\n\n\n\n\n\n\n\n\n\nQuestion\n\n\n\nExplore the newly created folder architecture. Do you recognize all the files and directories?\n\n\nThe DESCRIPTION file automatically created does not exactly match Bioconductor requirements. You should replace it by a better-fitted DESCRIPTION file.\n\n\n\n\n\n\nQuestion\n\n\n\nFind the appropriate function from biocthis to replace the current DESCRIPTION file by one fitting BIOCONDUCTOR’s requirements.\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\nbiocthis::use_bioc_description()\n\n\n\n\n\n\n\n\n\n\n\n\nQuestion\n\n\n\nManually edit the important fields from your new DESCRIPTION file: Title & Author. The remaining fields will be filled out later on.\n\n\n\n\n\n\n\n\nQuestion\n\n\n\nNow add a LICENSE file to specify under which license you wish to publish your package.\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\nusethis::use_mit_license()\n\n\n\n\n\n\nA nice touch is to systematically provide a README file. This provides a good overview of your package when browsed e.g. in GitHub, and for non-R specialists, who don’t necessarily know about DESCRIPTION and vignettes. And since you are developing an R package, let’s stick with the Rmd format for your README.\n\n\n\n\n\n\nQuestion\n\n\n\nWhat are the benefits of having a README.Rmd file?\nWhich function from biocthis can create a .Rmd README file?\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\nbiocthis::use_bioc_readme_rmd()\n\n\n\n\n\n\nThat being said, package submission requires that a REAMDE.md file only is present in the repository. A way to provide this is to 1) devtools::build_readme() to parse README.Rmd into README.md (with R chunks processed!), and 2) add README.Rmd to .gitignore.\n\n\n\n\n\n\nQuestion\n\n\n\nParse your README.Rmd into README.md and check the differences.\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\ndevtools::load_all('.')\ndevtools::build_readme()\nrstudioapi::documentOpen(\"README.Rmd\")\nrstudioapi::documentOpen(\"README.md\")\n\n\n\n\n\n\nA bunch of extra useful commands from bioc/usethis can be performed at this stage, e.g. to add a NEWS file, a Code of Conduct, a citation file, etc… Beware, each command creates/modify one/several files. Pay attention to the comments printed in the R console!\n\n\n\n\n\n\nQuestion\n\n\n\nRun each of the following commands one by one and make sure to fulfill each required action highlighted in the R console.\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\nbiocthis::use_bioc_news_md()  ## To add a NEWS.md file\nbiocthis::use_bioc_coc()  ## To add a .github/CODE_OF_CONDUCT.md file\nbiocthis::use_bioc_support()  ## To add a .github/SUPPORT.md file\nbiocthis::use_bioc_issue_template()  ## To add a .github/ISSUE_TEMPLATE/issue_template.md file\nbiocthis::use_bioc_citation()  ## To add a inst/CITATION file\nusethis::use_lifecycle_badge(\"Experimental\")  ## To add a \"Experimental\" badge to your README.Rmd\ndevtools::build_readme()  ## To rebuild README.md"
  },
  {
    "objectID": "content/exercises/Day2_Developer-virtuous-circle.html#write-functions-to-populate-your-package",
    "href": "content/exercises/Day2_Developer-virtuous-circle.html#write-functions-to-populate-your-package",
    "title": "2  Kickstarting an R package",
    "section": "2.3 Write functions to populate your package",
    "text": "2.3 Write functions to populate your package\nTo write your first package function, you can either create an R/&lt;name&gt;.R file manually, or run usethis::use_r(name).\nNow is time to write! Refer to the functionalities (descriped in Section 0) that we are aiming to provide in this package, and start writing 4 functions which, together, can fulfill these functionalities. Briefly, we suggest to design functions to:\n\nimport a coverage track and a set of genomic features (scaled to a fixed width) together in a list;\nfilter the imported features to only retain those fully overlapping with covered genome segments (from the coverage track);\ncompute the mean coverage and its confidence interval, for each position within the features’ width;\nplot the results with ggplot2.\n\n\n\n\n\n\n\nTip\n\n\n\nThese functions should work in a chain:\n\nimport(bw_path, features_path, width) |&gt;\n    filter() |&gt; \n    compute() |&gt; \n    plot()\n\n\n\n\n\n\n\n\n\nTip\n\n\n\nThe content of the proposed function files is shown in Share/Day2/functions/. These files provides an example of implementation to fulfill our package’s requirements."
  },
  {
    "objectID": "content/exercises/Day2_Developer-virtuous-circle.html#add-function-documentation",
    "href": "content/exercises/Day2_Developer-virtuous-circle.html#add-function-documentation",
    "title": "2  Kickstarting an R package",
    "section": "2.4 Add function documentation",
    "text": "2.4 Add function documentation\n\n\n\n\n\n\nQuestion\n\n\n\nWrite oxygen tags (title, description, @param, @return, …) for each function.\n\n\nOnce you have documented each function, you can regenerate the documentation with document().\n\ndocument()"
  },
  {
    "objectID": "content/exercises/Day3_Examples-test-data.html#add-supporting-data-to-your-package",
    "href": "content/exercises/Day3_Examples-test-data.html#add-supporting-data-to-your-package",
    "title": "3  Enriching package functionalities",
    "section": "3.1 Add supporting data to your package",
    "text": "3.1 Add supporting data to your package\nYou can use toy dataset files provided in Share/Day3/.\n\n\n\n\n\n\nQuestion\n\n\n\nAdd them to the inst/extdata/ folder in your package.\n\n\nYou will also need to document how these raw data files have been generated (or obtained). This can be done in a less “formal” manner, in a .R file in inst/scripts.\n\n\n\n\n\n\nTip\n\n\n\nAn example of such script is in Share/Day3/make-extdata.R."
  },
  {
    "objectID": "content/exercises/Day3_Examples-test-data.html#add-examples-to-your-function-files",
    "href": "content/exercises/Day3_Examples-test-data.html#add-examples-to-your-function-files",
    "title": "3  Enriching package functionalities",
    "section": "3.2 Add examples to your function files",
    "text": "3.2 Add examples to your function files\nExamples can be used to illustrate how your function works. They are integrated in the manual pages compiled with document() and are often the first thing a new end-user is going to read.\n\n\n\n\n\n\nQuestion\n\n\n\nAdd runnable examples to each function.\n\n\nOnce you have added examples to your functions, you can check whether these examples work with run_examples().\n\nrun_examples()\n\n\n\n\n\n\n\nTip\n\n\n\nThe content of the proposed function files is shown in Share/Day3/functions_with-examples/. These files provides an example of implementation to fulfill our package’s requirements, with examples added."
  },
  {
    "objectID": "content/exercises/Day3_Examples-test-data.html#add-unit-tests-to-your-package",
    "href": "content/exercises/Day3_Examples-test-data.html#add-unit-tests-to-your-package",
    "title": "3  Enriching package functionalities",
    "section": "3.3 Add unit tests to your package",
    "text": "3.3 Add unit tests to your package\nUnit tests are the best way to make sure that your package works as intended. They consist of R code, executed and compared to an expected result.\nTo start using unit tests, you need to declare it. We will use the testthat framework to implement unit tests.\n\nusethis::use_testthat()\n\n\n\n\n\n\n\nQuestion\n\n\n\nOnce testthat is initiated, create a new test file and add individual tests.\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\nusethis::use_test(\"\")\n\n\n\n\n\n\n\n\n\n\n\n\nTip\n\n\n\nAn example of a working test file is availabe in Share/Day3//"
  },
  {
    "objectID": "content/exercises/Day3_Examples-test-data.html#check-your-package",
    "href": "content/exercises/Day3_Examples-test-data.html#check-your-package",
    "title": "3  Enriching package functionalities",
    "section": "3.4 Check your package",
    "text": "3.4 Check your package\nSeveral check functions are available. They each check your package in a specific way.\n\ndevtools::check() verifies the basic structure of the package, the documentation, the examples and unit tests;\nrcmdcheck::rcmdcheck() does somewhat the same job but builds the package first;\nBiocCheck::BiocCheck() checks the compliance of the package with Bioconductor requirements.\n\n\ncheck()\nrcmdcheck::rcmdcheck()\nBiocCheck()\n\n\n\n\n\n\n\nQuestion\n\n\n\nAttempt to fix the ERROR and WARNING returned by check() and BiocCheck()."
  },
  {
    "objectID": "content/exercises/Day4_S4-classes.html#framework",
    "href": "content/exercises/Day4_S4-classes.html#framework",
    "title": "4  Using S4 classes in a package",
    "section": "4.1 Framework",
    "text": "4.1 Framework\nFunctions developed in Day 2 work well for a specific couple of .bigwig/.bed files. However, the more used to Bioconductor you get, the more you will realize that you might already have your genomic features of interest (TSSs, genebodies, regulatory elements, binding motifs, …) already imported in R.\nTo make this package more “usable” by a broader Bioconductor audience, we will move to a more “Bioconductor-friendly” framework. We will create a single S4 class named AggregatedCoverage. The AggregatedCoverage constructor function will take 3 inputs:\n\nThe path to a single bigwig file;\nThe path to a single feature file (e.g. a bed or a narrowPeak file);\nA width to use to recover the coverage around the center of each feature.\n\nThe coverage (from the bigwig file) over each genomic feature (from the feature file) will be extracted, then the mean signal +/- confidence interval (CI) scores will be computed, similarly to what has been done in Day 2.\nThe AggregatedCoverage class will be a direct adaptation of the SummarizedExperiment class. It will contain a colData (refering to the “samples”, i.e. the bigiwg file imported as RleList), a rowData (describing the genomic distance to the center of the each genomic range of interest) and exactly 3 assays: mean, lowCI and upCI."
  },
  {
    "objectID": "content/exercises/Day4_S4-classes.html#preparing-coldata",
    "href": "content/exercises/Day4_S4-classes.html#preparing-coldata",
    "title": "4  Using S4 classes in a package",
    "section": "4.2 Preparing colData",
    "text": "4.2 Preparing colData\nThe colData slot of a SummarizedExperiment-derived object should be a data.frame. Each row represents an individual sample and each column describes a variable associated with each sample.\n\n\n\n\n\n\nQuestion\n\n\n\nCreate a colData object for a single sample, e.g. the Scc1-vs-input bigwig file.\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\nbw_file &lt;- system.file(\"extdata\", \"Scc1-vs-input.bw\", package = \"JacquesTestPackage\")\ncolData &lt;- data.frame(\n    file = bw_file,\n    sample = 'Scc1-vs-input', \n    type = 'ChIPseq', \n    target = 'Scc1' \n)"
  },
  {
    "objectID": "content/exercises/Day4_S4-classes.html#preparing-rowdata",
    "href": "content/exercises/Day4_S4-classes.html#preparing-rowdata",
    "title": "4  Using S4 classes in a package",
    "section": "4.3 Preparing rowData",
    "text": "4.3 Preparing rowData\nThe rowData slot of a SummarizedExperiment-derived object should also be a data.frame. In our case, each row will represent the genomic distance to the center of the set of genomic ranges of interest.\n\n\n\n\n\n\nQuestion\n\n\n\nCreate a data.frame which contains a single distance column, which will be a numerical vector centered at 0 and whose length is half of a provided width variable (e.g. for width == 2000, the distance column would be a sequence from -1000 to 999 (length of 2000))\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\nwidth &lt;- 2000\nrowData &lt;- data.frame(\n    distance = seq(-width/2, width/2-1, by = 1)\n)"
  },
  {
    "objectID": "content/exercises/Day4_S4-classes.html#preparing-assays",
    "href": "content/exercises/Day4_S4-classes.html#preparing-assays",
    "title": "4  Using S4 classes in a package",
    "section": "4.4 Preparing assays",
    "text": "4.4 Preparing assays\nThe assays stored in a SummarizedExperiment-derived object should be a list of numerical matrices, with as many rows as rows in the matching rowData and as many columns as rows in the matching colData.\nIn our case, each matrix will represent a different metric:\n\nThe mean signal of a sample (from colData) at the corresponding distance from a genomic range of interest (from rowData)\nThe upper confidence intervale value of a signal of a sample (from colData) at the corresponding distance from a genomic range of interest (from rowData)\nThe lower confidence intervale value of a signal of a sample (from colData) at the corresponding distance from a genomic range of interest (from rowData)\n\n\n\n\n\n\n\nQuestion\n\n\n\nPrepare a list of three matrices as indicated hereabove. Use the functions defined in the previous exercises and the datasets provided as extdata.\n\nEach matrix should have 1 column, since there is only 1 example bigwig.\nEach matrix should have as many rows as the chosen width variable.\n\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\nbed_file &lt;- system.file(\"extdata\", \"Scc1-peaks.narrowPeak\", package = \"JacquesTestPackage\")\nl &lt;- importFiles(bw_file, bed_file, width = width) |&gt; \n    filterGRanges()\ndf &lt;- computeCoverage(l)\n\nassays &lt;- list(\n    'mean' = matrix(df$mean, ncol = 1), \n    'upCI' = matrix(df$ci_high, ncol = 1), \n    'lowCI' = matrix(df$ci_low, ncol = 1)\n)"
  },
  {
    "objectID": "content/exercises/Day4_S4-classes.html#build-an-aggregatedcoverage-object",
    "href": "content/exercises/Day4_S4-classes.html#build-an-aggregatedcoverage-object",
    "title": "4  Using S4 classes in a package",
    "section": "4.5 Build an AggregatedCoverage object",
    "text": "4.5 Build an AggregatedCoverage object\nEverything is now ready to manually create an AggregatedCoverage object.\n\n\n\n\n\n\nQuestion\n\n\n\nDefine a new AggregatedCoverage class, containing a SummarizedExperiment-derived object with two additional slots, named features (storing a GRanges object corresponding to the imported genomic loci of interest) and width (storing the width at which each genomic locus is resized).\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\nlibrary(SummarizedExperiment)\nmethods::setClass(\n    \"AggregatedCoverage\", \n    contains = c(\"SummarizedExperiment\"), \n    slots = list(\n        features = 'GRanges', \n        width = 'integer'\n    )\n)\n\n\n\n\n\n\n\n\n\n\n\n\nQuestion\n\n\n\nYou can now manually create a new AggregatedCoverage object with the methods::new() function. Start by creating a SummarizedExperiment, and then fill out the two extra slots manually.\nTip: You can edit the slots using the object@slot &lt;- ... notation.\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\nAC &lt;- methods::new(\n    \"AggregatedCoverage\",\n    SummarizedExperiment::SummarizedExperiment(\n        rowData = rowData,\n        colData = colData,\n        assays = assays\n    )\n)\nAC@features &lt;- l[['features']]\nAC@width &lt;- as.integer(width)\nAC"
  },
  {
    "objectID": "content/exercises/Day4_S4-classes.html#build-an-aggregatedcoverage-constructor",
    "href": "content/exercises/Day4_S4-classes.html#build-an-aggregatedcoverage-constructor",
    "title": "4  Using S4 classes in a package",
    "section": "4.6 Build an AggregatedCoverage constructor",
    "text": "4.6 Build an AggregatedCoverage constructor\nInstead of manually using the methods::new() function, developers generally provide constructor functions to initiate an S4 object.\n\n\n\n\n\n\nQuestion\n\n\n\nWrap all the previous steps together in a single constructor function. By convention, this constructor function is named after the class of object it creates, here AggregatedCoverage.\nThe constructor should take three arguments:\n\nThe path to a single bigwig file;\nThe path to a single feature file (e.g. a bed or a narrowPeak file);\nA width to use to recover the coverage around the center of each feature.\n\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\nAggregatedCoverage &lt;- function(bw_file, features_file, width) {\n    colData &lt;- data.frame(\n        file = bw_file\n    )\n    rowData &lt;- data.frame(\n        distance = seq(-width/2, width/2-1, by = 1)\n    )\n    l &lt;- importFiles(bw_file, features_file, width = width) |&gt; \n        filterGRanges()\n    df &lt;- computeCoverage(l)\n    assays &lt;- list(\n        'mean' = matrix(df$mean, ncol = 1), \n        'upCI' = matrix(df$ci_high, ncol = 1), \n        'lowCI' = matrix(df$ci_low, ncol = 1)\n    )\n    AC &lt;- methods::new(\n        \"AggregatedCoverage\",\n        SummarizedExperiment::SummarizedExperiment(\n            rowData = rowData,\n            colData = colData,\n            assays = assays\n        )\n    )\n    AC@features &lt;- l[['features']]\n    AC@width &lt;- as.integer(width)\n    return(AC)\n}\nAC &lt;- AggregatedCoverage(bw_file, bed_file, width)\nAC"
  },
  {
    "objectID": "content/exercises/Day4_S4-classes.html#implement-this-class-and-constructor-in-the-package",
    "href": "content/exercises/Day4_S4-classes.html#implement-this-class-and-constructor-in-the-package",
    "title": "4  Using S4 classes in a package",
    "section": "4.7 Implement this class and constructor in the package",
    "text": "4.7 Implement this class and constructor in the package\n\n\n\n\n\n\nQuestion\n\n\n\n\nAdd the new class definition to your package source code in a file named AllClasses.R.\nAdd the new constructor to your package source code in a file named AggregatedCoverage.R.\nDocument each file accordingly."
  },
  {
    "objectID": "content/exercises/Day4_S4-classes.html#plot-aggregatedcoverage-objects",
    "href": "content/exercises/Day4_S4-classes.html#plot-aggregatedcoverage-objects",
    "title": "4  Using S4 classes in a package",
    "section": "4.8 Plot AggregatedCoverage objects",
    "text": "4.8 Plot AggregatedCoverage objects\nNow that we have a dedicated class to store aggregated coverage signal metrics over a set of genomic features of interest, we can provide a plot method that will be used to dispatch an AggregatedCoverage object to the right function when passed to the plot() generic function.\n\n\n\n\n\n\nQuestion\n\n\n\nCreate a method with setMethod(&lt;generic&gt;, &lt;class&gt;, &lt;fct&gt;) to plot AggregatedCoverage objects. You can reuse the plotCoverage() function defined in Day 2.\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\nsetMethod(\"plot\", \"AggregatedCoverage\", function(x) {\n    df &lt;- lapply(seq_len(ncol(x)), function(K) {\n        data.frame(\n            file = SummarizedExperiment::colData(x)$file[K],\n            K = K,\n            distance = SummarizedExperiment::rowData(x)$distance,\n            score = SummarizedExperiment::assay(x, 'score')[, K],\n            upCI = SummarizedExperiment::assay(x, 'upCI')[, K], \n            lowCI = SummarizedExperiment::assay(x, 'lowCI')[, K]\n        )\n    }) |&gt; dplyr::bind_rows()\n    ggplot(df, mapping = aes(\n        x = distance, y = score, ymin = lowCI, ymax = upCI,\n        col = basename(file), fill = basename(file)\n    )) +\n        geom_line() +\n        geom_ribbon(col = NA, alpha = 0.2)\n})\n\nplot(AC)\n\n\n\n\n\n\n\n\n\n\n\n\nQuestion\n\n\n\n\nAdd this method to your package source code in a file named AllMethods.R.\nDocument the method accordingly."
  },
  {
    "objectID": "content/exercises/Day5_package-integration.html#use-txdb-and-annotationhub-resources",
    "href": "content/exercises/Day5_package-integration.html#use-txdb-and-annotationhub-resources",
    "title": "5  Improving package integration",
    "section": "5.1 Use TxDb and AnnotationHub resources",
    "text": "5.1 Use TxDb and AnnotationHub resources\n\n5.1.1 TxDb database\nTxDb packages provide transcript annotations for model organisms.\n\n\n\n\n\n\nQuestion\n\n\n\nFind the TxDb package associated with UCSC-provided human gene annotations and install it.\nNote: You will need annotations from the hg19 human genome reference.\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\nBiocManager::install('TxDb.Hsapiens.UCSC.hg19.knownGene')\ntxdb &lt;- TxDb.Hsapiens.UCSC.hg19.knownGene::TxDb.Hsapiens.UCSC.hg19.knownGene\n\n\n\n\n\n\nGenomicFeatures is a package designed in order to facilitate conversion of TxDb objects into GRanges objects.\n\n\n\n\n\n\nQuestion\n\n\n\nWhich function from GenomicFeatures can be used to find the gene loci for all genes present in the human TxDb?\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\nGenomicFeatures::genes(txdb)\n\n\n\n\n\n\n\n\n5.1.2 AnnotationHub database\nAnnotationHub provides access to a large number of NGS datasets.\n\n\n\n\n\n\nQuestion\n\n\n\n\nCan you query the AnnotationHub to explore which datasets are available?\nWhich species are most represented?\n\nHint: The mcols() function will extract metadata associated with each entry in the AnnotationHub.\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\nah &lt;- AnnotationHub::AnnotationHub()\nah_df &lt;- AnnotationHub::mcols(ah)\ntable(ah_df$species) |&gt; sort() |&gt; tail(10)\ntable(ah_df$sourcetype) |&gt; sort() |&gt; tail(10)\n\n\n\n\n\n\nThe Epigenome roadmap project by the Broad Institute performed H3K4me3 ChIP-seq in human (among other marks). They generated a library labelled ‘LL227’ (GEO ID: GSM409308).\n\n\n\n\n\n\nQuestion\n\n\n\nCan you query the AnnotationHub for this library?\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\nAnnotationHub::query(ah, 'LL227')\n\n\n\n\n\n\n\n\n\n\n\n\nQuestion\n\n\n\n\nWhich signal corresponds to a ChIP-seq coverage track? How can you download the associated file?\n\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\nbw &lt;- ah[['AH34904']]\n\n\n\n\n\n\n\n\n\n\n\n\nQuestion\n\n\n\nWhat is the path of the file now stored on disk? How can you load the file in R?\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\nH3K4me3_bw &lt;- BiocIO::resource(bw)\ncov &lt;- BiocIO::import(bw)"
  },
  {
    "objectID": "content/exercises/Day5_package-integration.html#create-a-aggregatedcoverage-object",
    "href": "content/exercises/Day5_package-integration.html#create-a-aggregatedcoverage-object",
    "title": "5  Improving package integration",
    "section": "5.2 Create a AggregatedCoverage object",
    "text": "5.2 Create a AggregatedCoverage object\nThis AggregatedCoverage should contain aggregated H3K4me3 coverage over the TSSs of all forward human genes.\n\n\n\n\n\n\nQuestion\n\n\n\nThree arguments are required:\n\nbw_file: the path to a disk-stored coverage track file (e.g. the path to a bw file)\nfeatures_file: the path to a disk-stored features file (e.g. the path to a bed file)\nwidth: an integer specifying the width to use for each genomic locus\n\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\nPreparing bw_file argument:\n\n\nbw_file &lt;- H3K4me3_bw\n\n\nPreparing features_file argument:\n\n\nlibrary(GenomicRanges)\nlibrary(rtracklayer)\ntxdb &lt;- TxDb.Hsapiens.UCSC.hg19.knownGene::TxDb.Hsapiens.UCSC.hg19.knownGene\ngenes &lt;- GenomicFeatures::genes(txdb)\nforward_genes &lt;- genes[strand(genes) == '+']\nforward_tss &lt;- resize(forward_genes, width = 1, fix = 'start')\nexport(forward_tss, \"forward_tss.bed\")\nfeatures_file &lt;- 'forward_tss.bed'\n\n\nPreparing width argument:\n\n\nwidth &lt;- 8000L\n\n\n\n\n\n\nNow that all the arguments are ready, one can create an AggregatedCoverage object.\n\n\n\n\n\n\nQuestion\n\n\n\nCreate a AggregatedCoverage object summarizing the coverage of H3K4me3 over the TSSs (± 4kb) of all forward human genes.\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\nAC &lt;- AggregatedCoverage(bw_file, features_file, width = width)\nAC\n\n\n\n\n\n\n\n\n\n\n\n\nQuestion\n\n\n\nPlot the resulting AC object.\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\nplot(AC)"
  },
  {
    "objectID": "content/exercises/Day5_package-integration.html#add-a-vignette-to-your-package",
    "href": "content/exercises/Day5_package-integration.html#add-a-vignette-to-your-package",
    "title": "5  Improving package integration",
    "section": "5.3 Add a vignette to your package",
    "text": "5.3 Add a vignette to your package\nThe previous section reuses publicly available datasets and resources provided by Bioconductor to illustrate a use case for our package.\n\n\n\n\n\n\nQuestion\n\n\n\n\nInitiate a vignette using biocthis template;\nFill out the vignette header with relevant information (namely, the author field);\nDescribe the use case developed in the previous section.\n\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\nbiocthis::use_bioc_vignette(name = \"JacquesTestPackage\", title = \"Introduction to my package\")\n\n\n\n\n\n\n\n\n\n\n\n\nQuestion\n\n\n\nBecause the vignette relies on several packages, these need to be declared in the DESCRIPTION file. Make sure to update it.\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\nusethis::use_package(\"BiocStyle\")\nusethis::use_package(\"TxDb.Hsapiens.UCSC.hg19.knownGene\")\nusethis::use_package(\"GenomicFeatures\")\nusethis::use_package(\"GenomicRanges\")\nusethis::use_package(\"AnnotationHub\")\nusethis::use_package(\"BiocIO\")"
  },
  {
    "objectID": "content/exercises/Day5_package-integration.html#create-pkgdown-website-and-host-it-on-github",
    "href": "content/exercises/Day5_package-integration.html#create-pkgdown-website-and-host-it-on-github",
    "title": "5  Improving package integration",
    "section": "5.4 Create pkgdown website and host it on GitHub",
    "text": "5.4 Create pkgdown website and host it on GitHub\n\n\n\n\n\n\nQuestion\n\n\n\nCheck pkgdown documentation. What is the recommended way to add pkgdown support for your package?\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\nusethis::use_pkgdown()\n\n\n\n\n\n\n\n\n\n\n\n\nQuestion\n\n\n\nCan you now build your package? What does the building step do exactly?\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\npkgdown::build_site()\n\n\n\n\n\n\n\n\n\n\n\n\nQuestion\n\n\n\n\nComment on why setting up a pkgdown website helps with checking that your package reliably works?\nCommit your changes. Did that include your newly created docs folder? Why?\nRemove docs from .gitignore, then commit the docs/ folder with git.\nNow push all your commits to your github remote repository, navigate to its webpage, and enable Pages deployment from the docs folder. Check the resulting website."
  }
]